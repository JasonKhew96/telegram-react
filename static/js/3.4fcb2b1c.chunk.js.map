{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Popup/AlertDialog.js","Components/Popup/BlockSenderDialog.js","Components/Popup/ClearHistoryDialog.js","Utils/Language.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/InputPasswordDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/LeaveVoiceChatDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/OpenGameDialog.js","Components/Popup/OpenUrlDialog.js","Components/Popup/PinMessageDialog.js","Components/Popup/ReportChatDialog.js","Components/Popup/RequestUrlDialog.js","Components/Popup/UnpinMessageDialog.js","Components/Actions.js","Utils/Game.js","Assets/Icons/CallEnd.js","Components/Calls/GroupCallMicAmplitude.js","Utils/Text.js","Components/Calls/GroupCallSettings.js","Assets/Icons/More.js","Assets/Icons/Mic.js","Assets/Icons/MicOff.js","Components/Calls/CallPanel.js","Components/Calls/Call.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacyCalls.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Calls/BlobDrawable.js","Components/Calls/LineBlobDrawable.js","Components/Calls/TopBar.js","Components/Calls/GroupCallTopPanel.js","Assets/Icons/PlaylistEdit.js","Assets/Icons/Block.js","Assets/Icons/Broom.js","Assets/Icons/Phone.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Calls/GroupCallJoinPanelSubtitle.js","Components/Calls/GroupCallRecentParticipants.js","Components/Calls/GroupCallJoinPanel.js","Components/Message/MessageContext.js","Components/ColumnMiddle/InputBoxHints.js","Assets/Icons/ArrowTopRight.js","Assets/Icons/ShareFilled.js","Components/Message/Markup/KeyboardButton.js","Components/Message/Markup/KeyboardRow.js","Components/Message/Markup/ReplyMarkup.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/SelectChatPlaceholder.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/ForwardTargetChat.js","Components/Popup/ForwardDialog.js","Components/Calls/Button.js","Components/Calls/GroupCallMicButtonHint.js","Components/Calls/GroupCallMicButton.js","Components/Calls/GroupCallPanelButtons.js","Assets/Icons/AddMember.js","Assets/Icons/MicOutlined.js","Assets/Icons/MicOffOutlined.js","Components/Calls/GroupCallParticipant.js","Components/Calls/GroupCallParticipants.js","Assets/Icons/Tune.js","Components/Calls/GroupCallSettingsButton.js","Components/Calls/GroupCallPanel.js","Components/Calls/GroupCall.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Player/PipPlayer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","AlertDialog","handleClose","onClose","params","t","title","message","ok","cancel","getFormattedText","open","manager","modalManager","transitionDuration","classes","paper","DialogContentText","DialogActions","onClick","color","withTranslation","BlockSenderDialog","reportSpam","deleteChat","handleReportSpamChange","handleDeleteChatChange","sender","text","entities","reportText","user_id","LStore","formatString","getUserShortName","getSimpleMarkupEntities","getString","chat_id","location","getChatLocation","address","isChannelChat","aria-labelledby","FormControlLabel","control","Checkbox","checked","onChange","label","ClearHistoryDialog","handleRevokeChange","revoke","chatId","canBeDeletedForAllUsers","getChatShortTitle","ChatTile","isPrivateChat","style","marginLeft","prevChatId","ChatStore","get","can_be_deleted_for_all_users","sprintf","key","args","postProcess","cyrillicInput","isCyrillicPackId","packId","value","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","DeleteMessagesDialog","messageIds","count","confirm","isSupergroup","formatPluralString","prevMessageIds","messageId","MessageStore","InputPasswordDialog","handleChange","e","password","target","handleClickShowPassword","showPassword","getErrorMessage","error","startsWith","str","replace","parseInt","timeString","floor","loading","passwordHint","password_hint","errorMessage","FormControl","fullWidth","InputLabel","htmlFor","Boolean","Input","autoFocus","autoComplete","type","disabled","endAdornment","InputAdornment","position","IconButton","aria-label","edge","FormHelperText","LeaveChatDialog","getDeleteDialogText","chat","supergroup","SupergroupStore","supergroup_id","is_channel","LeaveVoiceChatDialog","discard","handleDiscardChange","NotificationTimer","handleTimer","Date","seconds","expire","timeout","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","setInterval","Typography","toFixed","CircularProgress","size","variant","OpenGameDialog","game","userId","getUserFullName","OpenUrlDialog","url","overflowWrap","PinMessageDialog","prevMessageId","ReportChatDialog","handleReport","ListItem","button","ListItemText","primary","RequestUrlDialog","value1","value2","handleValue1Change","handleValue2Change","domain","bot_user_id","request_write_access","text1","UserStore","getMyId","entities1","option1","option2","text2","entities2","display","flexDirection","UnpinMessageDialog","Actions","leaveChat","clearHistory","deleteMessages","pinMessage","unpinMessage","alert","openUrlAlert","openGameAlert","requestUrlAlert","inputPasswordAlert","requestBlockSenderAlert","leaveVoiceChatAlert","reportChatAlert","onClientUpdateReportChat","update","onClientUpdateBlockSender","onClientUpdateInputPasswordAlert","onPassword","onClientUpdateLeaveVoiceChatAlert","onClientUpdateOpenGameAlert","isVerified","handleOpenGameContinue","onClientUpdateOpenUrlAlert","ask","handleOpenUrlContinue","onClientUpdateRequestUrlAlert","onClientUpdateSnackbar","enqueueSnackbar","closeSnackbar","action","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","onClientUpdateAlert","onClientUpdateUnpinMessage","isMeChat","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","onClientUpdateLeaveChat","onClientUpdateClearHistory","handleClearHistoryContinue","AppStore","getChatId","request","remove_from_chat_list","handleScheduledAction","handleLeaveContinue","a","undo","getLeaveChatNotification","requests","isChatMember","push","isCreator","status","is_member","handleDeleteMessagesContinue","clearSelection","message_ids","clientUpdateType","snackKey","clientUpdate","inProgress","addScheduledAction","Number","MAX_VALUE","persist","removeScheduledAction","pinMessageAction","canPinMessages","unpinMessageAction","closePinned","unpinAllMessages","data","getClientData","clientData","unpinned","handleAlertContinue","onResult","event","preventDefault","newWindow","window","opener","sharedPreferences","JSON","parse","localStorage","getItem","existing","hash","addHash","encodeURIComponent","chars","array","Uint8Array","crypto","getRandomValues","setItem","stringify","index","indexOf","curHash","substring","openGameInBrowser","handleRequestUrlContinue","values","buttonId","message_id","button_id","allow_write_access","httpUrl","handleInputPasswordContinue","onCloseDialog","handleBlockSenderContinue","blockSender","reason","reportChat","canDeleteChat","handleLeaveVoiceChatContinue","resultParams","handleReportChatContinue","showSnackbar","Close","on","off","PureComponent","enhance","compose","withSnackbar","GroupCallMicAmplitude","audioContext","AudioContext","webkitAudioContext","timer","stream","addAnalyser","removeAnalyser","streamSource","createMediaStreamSource","analyser","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","fftSize","connect","analyse","disconnect","frequencyBinCount","getByteFrequencyData","getAmplitude","bars","viewBox","fill","strokeWidth","width","copy","navigator","clipboard","writeText","console","copyOld","element","successful","document","createElement","contentEditable","readOnly","all","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","focus","select","execCommand","Error","removeChild","GroupCallSettings","onKeyDown","modals","isComposing","openDeviceSelect","handleCloseDeviceSelect","stopPropagation","handleCancel","onUpdateGroupCall","groupCallId","group_call","muteNewParticipants","mute_new_participants","allowedChangeMuteNewParticipants","allowed_change_mute_new_participants","onDeviceChange","mediaDevices","enumerateDevices","devices","CallStore","outputDeviceId","getOutputDeviceId","filter","kind","deviceId","inputAudioDeviceId","getInputAudioDeviceId","inputAudio","inputVideoDeviceId","getInputVideoDeviceId","inputVideo","handleOutputChange","handleCopyLink","currentGroupCall","username","getChatUsername","telegramUrlOption","handleOpenDeviceSelect","handleSelectDevice","setOutputDeviceId","streamManager","inputAudioStream","getAudioTracks","getStream","audio","exact","video","currentCall","inputVideoStream","handleEnd","call","leaveGroupCall","handleMuteNewParticipants","toggleMuteNewParticipants","handleDone","setInputAudioDeviceId","setInputVideoDeviceId","keyboardHandler","KeyboardHandler","addEventListener","KeyboardManager","add","removeEventListener","remove","closeStreams","callId","outputDeviceInfo","find","outputString","inputAudioDeviceInfo","inputAudioString","inputVideoDeviceInfo","inputVideoString","items","map","canManage","canManageVoiceChats","onMouseDown","Switch","disableRipple","root","switchBase","colorSecondary","track","prevGroupCallId","prevCallId","muteSettings","groupCall","CallPanel","onClientUpdateCallMediaIsMuted","currentCallId","isMuted","otherAudioEnabled","otherVideoEnabled","handleUpdateCall","forceUpdate","handleFullScreenChange","fullScreen","isFullScreen","handleClick","handleAccept","p2pAcceptCall","handleDiscard","p2pHangUp","handleOpenSettings","handleCloseContextMenu","openSettings","handleCloseSettings","handleShareScreen","screenStream","p2pStopScreenSharing","p2pStartScreenSharing","handleFullScreen","setTimeout","exitFullscreen","requestFullscreen","handleOpenContextMenu","currentTarget","anchorEl","handleAudio","audioEnabled","p2pAudioEnabled","handleVideo","videoEnabled","p2pVideoEnabled","callPanelRef","createRef","contextMenu","left","callPanel","current","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","method","mozRequestFullScreen","webkitRequestFullscreen","mozCancelFullScreen","webkitExitFullscreen","p2pGet","is_outgoing","screenSharing","classNames","ref","p2pGetCallStatus","Popover","container","getContentAnchorEl","disableRestoreFocus","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","ListItemClasses","focusVisible","TouchRippleProps","child","rippleVisible","onDoubleClick","autoPlay","muted","MicOff","CallEnd","p2pIsCallReady","Mic","Call","onClientUpdateGroupCallFullScreen","fullscreen","closeGroupCallPanel","handleMouseDown","nativeEvent","which","getElementById","mouseDownRoot","pageX","pageY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","onWindowResize","player","oldLeft","oldTop","normalizePosition","startLeft","startTop","setPosition","pipParams","documentElement","clientWidth","clientHeight","prevLeft","prevTop","checkGlue","playerWidth","playerHeight","documentWidth","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","clamp","glueTop","glueBottom","DialogTitle","onFastUpdatingComplete","onUpdateChatTitle","nextProps","nextState","showSavedMessages","isChatVerified","getChatTitle","defaultProps","DialogStatus","onUpdateUserStatus","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","basic_group","onUpdateSupergroup","externalSubtitle","Chat","onSelect","onTileSelect","showStatus","big","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","Notifications","onUpdateChatNotificationSettings","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","alignItems","ListItemIcon","tabIndex","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","supergroupMembers","photoAndVideo","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","padding","scroll","filtersRef","item","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","r","set","ContextMenu","handleOpenMessage","openChat","handleForward","forwardMessages","handleDelete","anchorPosition","showOpenMessage","can_be_forwarded","can_be_deleted_only_for_self","anchorReference","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","fileId","photo","clientX","clientY","nextContext","FileStore","openMedia","minithumbnail","miniSrc","thumbSrc","getSrc","src","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","sizes","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","thumbnail","file","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","tileColor","abs","charCodeAt","draggable","alt","SharedLink","webPage","caption","decodedUrl","decodeURI","hostname","URL","split","punycode","ToUnicode","content","description","animation","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","isValidEntity","showLinks","oneLinkText","offset","nonEmptyUrlEntities","entityText","trim","links","mail","typeUrl","getTitleFromUrl","SafeLink","getFirstLetter","entity","SharedVoiceNote","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","getDurationString","overScanCount","SharedMediaContent","some","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","completed","migrateCompleted","getFilter","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","query","sender_user_id","from_message_id","limit","finally","currentParams","total_count","concat","isValidMessage","incompleteResults","setItems","store","getStore","loadMessageContents","onLoadMigratedNext","handleOpen","popup","openUser","loadUsersContent","loadChatsContent","renderIdsList","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","height","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","voice_note","ChatDetails","loadContent","loadChatContents","getGroupChatMembers","getChatFullInfo","handleChatIdHint","handleUsernameHint","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","handleTabClick","divider","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","theme","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isGroupChat","users","member","user","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","toLowerCase","onScroll","List","wordWrap","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","handleSelect","chatIds","getChatUserId","offset_chat_id","chat_ids","minHeight","chats","SharedMediaHeader","handleSearch","searchInputRef","innerText","onSearch","onCloseSearch","openSearch","handleKeyDown","keyCode","handleKeyUp","innerHTML","handlePaste","plainText","clipboardData","getData","ANIMATION_DURATION_200MS","placeholder","suppressContentEditableWarning","onKeyUp","onPaste","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","force","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","chatList","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","Status","onUpdateMessageSendAcknowledged","sendingState","old_message_id","sending_state","newMessageId","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","Pending","Sent","Succeeded","isMessageUnread","DialogMeta","getLastMessageDate","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","handleMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","offset_order","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","dialog","hidden","isLastPinned","ApplicationStore","deleteChatTitle","getDeleteChatTitle","isSelected","isUnread","isArchived","showOnline","showGroupCall","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","scrollBottom","max","removeItem","clear","reset","archiveChatIds","meChat","cacheContacts","contacts","cache","authorization_state","CacheManager","cacheKey","filesKey","contactsKey","onClientUpdate","clearDataUrls","addTdLibListener","removeTdLibListener","useTestDC","parameters","STORAGE_CACHE_TEST_KEY","STORAGE_CACHE_KEY","STORAGE_CONTACTS_TEST_KEY","STORAGE_CONTACTS_KEY","STORAGE_FILES_TEST_KEY","STORAGE_FILES_KEY","filtersKey","STORAGE_FILTERS_TEST_KEY","STORAGE_FILTERS_KEY","registerKey","STORAGE_REGISTER_TEST_KEY","STORAGE_REGISTER_KEY","saveInternal","leading","trailing","promises","load","catch","Promise","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","small","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","EventEmitter","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","openSupportChat","searchChat","getAuthorizationState","showClose","mainMenuControl","Menu","disableAutoFocusItem","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","openChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","chatListEquals","scrollToTop","loadFirstSlice","hiddenChats","delete","initDB","saveCache","onSaveCache","onUpdateChatPosition","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","stub","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","offsetChat","log","shift","replaceChats","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","shortTitle","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","selected","tile","UserTile","SectionHeader","command","multiline","children","Search","blur","concatSearchResults","arr","j","searchText","sessionId","savedMessages","localPromise","latinText","latinLocalPromise","cyrillicText","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","substr","SEARCH_GLOBAL_TEXT_MIN","globalPromises","globalPromise","latinTrimmedText","USERNAME_LENGTH_MIN","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","savedMessagesPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","logOut","More","LogOut","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","loadChatContent","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","wrapperRef","searchRef","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","play","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","chat_filters","startIcon","Wallpaper","loaded","onClientUpdateDocumentThumbnailBlob","wallpaper","handleLoad","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","themeOptions","palette","disableEnforceFocus","aria-describedby","component","FormLabel","focused","RadioGroup","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","sendByCtrlEnterOption","SEND_BY_CTRL_ENTER_KEY","sendByCtrlEnter","Colorize","handleSetOption","inputProps","isMacOS","Language","languages","language_packs","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblockUser","unblockSender","senders","PrivacyCalls","prevAllowCalls","prevAllowP2PCalls","handleChangeAllowCalls","allowCallsValue","handleChangeAllowP2PCalls","allowP2PCallsValue","setSettings","allowCalls","allowP2PCalls","prevAllowCallsValue","rules","added","setting","prevAllowP2PCallsValue","PrivacySecurity","openActiveSessions","openBlockedUsers","openCalls","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","closeCalls","sessionsCount","usersCount","RemoveMember","Device","Settings","onUpdateChatPhoto","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","AddParticipants","newArray","selectedItems","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","handleSaveCache","prevShowArchive","showArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","archiveTitle","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","prevOpen","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","diff","onClientUpdateRecordStop","clearTimeout","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","altKey","ctrlKey","metaKey","code","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","link","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendText","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","chatSelectOptions","switchInline","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","reply_to_message_id","input_message_text","disable_web_page_preview","clear_draft","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","input_message_content","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","getTextAndCaretPosition","_range","cloneRange","selectNodeContents","endOffset","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","oncanplay","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","usernameOnly","searchResultUsernames","cancelDelayRunnable","searchPosition","lastText","lastUsernameOnly","resultStartPosition","resultLength","foundType","ch","lastPosition","closeHints","usersMap","usernameString","hasSpace","newResult","newResultsMap","object","isMeUser","isDeletedUser","showUsersResult","message_thread_id","notifyDataSetChanged","notify","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","onUpdateChatLastMessage","hasLastMessage","onUpdateChatIsBlocked","isBlocked","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","handleUnblock","handleStartBot","botStartMessage","botUserId","parameter","sendBotStartMessage","isBotChat","permissions","can_send_messages","SCALE_BIG","SCALE_SMALL","SCALE_BIG_MIN","SCALE_SMALL_MIN","FORM_BIG_MAX","FORM_SMALL_MAX","LIGHT_GRADIENT_SIZE","rotateZ","angle","originX","originY","X","Y","BlobDrawable","maxRadius","minRadius","cubicBezierK","N","L","tan","radius","radiusNext","angleNext","progress","speed","pointStart","pointEnd","generateBlob","angleDif","radDif","random","amplitude","speedScale","cX","cY","canvas","paint","getContext","ctx","beginPath","progressNext","r1","r2","angle1","angle2","l","mapPoints","moveTo","bezierCurveTo","closePath","points","result1","result2","LineBlobDrawable","bottom","pinnedTop","progressToPinned","lineTo","MUTE_BUTTON_STATE_UNMUTE","MUTE_BUTTON_STATE_MUTE","MUTE_BUTTON_STATE_CONNECTING","MUTE_BUTTON_STATE_MUTED_BY_ADMIN","WeavingState","stateId","shader","createGradient","fillStyle","getGradientFromType","dt","x0","y0","gradient","createLinearGradient","addColorStop","TopBar","handleDevicePixelRatioChanged","scale","devicePixelRatio","topBar","handleResize","resizeHandler","resizing","resizeCanvas","invokeDraw","handleBlur","raf","mounted","lbd","lbd1","lbd2","currentState","previousState","progressToState","newTime","lastUpdateTime","animateToAmplitude","animateAmplitudeDiff","amplitude2","animateAmplitudeDiff2","top1","top2","clearRect","alpha","paint1","globalAlpha","setCurrentState","animated","states","matchMedia","setAmplitude","GroupCallTopPanel","onClientUpdateGroupCallAmplitudeChange","amplitudes","topBarRef","onUpdateGroupCallParticipant","group_call_id","participant","getCallStatus","connected","switchButtonState","onClientUpdateGroupCall","onClientUpdateGroupCallConnectionState","saveMessagesScrollPosition","restoreMessagesScrollPosition","handleMicrophone","can_unmute_self","changeUserMuted","handleLeave","handleOpenGroupCall","openGroupCallPanel","elements","getElementsByClassName","openPanel","offsetHeightDiff","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","handleSwitchBlocked","getChatSender","requestBlockSender","handleStartGroupCall","showAlert","startGroupCall","handleStartP2PCall","p2pStartCall","openReportChat","voice_chat_group_call_id","canClearHistory","hasOnePinnedMessage","switchBlocked","canSwitchBlocked","manageVoiceChats","reported","canBeReported","called","canBeCalled","p2pCallsEnabled","Broom","Block","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","timingFunction","animateOnMount","prevItem","AnimatedCounter","counter","reverse","counterStr","prevCounter","HeaderCommand","canBeDeleted","canBeForwarded","canReport","PinnedMessageBorder","drawRect","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","text1Element","text2Element","currentMessageId","currentPrevMessageId","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","clickedPinned","handleEditClick","prevMessage","prevContent","prevPropsChatId","Header","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","handlePinClick","getConnectionState","showProgressAnimation","HeaderProgress","PlaylistEdit","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","onMouseEnter","onMouseLeave","visibility","Slider","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","handlePlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","rate","Time","onClientUpdateMediaTime","currentTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","HeaderPlayer","handleSeekForward","videoRef","handleSeek","PLAYER_SEEK_STEP_BIG","handleSeekBackward","handleSeekTo","seekTime","paused","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","getCurrentTime","playing","srcSource","pause","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","setCurrentTime","handleLoadedMetadata","hasVoice","buffered","videoWidth","videoHeight","captureStream","mozCaptureStream","handleProgress","handleTimeUpdate","handleCanPlay","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","remote","unique_id","clearCurrentTime","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","disablePictureInPicture","onLoadedMetadata","onCanPlay","onPlay","onPause","onEnded","onTimeUpdate","onProgress","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","for_album","for_comment","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canSendMessages","canBePinned","isServiceMessage","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","Meta","ids","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","onDateClick","isOutgoing","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","isCall","isCallMessage","albumHistoryEquals","AlbumItem","getAlbumItem","inlineMeta","getWebPage","Photo","Video","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","DayMeta","onClientUpdateLanguage","getFullYear","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","end","sum","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","maxHeight","attempt","minLineHeight","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","round","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","lastHighlighted","oldEmojiMatches","emojiMatches","grouped","calculate","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","handleMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","GroupCallJoinPanelSubtitle","participantCount","participant_count","participantsOnly","GroupCallRecentParticipants","speakers","recent_speakers","updateSpeakers","PROFILE_PHOTO_PRELOAD_TIME_MS","lhs","rhs","is_speaking","speakersEquals","speaking","prevId","GroupCallJoinPanel","handleUpdateChatVoiceChat","handleUpdateGroupCall","handleClientUpdateGroupCall","isCurrent","is_joined","joinGroupCall","MessageContext","createContext","withMessage","MessageComponent","Consumer","handleCallbackQueryAnswer","via_bot_user_id","show_alert","showOpenGameAlert","is_verified","showOpenUrlAlert","tryTelegraph","payload","game_short_name","short_name","passwordState","has_password","showInputPasswordAlert","onError","forward_text","skip_confirm","showRequestUrlAlert","in_current_chat","inline","setText","openChatSelect","ArrowTopRight","ShareFilled","KeyboardRow","row","ReplyMarkup","markup","rows","Provider","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","totalLength","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","updateMessageContent","handleUpdateMessageContentAndEditedOnce","updateMessageEdited","newEmojiMatches","getEmojiMatches","startMessageEditing","stopMessageEditing","mouseDown","mouseOut","openReply","reply_markup","isMetaBubble","getMessageStyle","showMeta","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateStartMessageEditing","history","scrollBottomAfterEditing","onClientUpdateStopMessageEditing","scrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insert","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","supergroupId","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","types","handleScrollDownClick","lastReply","pop","separatorMessageId","scrollDownButtonRef","historyEquals","ignoreUnread","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getMonth","media_album_id","ttl","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","inputMessageContent","forward","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","handleInViewport","elementRect","contentRect","getBoundingClientRect","STICKER_SET","inViewportFunc","SelectChatPlaceholder","closeChatSelect","DialogDetails","onClientUpdateClearOpenChatOptions","chatOpenOptions","onClientUpdateChatSelect","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","ForwardTargetChat","ForwardDialog","getPublicMessageLink","getChatsPromise","publicMessageLink","getForwardPhotoSize","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","handleSearchKeyDown","handleSearchKeyUp","searchResults","globalSearchResults","chatsSource","hasSearchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","OvershootInterpolator","tension","mTension","DecelerateInterpolator","factor","mFactor","pow","AccelerateInterpolator","mDoubleFactor","createRadialGradient","RadialProgressView","setUseSelfAlpha","useSelfAlpha","setAlpha","setNoProgress","noProgress","setProgress","currentProgress","animatedProgress","progressAnimationStart","progressTime","updateAnimation","radOffset","rotationTime","circle","circleProgress","currentProgressTime","risingTime","risingCircleLength","currentCircleLength","accelerateInterpolator","getInterpolation","decelerateInterpolator","old","progressDiff","setSize","setStrokeWidth","lineWidth","updateProgressPaint","setProgressColor","progressColor","toCircle","circleRect","translate","radStart","drawingCircleLength","radLength","arc","progressPaint","restore","isCircle","lineCap","strokeStyle","Button","switchProgress","tinyWaveDrawable","buttonDefaultRadius","buttonRadius","bigWaveDrawable","canSwitchProgress","radialProgressView","invalidateColors","lightingColor","fillColors","colorsTmp","oldLight","newLight","blendARGB","currentLightColor","radialGradient","showWaves","showLighting","showWavesProgress","showLightingProgress","showWavesProgressInterpolated","overshootInterpolator","resetTransform","paintTmp","scaleLight","drawCircle","updateMuteButton","muteButtonState","updateMuteButtonState","radialPaint","generateInitBlob","colorsToSet","color1","color2","c1","c2","inverseRatio","g","strToHex","justifyContent","cursor","GroupCallMicButtonHint","GroupCallMicButton","buttonRef","is_muted","GroupCallPanelButtons","GroupCallParticipant","handleOpenProfile","handleSendMessage","handleUnmute","is_muted_for_all_users","is_muted_for_current_user","can_be_muted_for_all_users","can_be_unmuted_for_all_users","prevUserId","participants","GroupCallParticipants","participantsMap","updateParticipants","preloadContent","manageGroupCalls","AddMember","GroupCallSettingsButton","Tune","GroupCallPanel","GroupCall","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","videoInfo","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","thumb","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","active","InstantViewStore","getCurrent","oldUrl","scrollToHash","handleBack","instantViewerRef","articleRef","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","scrollIntoView","getInnerBlocks","IVContext","IV_PHOTO_SIZE","prevInstantView","MediaInfo","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","PipPlayer","onClientUpdateMediaShortcut","PLAYER_SEEK_STEP_SMALL","handleVolume","PLAYER_VOLUME_STEP","handleSeekProgress","PLAYER_PLAYBACKRATE_STEP","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","handleLoadedData","waiting","handlePause","handleVolumeChange","onVolumeChange","handleWaiting","startStopPlayer","handlePlayerMouseDown","pip","offsetX","offsetY","draggingTime","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","mouseOverTimeout","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","connectPlayer","disconnectPlayer","pipPlayer","onloadedmetadata","onloadeddata","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","bufferedTime","Player","getBufferedTime","bufferedValue","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","onMouseMove","onBlur","Hint","rail","onChangeCommitted","FullScreen","Progress","prevVideo","ProfileMediaViewerContent","onClientUpdateChatBlob","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateCallPanel","onClientUpdateGroupCallPanel","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/3.4fcb2b1c.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport { getFormattedText } from '../../Utils/Message';\nimport './AlertDialog.css';\n\nclass AlertDialog extends React.Component {\n\n    handleClose = result => {\n        const { onClose } = this.props;\n\n        onClose && onClose(result);\n    };\n\n    render() {\n        const { params, t } = this.props;\n        if (!params) return null;\n\n        let { title, message, ok, cancel } = params;\n\n        if (message['@type'] === 'formattedText') {\n            message = getFormattedText(message, t, {});\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {message}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    { cancel && (\n                        <Button onClick={() => this.handleClose(false)} color='primary'>\n                            {cancel}\n                        </Button>\n                    )}\n                    { ok && (\n                        <Button onClick={() => this.handleClose(true)} color='primary'>\n                            {ok}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nAlertDialog.propTypes = {\n    params: PropTypes.object\n};\n\nexport default withTranslation()(AlertDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport { getChatLocation, isChannelChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './BlockSenderDialog.css';\n\nclass BlockSenderDialog extends React.Component {\n    state = {\n        reportSpam: true,\n        deleteChat: true\n    };\n\n    handleReportSpamChange = () => {\n        const { reportSpam } = this.state;\n\n        this.setState({\n            reportSpam: !reportSpam\n        });\n    };\n\n    handleDeleteChatChange = () => {\n        const { deleteChat } = this.state;\n\n        this.setState({\n            deleteChat: !deleteChat\n        });\n    };\n\n    render() {\n        const { sender, onClose, t } = this.props;\n        if (!sender) return null;\n\n        const { reportSpam, deleteChat } = this.state;\n\n        let title = null;\n        let text = null;\n        const entities = [];\n        let reportText = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                const { user_id } = sender;\n\n                title = LStore.formatString('BlockUserTitle', getUserShortName(user_id, t));\n                text = LStore.formatString('BlockUserAlert', getUserShortName(user_id, t));\n                text = getSimpleMarkupEntities(text, entities);\n                reportText = LStore.getString('BlockContact');\n                break;\n            }\n            case 'messageSenderChat': {\n                const { chat_id } = sender;\n\n                const location = getChatLocation(chat_id);\n                if (location) {\n                    title = LStore.getString('ReportUnrelatedGroup');\n                    if (location.address) {\n                        text = LStore.formatString('ReportUnrelatedGroupText', location.address);\n                        text = getSimpleMarkupEntities(text, entities);\n                    } else {\n                        text = LStore.getString('ReportUnrelatedGroupTextNoAddress');\n                    }\n                } else {\n                    title = LStore.getString('ReportSpamTitle');\n                    if (isChannelChat(chat_id)) {\n                        text = LStore.getString('ReportSpamAlertChannel');\n                    } else {\n                        text = LStore.getString('ReportSpamAlertGroup');\n                    }\n                }\n                reportText = LStore.getString('ReportChat');\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {title}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {getFormattedText({ '@type': 'formattedText', text, entities })}\n                    </DialogContentText>\n                    { sender['@type'] === 'messageSenderUser' && (\n                        <div className='block-sender-params'>\n                            <FormControlLabel\n                                control={<Checkbox checked={reportSpam} onChange={this.handleReportSpamChange} color='primary' />}\n                                label={t('DeleteReportSpam')}\n                            />\n                            <FormControlLabel\n                                control={<Checkbox checked={deleteChat} onChange={this.handleDeleteChatChange} color='primary' />}\n                                label={t('DeleteThisChat')}\n                            />\n                        </div>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, sender && sender['@type'] === 'messageSenderUser' ? { reportSpam, deleteChat } : null)} color='secondary'>\n                        {reportText}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nBlockSenderDialog.propTypes = {\n    sender: PropTypes.object\n};\n\nexport default withTranslation()(BlockSenderDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\n\nclass ClearHistoryDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        const chat = ChatStore.get(chatId);\n\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\n\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <div>\n                            <DialogContentText id='delete-dialog-description'>\n                                Are you sure you want clear history?\n                            </DialogContentText>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all members'\n                                        }\n                                        style={{ marginLeft: 0 }}\n                                    />\n                                )\n                            }\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nexport function sprintf(t, key, ...args) {\n    return t(key, { postProcess: 'sprintf', sprintf: args });\n}\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { sprintf } from '../../Utils/Language';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass DeleteMessagesDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageIds } = props;\n        const { prevChatId, prevMessageIds } = state;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageIds,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, messageIds, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let confirm = count === 1 ? t('AreYouSureDeleteSingleMessage') : t('AreYouSureDeleteFewMessages');\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\n            confirm = count === 1 ? t('AreYouSureDeleteSingleMessageMega') : t('AreYouSureDeleteFewMessagesMega');\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('DeleteMessagesTitle', LStore.formatPluralString('messages', count))}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {confirm}\n                    </DialogContentText>\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\n                        <FormControlLabel\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\n                            label={\n                                isPrivateChat(chatId)\n                                    ? sprintf(t, 'DeleteForUser', getChatShortTitle(chatId, false, t))\n                                    : t('DeleteForAll')\n                            }\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDeleteMessagesDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(DeleteMessagesDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './InputPasswordDialog.css';\n\nclass InputPasswordDialog extends React.Component {\n\n    state = { };\n\n    handleChange = e => {\n        this.password = e.target.value;\n    };\n\n    handleClickShowPassword = () => {\n        const { showPassword } = this.state;\n\n        this.setState({ showPassword: !showPassword });\n    };\n\n    getErrorMessage = error => {\n        const { t } = this.props;\n\n        if (!error) return null;\n\n        if (error.message === 'PASSWORD_HASH_INVALID') {\n            return t('InvalidPassword');\n        } else if (error.message.startsWith('Too Many Requests: retry after ')) {\n            const str = error.message.replace('Too Many Requests: retry after ', '');\n            try {\n                const time = parseInt(str);\n                const timeString = time < 60\n                    ? LStore.formatPluralString('Seconds', time)\n                    : LStore.formatPluralString('Minutes', Math.floor(time / 60));\n\n                return LStore.formatString('FloodWaitTime', timeString);\n            } catch (e) {\n                return error.message;\n            }\n        }\n\n        return error.message;\n    }\n\n    render() {\n        const { state, error, onClose, t } = this.props;\n        if (!state) return null;\n\n        const { showPassword, loading } = this.state;\n        const { password_hint: passwordHint } = state;\n\n        const errorMessage = this.getErrorMessage(error);\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('TwoStepVerificationTitle')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {t('PleaseEnterCurrentPasswordTransfer')}\n                    </DialogContentText>\n                    <FormControl className='auth-input' fullWidth>\n                        <InputLabel htmlFor='adornment-password' error={Boolean(error)}>{t('LoginPassword')}</InputLabel>\n                        <Input\n                            fullWidth\n                            autoFocus\n                            autoComplete='off'\n                            id='adornment-password'\n                            type={showPassword ? 'text' : 'password'}\n                            disabled={loading}\n                            error={Boolean(error)}\n                            onChange={this.handleChange}\n                            endAdornment={\n                                <InputAdornment position='end'>\n                                    <IconButton\n                                        aria-label='Toggle password visibility'\n                                        onClick={this.handleClickShowPassword}\n                                        edge='end'>\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                        />\n                        {passwordHint && <FormHelperText id='password-hint-text'>{passwordHint}</FormHelperText>}\n                        <FormHelperText id='password-error-text' error>{errorMessage || ' '}</FormHelperText>\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, this.password)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nInputPasswordDialog.propTypes = {\n    state: PropTypes.object,\n    error: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(InputPasswordDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './LeaveVoiceChatDialog.css';\n\nclass LeaveVoiceChatDialog extends React.Component {\n    state = {\n        discard: false\n    };\n\n    handleDiscardChange = () => {\n        const { discard } = this.state;\n\n        this.setState({\n            discard: !discard\n        });\n    };\n\n    render() {\n        const { onClose, t } = this.props;\n        const { discard } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {LStore.getString('VoipGroupLeaveAlertTitle')}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.getString('VoipGroupLeaveAlertText')}\n                    </DialogContentText>\n                    <FormControlLabel\n                        control={<Checkbox checked={discard} onChange={this.handleDiscardChange} color='primary' />}\n                        label={t('VoipGroupEndChat')}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, { discard })} color='secondary'>\n                        {t('VoipGroupLeave')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nLeaveVoiceChatDialog.propTypes = {\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveVoiceChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { getUserFullName } from '../../Utils/User';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenGameDialog.css';\n\nclass OpenGameDialog extends React.Component {\n    render() {\n        const { game, params, onClose, t } = this.props;\n        if (!game) return null;\n\n        const { userId } = params;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.formatString('BotPermissionGameAlert', getUserFullName(userId))}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenGameDialog.propTypes = {\n    game: PropTypes.object,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenGameDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenUrlDialog.css';\n\nclass OpenUrlDialog extends React.Component {\n    render() {\n        const { url, onClose, t } = this.props;\n        if (!url) return null;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport './PinMessageDialog.css';\n\nclass PinMessageDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageId,\n                revoke: !isPrivateChat(chatId)\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { revoke } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        let text = '';\n        switch (chat.type['@type']) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                text = t('PinMessageAlertChat');\n                break;\n            }\n            case 'chatTypeBasicGroup': {\n                text = t('PinMessageAlert');\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                if (isChannelChat(chatId)) {\n                    text = t('PinMessageAlertChannel');\n                } else {\n                    text = t('PinMessageAlert');\n                }\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                    <>\n                        {\n                            isPrivateChat(chatId) && (\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\n                                />\n                            )\n                        }\n                    </>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(PinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { modalManager } from '../../Utils/Modal';\nimport './ReportChatDialog.css';\n\nclass ReportChatDialog extends React.Component {\n\n    handleReport = type => {\n        const { onClose } = this.props;\n\n        onClose && onClose(true, { '@type': type });\n    }\n\n    render() {\n        const { onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('ReportChat')}</DialogTitle>\n                <div className='report-chat-dialog-content'>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonSpam')}>\n                        <ListItemText primary={t('ReportChatSpam')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonFake')}>\n                        <ListItemText primary={t('ReportChatFakeAccount')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonViolence')}>\n                        <ListItemText primary={t('ReportChatViolence')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonPornography')}>\n                        <ListItemText primary={t('ReportChatPornography')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonChildAbuse')}>\n                        <ListItemText primary={t('ReportChatChild')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonCustom')}>\n                        <ListItemText primary={t('ReportChatOther')}/>\n                    </ListItem>\n                </div>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('ReportChat')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nReportChatDialog.propTypes = {\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ReportChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport { getUserFullName, getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './RequestUrlDialog.css';\n\nclass RequestUrlDialog extends React.Component {\n    state = {\n        value1: true,\n        value2: true\n    };\n\n    handleValue1Change = () => {\n        const { value1 } = this.state;\n\n        this.setState({ value1: !value1 });\n    };\n\n    handleValue2Change = () => {\n        const { value2 } = this.state;\n\n        this.setState({ value2: !value2 });\n    };\n\n    render() {\n        const { url, params, onClose, t } = this.props;\n        if (!url) return null;\n\n        const { value1, value2 } = this.state;\n\n        const { result } = params;\n        if (!result) return null;\n\n        const { domain, bot_user_id, request_write_access } = result;\n\n        let text1 = LStore.formatString('OpenUrlOption1', domain, getUserFullName(UserStore.getMyId()));\n        const entities1 = [];\n        text1 = getSimpleMarkupEntities(text1, entities1);\n        const option1 = (\n            <FormControlLabel\n                control={<Checkbox color='primary' checked={value1} onChange={this.handleValue1Change}/>}\n                label={getFormattedText({ '@type': 'formattedText', text: text1, entities: entities1 }, t)}\n            />\n        );\n\n        let option2 = null;\n        if (request_write_access) {\n            let text2 = LStore.formatString('OpenUrlOption2', getUserShortName(bot_user_id, t));\n            const entities2 = [];\n            text2 = getSimpleMarkupEntities(text2, entities2);\n            option2 = (\n                <FormControlLabel\n                    control={<Checkbox color='primary' checked={value2} onChange={this.handleValue2Change}/>}\n                    label={getFormattedText({ '@type': 'formattedText', text: text2, entities: entities2 }, t)}\n                />\n            );\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ display: 'flex', flexDirection: 'column', overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                    {option1}\n                    {option2}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true, { value1, value2 })} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nRequestUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(RequestUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport './UnpinMessageDialog.css';\n\nclass UnpinMessageDialog extends React.Component {\n\n    render() {\n        const { messageId, onClose, t } = this.props;\n\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nUnpinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(UnpinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AlertDialog from './Popup/AlertDialog';\nimport BlockSenderDialog from './Popup/BlockSenderDialog';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\nimport InputPasswordDialog from './Popup/InputPasswordDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport LeaveVoiceChatDialog from './Popup/LeaveVoiceChatDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport OpenGameDialog from './Popup/OpenGameDialog';\nimport OpenUrlDialog from './Popup/OpenUrlDialog';\nimport PinMessageDialog from './Popup/PinMessageDialog';\nimport ReportChatDialog from './Popup/ReportChatDialog';\nimport RequestUrlDialog from './Popup/RequestUrlDialog';\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\nimport { blockSender, pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\nimport { canDeleteChat, canPinMessages, getChatLocation, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\nimport { clearSelection, closePinned, showSnackbar } from '../Actions/Client';\nimport { openGameInBrowser } from '../Utils/Game';\nimport { reportChat } from '../Actions/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport CloseIcon from '../Assets/Icons/Close';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null,\n        deleteMessages: null,\n        pinMessage: null,\n        unpinMessage: null,\n        alert: null,\n        openUrlAlert: null,\n        openGameAlert: null,\n        requestUrlAlert: null,\n        inputPasswordAlert: null,\n        requestBlockSenderAlert: null,\n        leaveVoiceChatAlert: null,\n        reportChatAlert: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.on('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.on('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.on('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\n        AppStore.on('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.on('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.on('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.on('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n        AppStore.on('clientUpdateReportChat', this.onClientUpdateReportChat);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.off('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.off('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.off('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\n        AppStore.off('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.off('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.off('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.off('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n        AppStore.off('clientUpdateReportChat', this.onClientUpdateReportChat);\n    }\n\n    onClientUpdateReportChat = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({ reportChatAlert: { chatId, messageIds }});\n    };\n\n    onClientUpdateBlockSender = update => {\n        const { sender } = update;\n\n        this.setState({ requestBlockSenderAlert: { sender }});\n    }\n\n    onClientUpdateInputPasswordAlert = update => {\n        const { state, onPassword } = update;\n\n        this.setState({ inputPasswordAlert: { state, onPassword } });\n    }\n\n    onClientUpdateLeaveVoiceChatAlert = update => {\n        const { params } = update;\n\n        this.setState({ leaveVoiceChatAlert: { params }});\n    }\n\n    onClientUpdateOpenGameAlert = update => {\n        const { game, params } = update;\n\n        if (params && params.isVerified) {\n            this.openGameAlert = { game, params };\n            this.handleOpenGameContinue(null, true);\n        } else {\n            this.setState({ openGameAlert: { game, params } });\n        }\n    }\n\n    onClientUpdateOpenUrlAlert = update => {\n        const { url, params } = update;\n\n        if (params && !params.ask) {\n            this.openUrlAlert = { url, params };\n            this.handleOpenUrlContinue(null, true);\n        } else {\n            this.setState({ openUrlAlert: { url, params } });\n        }\n    };\n\n    onClientUpdateRequestUrlAlert = update => {\n        const { url, params } = update;\n\n        this.setState({ requestUrlAlert: { url, params } });\n    }\n\n    onClientUpdateSnackbar = update => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n        const { message, action } = update;\n\n        enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: action(closeSnackbar)\n        });\n    };\n\n    onClientUpdateAlert = update => {\n        const { params } = update;\n\n        this.setState({ alert: { params } });\n    };\n\n    onClientUpdateUnpinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.unpinMessage = {\n                chatId,\n                messageId\n            };\n            this.handleUnpinMessageContinue(true, false);\n        } else {\n            this.setState({\n                unpinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdatePinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.pinMessage = {\n                chatId,\n                messageId\n            };\n            this.handlePinMessageContinue(true, false);\n        } else {\n            this.setState({\n                pinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({\n            deleteMessages: {\n                chatId,\n                messageIds\n            }\n        });\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = (result, revoke) => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false,\n            revoke\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = async (result, undo = true) => {\n        const { leaveChat } = this.state || this;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.leaveChat = null;\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        if (undo) {\n            this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n        } else {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n\n            }\n        }\n    };\n\n    handleDeleteMessagesContinue = (result, revoke) => {\n        const { deleteMessages } = this.state;\n        if (!deleteMessages) return;\n\n        const { chatId, messageIds } = deleteMessages;\n\n        clearSelection();\n        this.setState({ deleteMessages: null });\n\n        if (!result) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke\n        });\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t, enqueueSnackbar, closeSnackbar } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                closeSnackbar(snackKey);\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            closeSnackbar(snackKey);\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        AppStore.addScheduledAction(key, Number.MAX_VALUE, action, cancel);\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            AppStore.removeScheduledAction(key);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        AppStore.removeScheduledAction(key);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    handlePinMessageContinue = (result, revoke) => {\n        let { pinMessage } = this.state;\n        pinMessage = pinMessage || this.pinMessage;\n        if (!pinMessage) return;\n\n        const { chatId, messageId } = pinMessage;\n\n        clearSelection();\n        this.setState({ pinMessage: null });\n        this.pinMessage = null;\n\n        if (!result) return;\n\n        pinMessageAction(chatId, messageId, false, !revoke);\n    };\n\n    handleUnpinMessageContinue = async result => {\n        let { unpinMessage } = this.state;\n        unpinMessage = unpinMessage || this.unpinMessage;\n        if (!unpinMessage) return;\n\n        const { chatId, messageId } = unpinMessage;\n\n        clearSelection();\n        this.setState({ unpinMessage: null });\n        this.unpinMessage = null;\n\n        if (!result) return;\n\n        if (canPinMessages(chatId)) {\n            if (messageId) {\n                await unpinMessageAction(chatId, messageId);\n            } else {\n                closePinned();\n\n                await unpinAllMessages(chatId);\n            }\n        } else {\n            closePinned();\n\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId,\n                clientData: { ...data, ...{ unpinned: true } }\n            });\n        }\n    };\n\n    handleAlertContinue = result => {\n        const { alert } = this.state;\n        if (!alert) return;\n\n        const { params } = alert;\n        this.setState({ alert: null });\n\n        const { onResult } = params;\n        onResult && onResult(result);\n    };\n\n    handleOpenUrlContinue = (event, result) => {\n        const openUrlAlert = this.state.openUrlAlert || this.openUrlAlert;\n\n        this.setState({ openUrlAlert: null });\n        this.openUrlAlert = null;\n\n        if (!result) return;\n\n        const { url, onClick } = openUrlAlert;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            event && event.preventDefault();\n\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    handleOpenGameContinue = (event, result) => {\n        const openGameAlert = this.state.openGameAlert || this.openGameAlert;\n\n        this.setState({ openGameAlert: null });\n        this.openGameAlert = null;\n\n        if (!result) return;\n\n        const { game, params } = openGameAlert;\n        if (!game) return;\n        if (!params) return;\n\n        const { url, message } = params;\n        if (!url) return;\n        if (!message) return;\n\n        openGameInBrowser(url, message);\n    };\n\n    handleRequestUrlContinue = async (event, open, values) => {\n        const { requestUrlAlert } = this.state;\n        this.setState({ requestUrlAlert: null });\n\n        if (!open) return;\n\n        const { params } = requestUrlAlert;\n        if (!params) return;\n\n        const { result, chatId, messageId, buttonId } = params;\n        if (!result) return;\n\n        if (!values.value1) {\n            this.openUrlAlert = { url: result.url };\n            this.handleOpenUrlContinue(event, open);\n        } else {\n            const httpUrl = await TdLibController.send({\n                '@type': 'getLoginUrl',\n                chat_id: chatId,\n                message_id: messageId,\n                button_id: buttonId,\n                allow_write_access: result.request_write_access && values.value2\n            });\n\n            this.openUrlAlert = { url: httpUrl.url };\n            this.handleOpenUrlContinue(event, open);\n        }\n    };\n\n    handleInputPasswordContinue = (result, password) => {\n        const { inputPasswordAlert } = this.state;\n        const onCloseDialog = () => this.setState({ inputPasswordAlert: null });\n        const onError = error => this.setState({ inputPasswordAlert: { ...inputPasswordAlert, error } })\n\n        if (!result) {\n            onCloseDialog();\n            return;\n        }\n\n        const { onPassword } = inputPasswordAlert;\n        onPassword && onPassword(password, onCloseDialog, onError);\n    };\n\n    handleBlockSenderContinue = async (result, params) => {\n        const { requestBlockSenderAlert } = this.state;\n\n        this.setState({ requestBlockSenderAlert: null });\n\n        if (!result) {\n            return;\n        }\n\n        const { sender } = requestBlockSenderAlert;\n        if (!sender) return;\n\n        let chatId = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                blockSender(sender);\n                chatId = await TdLibController.send({ '@type': 'createPrivateChat', user_id: sender.user_id });\n                break;\n            }\n            case 'messageSenderChat': {\n                chatId = sender.chat_id;\n                break;\n            }\n        }\n\n        if (!params || params.reportSpam) {\n            const reason = getChatLocation(chatId)\n                ? { '@type': 'chatReportReasonUnrelatedLocation' }\n                : { '@type': 'chatReportReasonSpam' };\n\n            reportChat(chatId, reason);\n        }\n\n        if (!params || params.deleteChat) {\n            const deleteChat = canDeleteChat(chatId);\n            if (!deleteChat) return;\n\n            this.leaveChat = { chatId };\n            this.handleLeaveContinue(true, false);\n        }\n    };\n\n    handleLeaveVoiceChatContinue = (result, resultParams) => {\n        const { leaveVoiceChatAlert } = this.state;\n\n        this.setState({ leaveVoiceChatAlert: null });\n\n        const { params } = leaveVoiceChatAlert;\n        if (!params) return;\n\n        const { onResult } = params;\n\n        onResult && onResult(resultParams);\n    };\n\n    handleReportChatContinue = (result, params) => {\n        const { t } = this.props;\n        const { reportChatAlert } = this.state;\n\n        this.setState({ reportChatAlert: null });\n        if (!result) return;\n\n        const { chatId, messageIds } = reportChatAlert;\n\n        showSnackbar(t('ReportChatSent'), closeSnackbar => snackKey => {\n            return (\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => { closeSnackbar(snackKey); }}>\n                    <CloseIcon />\n                </IconButton>\n            )\n        });\n    };\n\n    render() {\n        const {\n            leaveChat,\n            clearHistory,\n            deleteMessages,\n            pinMessage,\n            unpinMessage,\n            alert,\n            openUrlAlert,\n            openGameAlert,\n            requestUrlAlert,\n            inputPasswordAlert,\n            requestBlockSenderAlert,\n            leaveVoiceChatAlert,\n            reportChatAlert\n        } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return (\n                <LeaveChatDialog\n                    chatId={chatId}\n                    onClose={this.handleLeaveContinue} />\n                );\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return (\n                <ClearHistoryDialog\n                    chatId={chatId}\n                    onClose={this.handleClearHistoryContinue} />\n                );\n        } else if (deleteMessages) {\n            const { chatId, messageIds } = deleteMessages;\n\n            return (\n                <DeleteMessagesDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleDeleteMessagesContinue} />\n                );\n        } else if (pinMessage) {\n            const { chatId, messageId } = pinMessage;\n\n            return (\n                <PinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handlePinMessageContinue} />\n            );\n        } else if (unpinMessage) {\n            const { chatId, messageId } = unpinMessage;\n\n            return (\n                <UnpinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handleUnpinMessageContinue} />\n            );\n        } else if (alert) {\n            const { params } = alert;\n\n            return (\n                <AlertDialog\n                    params={params}\n                    onClose={this.handleAlertContinue} />\n            );\n        } else if (openUrlAlert) {\n            const { url, params } = openUrlAlert;\n\n            return (\n                <OpenUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleOpenUrlContinue}/>\n            );\n        } else if (openGameAlert) {\n            const { game, params } = openGameAlert;\n\n            return (\n                <OpenGameDialog\n                    game={game}\n                    params={params}\n                    onClose={this.handleOpenGameContinue}/>\n            );\n        } else if (requestUrlAlert) {\n            const { url, params } = requestUrlAlert;\n\n            return (\n                <RequestUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleRequestUrlContinue}/>\n            );\n        } else if (inputPasswordAlert) {\n            const { state, error } = inputPasswordAlert;\n\n            return (\n                <InputPasswordDialog\n                    state={state}\n                    error={error}\n                    onClose={this.handleInputPasswordContinue}/>\n            );\n        } else if (requestBlockSenderAlert) {\n            const { sender } = requestBlockSenderAlert;\n\n            return (\n                <BlockSenderDialog\n                    sender={sender}\n                    onClose={this.handleBlockSenderContinue}/>\n            );\n        } else if (leaveVoiceChatAlert) {\n            const { params } = leaveVoiceChatAlert;\n\n            return (\n                <LeaveVoiceChatDialog\n                    params={params}\n                    onClose={this.handleLeaveVoiceChatContinue}/>\n            );\n        } else if (reportChatAlert) {\n            const { chatId, messageIds } = reportChatAlert;\n\n            return (\n                <ReportChatDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleReportChatContinue}/>\n            );\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function openGameInBrowser(url, message) {\n    let sharedPreferences = {};\n    try {\n        sharedPreferences = JSON.parse(localStorage.getItem('botshare')) || { };\n    } catch (e) { }\n\n    const existing = sharedPreferences['' + message.id];\n    let hash = existing ? existing : ''\n    let addHash = 'tgShareScoreUrl=' + encodeURIComponent('tg://share_game_score?hash=');\n    if (!existing) {\n        const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        const array = new Uint8Array(1);\n        for (let i = 0; i < 20; i++) {\n            window.crypto.getRandomValues(array)\n            hash += chars[array[0] % chars.length];\n        }\n\n        sharedPreferences['' + message.id] = hash;\n        localStorage.setItem('botshare', JSON.stringify(sharedPreferences));\n    }\n    addHash += hash;\n    const index = url.indexOf('#');\n    if (index < 0) {\n        url += '#' + addHash;\n    } else {\n        const curHash = url.substring(0, index + 1);\n        if (curHash.indexOf('=') >= 0 || curHash.indexOf('?') >= 0) {\n            url += '&' + addHash;\n        } else {\n            if (curHash.length > 0) {\n                url += '?' + addHash;\n            } else {\n                url += addHash;\n            }\n        }\n    }\n\n    const newWindow = window.open();\n    newWindow.opener = null;\n    newWindow.location = url;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,9C10.4,9 8.85,9.25 7.4,9.72V12.82C7.4,13.22 7.17,13.56 6.84,13.72C5.86,14.21 4.97,14.84 4.17,15.57C4,15.75 3.75,15.86 3.5,15.86C3.2,15.86 2.95,15.74 2.77,15.56L0.29,13.08C0.11,12.9 0,12.65 0,12.38C0,12.1 0.11,11.85 0.29,11.67C3.34,8.77 7.46,7 12,7C16.54,7 20.66,8.77 23.71,11.67C23.89,11.85 24,12.1 24,12.38C24,12.65 23.89,12.9 23.71,13.08L21.23,15.56C21.05,15.74 20.8,15.86 20.5,15.86C20.25,15.86 20,15.75 19.82,15.57C19.03,14.84 18.14,14.21 17.16,13.72C16.83,13.56 16.6,13.22 16.6,12.82V9.72C15.15,9.25 13.6,9 12,9Z' />,\n    'CallEnd'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getAmplitude } from '../../Calls/Utils';\nimport './GroupCallMicAmplitude.css';\n\nclass GroupCallMicAmplitude extends React.Component {\n    constructor(props) {\n        super(props);\n        this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        this.timer = null;\n\n        this.state = {\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        const { stream } = this.props;\n        if (stream) {\n            this.addAnalyser(stream);\n        }\n    }\n\n    componentWillUnmount() {\n        const { stream } = this.props;\n        if (stream) {\n            this.removeAnalyser(stream);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { stream } = this.props;\n        if (prevProps.stream !== stream) {\n            this.removeAnalyser(prevProps.stream);\n            this.addAnalyser(stream);\n        }\n    }\n\n    addAnalyser(stream) {\n        if (!stream) return;\n\n        const { audioContext } = this;\n        if (!audioContext) return;\n\n        this.streamSource = audioContext.createMediaStreamSource(stream);\n        if (!this.analyser) {\n            const analyser = audioContext.createAnalyser();\n            analyser.minDecibels = -100;\n            analyser.maxDecibels = -30;\n            analyser.smoothingTimeConstant = 0.05;\n            analyser.fftSize = 1024;\n\n            this.analyser = analyser;\n        }\n        this.streamSource.connect(this.analyser);\n\n        this.timer = setInterval(() => this.analyse(), 100);\n    }\n\n    removeAnalyser(stream) {\n        if (!stream) return;\n\n        if (this.analyser && this.streamSource) {\n            this.streamSource.disconnect(this.analyser);\n        }\n\n        clearInterval(this.timer);\n    }\n\n    analyse() {\n        const { analyser } = this;\n        if (!analyser) return;\n\n        const array = new Uint8Array(analyser.frequencyBinCount);\n        analyser.getByteFrequencyData(array);\n        const value = getAmplitude(array, 1.5);\n\n        this.setState({\n            value\n        });\n    }\n\n    render() {\n        const { value } = this.state;\n\n        let d = '';\n        for (let i = 0; i < 35; i++) {\n            const x = i * 8 + 1.5;\n            d += `M${x},0v15Z`;\n        }\n\n        const bars = (\n            <svg className='group-call-mic-amplitude-bars' viewBox='0 0 275 15'>\n                <path d={d} fill='currentColor' strokeWidth={3}/>\n            </svg>\n        );\n\n        return (\n            <div className='group-call-mic-amplitude'>\n                {bars}\n                <div className='group-call-mic-amplitude-bars-accent' style={{ width: 275 * value }}>\n                    {bars}\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupCallMicAmplitude.propTypes = {\n    stream: PropTypes.object\n};\n\nexport default GroupCallMicAmplitude;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport GroupCallMicAmplitude from './GroupCallMicAmplitude';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport { copy } from '../../Utils/Text';\nimport { canManageVoiceChats, getChatUsername } from '../../Utils/Chat';\nimport { getStream } from '../../Calls/Utils';\nimport { showSnackbar } from '../../Actions/Client';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport './GroupCallSettings.css';\n\nclass GroupCallSettings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = { };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                const { openDeviceSelect } = this.state;\n                if (openDeviceSelect) {\n                    this.handleCloseDeviceSelect();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n\n                this.handleCancel();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId, callId } = props;\n        const { prevGroupCallId, prevCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            const { devices } = CallStore;\n\n            const outputDeviceId = CallStore.getOutputDeviceId();\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n            let muteSettings = { };\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                const {\n                    mute_new_participants: muteNewParticipants,\n                    allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\n                } = groupCall;\n\n                muteSettings = {\n                    muteNewParticipants,\n                    allowedChangeMuteNewParticipants\n                }\n            }\n\n            return {\n                prevGroupCallId: groupCallId,\n                devices,\n                outputDeviceId,\n                output,\n                inputAudioDeviceId,\n                inputAudio,\n                inputVideoDeviceId,\n                inputVideo,\n                ...muteSettings\n            };\n        } else if (prevCallId !== callId) {\n            const { devices } = CallStore;\n\n            const outputDeviceId = CallStore.getOutputDeviceId();\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n            return {\n                prevCallId: callId,\n                devices,\n                outputDeviceId,\n                output,\n                inputAudioDeviceId,\n                inputAudio,\n                inputVideoDeviceId,\n                inputVideo\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.handleSelectDevice('inputAudio', CallStore.getInputAudioDeviceId());\n        navigator.mediaDevices.addEventListener('devicechange', this.onDeviceChange);\n        // navigator.permissions.addEventListener('onchange', this.onDeviceChange);\n        KeyboardManager.add(this.keyboardHandler);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        navigator.mediaDevices.removeEventListener('devicechange', this.onDeviceChange);\n        // navigator.permissions.removeEventListener('onchange', this.onDeviceChange);\n        KeyboardManager.remove(this.keyboardHandler);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n\n        this.closeStreams();\n    }\n\n    closeStreams() {\n        const { inputAudioStream, inputAudioDeviceId } = this.state;\n        if (inputAudioStream && (!CallStore.currentGroupCall || inputAudioDeviceId === CallStore.getInputAudioDeviceId())) {\n            inputAudioStream.getAudioTracks().forEach(x => {\n                x.stop();\n            });\n        }\n    }\n\n    onUpdateGroupCall = update => {\n        const { groupCallId } = this.props;\n        const { group_call } = update;\n        if (!group_call) return;\n\n        const {\n            id,\n            mute_new_participants: muteNewParticipants,\n            allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\n        } = group_call;\n        if (id !== groupCallId) return;\n\n        this.setState({\n            muteNewParticipants,\n            allowedChangeMuteNewParticipants\n        });\n    };\n\n    onDeviceChange = async () => {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        CallStore.devices = devices;\n\n        const outputDeviceId = CallStore.getOutputDeviceId();\n        const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n        const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n        const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n        const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n        const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n        this.setState({\n            devices,\n            outputDeviceId,\n            output,\n            inputAudioDeviceId,\n            inputAudio,\n            inputVideoDeviceId,\n            inputVideo\n        });\n    };\n\n    handleOutputChange = event => {\n        const outputDeviceId = event.target.value;\n\n        this.setState({ outputDeviceId });\n    }\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { currentGroupCall } = CallStore;\n\n        const username = getChatUsername(currentGroupCall ? currentGroupCall.chatId : 0);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n        showSnackbar(t('LinkCopied'), closeSnackbar => snackKey => {\n            return (\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => { closeSnackbar(snackKey); }}>\n                    <CloseIcon />\n                </IconButton>\n            )\n        });\n    };\n\n    handleOpenDeviceSelect = async type => {\n        switch (type) {\n            case 'inputAudio': {\n                const { inputAudio } = this.state;\n                if (!inputAudio.length) {\n                    return;\n                }\n                break;\n            }\n            case 'output': {\n                const { output } = this.state;\n                if (!output.length) {\n                    return;\n                }\n                break;\n            }\n        }\n\n        this.setState({\n            openDeviceSelect: { type }\n        });\n    };\n\n    handleCloseDeviceSelect = () => {\n        this.setState({\n            openDeviceSelect: null\n        });\n    };\n\n    handleSelectDevice = async (type, deviceId) => {\n        this.handleCloseDeviceSelect();\n\n        switch (type) {\n            case 'output': {\n                CallStore.setOutputDeviceId(deviceId);\n                this.setState({\n                    outputDeviceId: deviceId\n                });\n                break;\n            }\n            case 'inputAudio': {\n                const { currentGroupCall } = CallStore;\n                if (!currentGroupCall) return;\n\n                const { streamManager } = currentGroupCall;\n                if (!streamManager) return;\n\n                const { inputAudioStream, inputAudioDeviceId } = this.state;\n                if (inputAudioDeviceId === deviceId && inputAudioStream) return;\n\n                if (inputAudioStream) {\n                    inputAudioStream.getAudioTracks().forEach(t => {\n                        t.stop()\n                    });\n                }\n\n                const stream = await getStream({\n                    audio: { deviceId: { exact: deviceId } },\n                    video: false\n                });\n\n                this.setState({\n                    inputAudioDeviceId: deviceId,\n                    inputAudioStream: stream\n                });\n                break;\n            }\n            case 'inputVideo': {\n                const { currentCall } = CallStore;\n                if (!currentCall) return;\n\n                const { inputVideoStream, inputVideoDeviceId } = this.state;\n                if (inputVideoDeviceId === deviceId && inputVideoStream) return;\n\n                if (inputVideoStream) {\n                    inputVideoStream.getAudioTracks().forEach(t => {\n                        t.stop()\n                    });\n                }\n\n                const stream = await getStream({\n                    audio: false,\n                    video: { deviceId: { exact: deviceId } }\n                });\n\n                this.setState({\n                    inputVideoDeviceId: deviceId,\n                    inputVideoStream: stream\n                });\n                break;\n            }\n        }\n    };\n\n    handleEnd = () => {\n        const { currentGroupCall: call } = CallStore;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        CallStore.leaveGroupCall(chatId, groupCallId, true);\n    };\n\n    handleMuteNewParticipants = () => {\n        const { groupCallId } = this.props;\n        const { muteNewParticipants } = this.state;\n\n        this.setState({\n            muteNewParticipants: !muteNewParticipants\n        });\n\n        CallStore.toggleMuteNewParticipants(groupCallId, !muteNewParticipants);\n    };\n\n    handleDone = async () => {\n        const { onClose } = this.props;\n        const { inputAudioDeviceId, inputAudioStream, inputVideoDeviceId, inputVideoStream } = this.state;\n\n        if (inputAudioStream && inputAudioDeviceId !== CallStore.getInputAudioDeviceId()) {\n            await CallStore.setInputAudioDeviceId(inputAudioDeviceId, inputAudioStream);\n        }\n\n        if (inputVideoStream && inputVideoDeviceId !== CallStore.getInputVideoDeviceId()) {\n            await CallStore.setInputVideoDeviceId(inputVideoDeviceId, inputVideoStream);\n        }\n\n        onClose && onClose();\n    };\n\n    handleCancel = () => {\n        const { onClose } = this.props;\n\n        onClose && onClose();\n    };\n\n    render() {\n        const { callId, t } = this.props;\n        const {\n            inputAudioDeviceId,\n            inputAudioStream,\n            inputAudio,\n            inputVideoDeviceId,\n            inputVideo,\n            outputDeviceId,\n            output,\n            openDeviceSelect,\n            muteNewParticipants,\n            allowedChangeMuteNewParticipants\n        } = this.state;\n\n\n        const outputDeviceInfo = output.find(x => x.deviceId === outputDeviceId || !outputDeviceId && x.deviceId === 'default');\n        const outputString = !outputDeviceInfo || outputDeviceInfo.deviceId === 'default' || !outputDeviceInfo.deviceId || !outputDeviceInfo.label ? t('Default') : outputDeviceInfo.label;\n\n        const inputAudioDeviceInfo = inputAudio.find(x => x.deviceId === inputAudioDeviceId || !inputAudioDeviceId && x.deviceId === 'default');\n        const inputAudioString = !inputAudioDeviceInfo || inputAudioDeviceInfo.deviceId === 'default' || !inputAudioDeviceInfo.deviceId || !inputAudioDeviceInfo.label ? t('Default') : inputAudioDeviceInfo.label;\n\n        const inputVideoDeviceInfo = inputVideo.find(x => x.deviceId === inputVideoDeviceId || !inputVideoDeviceId && x.deviceId === 'default');\n        const inputVideoString = !inputVideoDeviceInfo || inputVideoDeviceInfo.deviceId === 'default' || !inputVideoDeviceInfo.deviceId || !inputVideoDeviceInfo.label ? t('Default') : inputVideoDeviceInfo.label;\n\n        const { currentGroupCall } = CallStore;\n        const chatId = currentGroupCall ? currentGroupCall.chatId : 0;\n\n        const username = getChatUsername(chatId);\n\n        if (openDeviceSelect) {\n            const { type } = openDeviceSelect;\n            let items = [];\n            let deviceId = null;\n            switch (type) {\n                case 'output': {\n                    items = output;\n                    deviceId = outputDeviceId;\n                    break;\n                }\n                case 'inputAudio': {\n                    items = inputAudio;\n                    deviceId = inputAudioDeviceId;\n                    break;\n                }\n                case 'inputVideo': {\n                    items = inputVideo;\n                    deviceId = inputVideoDeviceId;\n                    break;\n                }\n            }\n\n            return (\n                <div className='group-call-settings-device-select'>\n                    <div className='group-call-settings-panel'>\n                        <div className='group-call-settings-panel-header'>\n                            <div className='group-call-panel-caption'>\n                                <div className='group-call-title'>{type === 'output' ? t('OutputDevice') : t('InputDevice')}</div>\n                            </div>\n                        </div>\n                        <div className='group-call-settings-panel-content'>\n                            {items.map(x => (\n                                <div key={x.deviceId} className='group-call-settings-panel-item' onClick={() => this.handleSelectDevice(type, x.deviceId)}>\n                                    <div className='group-call-settings-panel-item-title'>{x.label || t('Default')}</div>\n                                </div>\n                            ))}\n                        </div>\n                        <div className='group-call-settings-panel-buttons'>\n                            <div className='group-call-settings-panel-done' onClick={this.handleCloseDeviceSelect}>\n                                {t('OK')}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n\n\n        const canManage = canManageVoiceChats(chatId);\n        // console.log('[call][GroupCallSettings] render', muteNewParticipants, allowedChangeMuteNewParticipants);\n\n        return (\n            <div className='group-call-settings' onMouseDown={stopPropagation} onClick={this.handleCancel}>\n                <div className='group-call-settings-panel' onClick={stopPropagation}>\n                    <div className='group-call-settings-panel-header'>\n                        <div className='group-call-panel-caption'>\n                            <div className='group-call-title'>{t('Settings')}</div>\n                        </div>\n                    </div>\n                    <div className='group-call-settings-panel-content'>\n                        { canManage && allowedChangeMuteNewParticipants && (\n                            <div className='group-call-settings-panel-item' onClick={this.handleMuteNewParticipants}>\n                                <div className='group-call-settings-panel-item-title'>{t('VoipGroupOnlyAdminsCanSpeak')}</div>\n                                <Switch\n                                    disableRipple\n                                    classes={{\n                                        root: 'group-call-settings-panel-switch-root',\n                                        switchBase: 'group-call-settings-panel-switch-base',\n                                        colorSecondary: 'group-call-settings-panel-switch-color-secondary',\n                                        checked: 'group-call-settings-panel-switch-checked',\n                                        track: 'group-call-settings-panel-switch-track'\n                                    }}\n                                    checked={muteNewParticipants}\n                                    onChange={this.handleMuteNewParticipants}/>\n                            </div>\n                        )}\n\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('output')}>\n                            <div className='group-call-settings-panel-item-title'>{t('Speaker')}</div>\n                            <div className='group-call-settings-panel-item-subtitle'>{outputString}</div>\n                        </div>\n\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputAudio')}>\n                            <div className='group-call-settings-panel-item-title'>{t('Microphone')}</div>\n                            <div className='group-call-settings-panel-item-subtitle'>{inputAudioString}</div>\n                        </div>\n\n                        { callId && (\n                            <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputVideo')}>\n                                <div className='group-call-settings-panel-item-title'>{t('Camera')}</div>\n                                <div className='group-call-settings-panel-item-subtitle'>{inputVideoString}</div>\n                            </div>\n                        )}\n                        <GroupCallMicAmplitude stream={inputAudioStream}/>\n                        { username && (\n                            <div className='group-call-settings-panel-item' onClick={this.handleCopyLink}>\n                                {t('VoipGroupCopyInviteLink')}\n                            </div>\n                        )}\n                        { canManage && (\n                            <div className='group-call-settings-panel-item group-call-settings-panel-item-secondary' onClick={this.handleEnd}>\n                                {t('VoipGroupEndChat')}\n                            </div>\n                        )}\n                    </div>\n                    <div className='group-call-settings-panel-buttons'>\n                        <div className='group-call-settings-panel-done' onClick={this.handleDone}>\n                            {t('Done')}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupCallSettings.propTypes = {\n    callId: PropTypes.number,\n    groupCallId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(GroupCallSettings);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,2A3,3 0 0,1 15,5V11A3,3 0 0,1 12,14A3,3 0 0,1 9,11V5A3,3 0 0,1 12,2M19,11C19,14.53 16.39,17.44 13,17.93V21H11V17.93C7.61,17.44 5,14.53 5,11H7A5,5 0 0,0 12,16A5,5 0 0,0 17,11H19Z' />,\n    'Mic'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,11C19,12.19 18.66,13.3 18.1,14.28L16.87,13.05C17.14,12.43 17.3,11.74 17.3,11H19M15,11.16L9,5.18V5A3,3 0 0,1 12,2A3,3 0 0,1 15,5V11L15,11.16M4.27,3L21,19.73L19.73,21L15.54,16.81C14.77,17.27 13.91,17.58 13,17.72V21H11V17.72C7.72,17.23 5,14.41 5,11H6.7C6.7,14 9.24,16.1 12,16.1C12.81,16.1 13.6,15.91 14.31,15.58L12.65,13.92L12,14A3,3 0 0,1 9,11V10.28L3,4.27L4.27,3Z' />,\n    'MicOff'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CallIcon from '@material-ui/icons/Call';\nimport VideocamIcon from '@material-ui/icons/VideocamOutlined';\nimport VideocamOffIcon from '@material-ui/icons/VideocamOffOutlined';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport GroupCallSettings from './GroupCallSettings';\nimport MenuIcon from '../../Assets/Icons/More';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport { p2pGetCallStatus, p2pIsCallReady } from '../../Calls/Utils';\nimport { getUserFullName } from '../../Utils/User';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './CallPanel.css';\n\nclass CallPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.callPanelRef = React.createRef();\n\n        this.state = {\n            openSettings: false,\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            fullScreen: false,\n            audioEnabled: true,\n            videoEnabled: true,\n\n            otherAudioEnabled: true,\n            otherVideoEnabled: true\n        };\n    }\n\n    componentDidMount() {\n        const callPanel = this.callPanelRef.current;\n        if (callPanel) {\n            const prefixes = ['', 'moz', 'webkit', 'ms']\n            prefixes.forEach(x => {\n                callPanel.addEventListener(x + 'fullscreenchange', this.handleFullScreenChange);\n            });\n        }\n\n        CallStore.on('updateCall', this.handleUpdateCall);\n        CallStore.on('clientUpdateCallMediaIsMuted', this.onClientUpdateCallMediaIsMuted);\n    }\n\n    componentWillUnmount() {\n        const callPanel = this.callPanelRef.current;\n        if (callPanel) {\n            const prefixes = ['', 'moz', 'webkit', 'ms']\n            prefixes.forEach(x => {\n                callPanel.removeEventListener(x + 'fullscreenchange', this.handleFullScreenChange);\n            });\n        }\n\n        CallStore.off('updateCall', this.handleUpdateCall);\n        CallStore.off('clientUpdateCallMediaIsMuted', this.onClientUpdateCallMediaIsMuted);\n    }\n\n    onClientUpdateCallMediaIsMuted = update => {\n        const { callId: currentCallId } = this.props;\n        const { callId, kind, isMuted } = update;\n        if (callId !== currentCallId) return;\n\n        if (kind === 'audio') {\n            this.setState({\n                otherAudioEnabled: !isMuted\n            });\n        } else if (kind === 'video') {\n            this.setState({\n                otherVideoEnabled: !isMuted\n            });\n        }\n    }\n\n    handleUpdateCall = update => {\n        this.forceUpdate();\n    };\n\n    handleFullScreenChange = () => {\n        this.setState({\n            fullScreen: this.isFullScreen()\n        });\n    };\n\n    handleClick = () => {\n        this.handleClose();\n    }\n\n    handleAccept = async event => {\n        event.stopPropagation();\n\n        const { callId } = this.props;\n        if (!callId) return;\n\n        await CallStore.p2pAcceptCall(callId);\n    };\n\n    handleDiscard = async event => {\n        event.stopPropagation();\n\n        const { callId } = this.props;\n        if (!callId) return;\n\n        await CallStore.p2pHangUp(callId, true);\n    };\n\n    handleOpenSettings = async event => {\n        this.handleCloseContextMenu();\n\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\n\n        this.setState({\n            openSettings: true\n        });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({\n            openSettings: false\n        });\n    };\n\n    handleClose = () => {\n        const { callId } = this.props;\n\n        CallStore.p2pHangUp(callId, true);\n    };\n\n    handleShareScreen = () => {\n        this.handleCloseContextMenu();\n\n        const { currentCall } = CallStore;\n        if (!currentCall) return;\n\n        const { screenStream } = currentCall;\n        if (screenStream) {\n            CallStore.p2pStopScreenSharing();\n        } else {\n            CallStore.p2pStartScreenSharing();\n        }\n    };\n\n    handleFullScreen = () => {\n        this.handleCloseContextMenu();\n\n        setTimeout(() => {\n            if (this.isFullScreen()) {\n                this.exitFullscreen();\n                return;\n            }\n\n            this.requestFullscreen();\n        }, 250);\n    }\n\n    isFullScreen() {\n        const callPanel = this.callPanelRef.current;\n        if (!callPanel) return false;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        return fullscreenElement === callPanel;\n    }\n\n    requestFullscreen() {\n        const callPanel = this.callPanelRef.current;\n        if (!callPanel) return false;\n\n        const method = callPanel.requestFullscreen || callPanel.mozRequestFullScreen || callPanel.webkitRequestFullscreen;\n\n        method && method.call(callPanel);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { currentTarget } = event;\n\n        const { userId } = this.props;\n        if (userId === UserStore.getMyId()) return;\n\n        const { anchorEl } = this.state;\n\n        if (anchorEl) {\n            this.setState({ anchorEl: null });\n        } else {\n            this.setState({\n                anchorEl: currentTarget\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleAudio = () => {\n        const { audioEnabled } = this.state;\n\n        if (audioEnabled) {\n            CallStore.p2pAudioEnabled(false);\n        } else {\n            CallStore.p2pAudioEnabled(true)\n        }\n\n        this.setState({\n            audioEnabled: !audioEnabled\n        });\n    };\n\n    handleVideo = () => {\n        const { videoEnabled } = this.state;\n\n        if (videoEnabled) {\n            CallStore.p2pVideoEnabled(false);\n        } else {\n            CallStore.p2pVideoEnabled(true)\n        }\n\n        this.setState({\n            videoEnabled: !videoEnabled\n        });\n    };\n\n    render() {\n        const { callId, t } = this.props;\n        const { openSettings, anchorEl, fullScreen, audioEnabled, videoEnabled, otherAudioEnabled, otherVideoEnabled } = this.state;\n        const { currentCall } = CallStore;\n\n        const call = CallStore.p2pGet(callId);\n        if (!call) return null;\n\n        const { user_id: userId, is_outgoing, state } = call;\n\n        let screenSharing = currentCall && Boolean(currentCall.screenStream);\n\n        return (\n            <div className={classNames('group-call-panel', { 'full-screen': fullScreen })} ref={this.callPanelRef}>\n                <div className='group-call-panel-header'>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </div>\n                    <div className='group-call-panel-caption' onMouseDown={stopPropagation} onClick={stopPropagation}>\n                        <div className='group-call-title'>{getUserFullName(userId, null)}</div>\n                        <div className='group-call-join-panel-subtitle'>\n                            {p2pGetCallStatus(callId)}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleOpenContextMenu}>\n                        <MenuIcon />\n                    </div>\n                    <Popover\n                        container={this.callPanelRef.current}\n                        classes={{\n                            paper: 'group-call-participant-menu-root'\n                        }}\n                        anchorEl={anchorEl}\n                        open={Boolean(anchorEl)}\n                        onClose={this.handleCloseContextMenu}\n                        getContentAnchorEl={null}\n                        disableRestoreFocus={true}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleOpenSettings}>\n                                <ListItemText primary={t('Settings')} />\n                            </MenuItem>\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleFullScreen}>\n                                <ListItemText primary={fullScreen ? t('ExitFullScreen') : t('EnterFullScreen')} />\n                            </MenuItem>\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleShareScreen}>\n                                <ListItemText primary={screenSharing ? t('StopScreenSharing') : t('StartScreenSharing')} />\n                            </MenuItem>\n                        </MenuList>\n                    </Popover>\n                </div>\n                <div className='call-panel-content scrollbars-hidden' onDoubleClick={this.handleFullScreen}>\n                    <video id='call-output-video' autoPlay={true} muted={true}/>\n                    <video id='call-input-video' autoPlay={true} muted={true}/>\n                </div>\n                { !otherAudioEnabled && (\n                    <div className='call-panel-microphone-hint'>\n                        <div className='call-panel-microphone-hint-wrapper'>\n                            <MicOffIcon/>\n                            <div className='call-panel-microphone-hint-text'>\n                                {LStore.formatString('VoipUserMicrophoneIsOff', getUserFullName(userId, null))}\n                            </div>\n                        </div>\n                    </div>\n                )}\n                <div className='group-call-panel-buttons'>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={this.handleVideo}>\n                            {videoEnabled ? <VideocamIcon/> : <VideocamOffIcon/>}\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {videoEnabled ? t('VoipStopVideo') : t('VoipStartVideo')}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleDiscard}>\n                            <CallEndIcon />\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {(p2pIsCallReady(callId) || is_outgoing) ? t('VoipEndCall') : t('VoipDeclineCall')}\n                        </div>\n                    </div>\n                    {!is_outgoing && state['@type'] === 'callStatePending' && (\n                        <div className='group-call-panel-button'>\n                            <div className='group-call-panel-button-answer' onMouseDown={stopPropagation} onClick={this.handleAccept}>\n                                <CallIcon />\n                            </div>\n                            <div className='group-call-panel-button-text'>\n                                {t('VoipAnswerCall')}\n                            </div>\n                        </div>\n                    )}\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={this.handleAudio}>\n                            {audioEnabled ? <MicIcon/> : <MicOffIcon/>}\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {audioEnabled ? t('Mute') : t('Unmute')}\n                        </div>\n                    </div>\n                </div>\n                {openSettings && <GroupCallSettings callId={callId} onClose={this.handleCloseSettings}/>}\n            </div>\n        );\n    }\n}\n\nCallPanel.propTypes = {\n    callId: PropTypes.number\n};\n\nexport default withTranslation()(CallPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CallPanel from './CallPanel';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { clamp } from '../../Utils/Common';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { modalManager } from '../../Utils/Modal';\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCall.css';\n\nclass Call extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = {\n            fullScreen: false\n        };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.setPosition();\n\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.add(this.keyboardHandler);\n        window.addEventListener('resize', this.onWindowResize);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.remove(this.keyboardHandler);\n        window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    onClientUpdateGroupCallFullScreen = update => {\n        const { fullscreen } = update;\n\n        this.setState({ fullscreen });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    handleMouseDown = event => {\n        if (event.nativeEvent.which !== 1) return;\n\n        const element = document.getElementById('call');\n        if (element) element.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        this.left = parseInt(element.style.left, 10);\n        this.top = parseInt(element.style.top, 10);\n        this.pageX = event.nativeEvent.pageX;\n        this.pageY = event.nativeEvent.pageY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.windowDragging = true;\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('call');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\n\n        const element = document.getElementById('call');\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.windowDragging = false;\n    };\n\n    setPosition() {\n        const element = document.getElementById('call');\n        let { pipParams } = CallStore;\n        if (!pipParams) {\n            pipParams = {\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\n            }\n        }\n\n        const { left: prevLeft, top: prevTop } = pipParams;\n\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\n\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    }\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('call');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        CallStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    render() {\n        const { callId } = this.props;\n        const { fullscreen } = this.state;\n\n        return (\n            <div\n                id='call'\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\n                onMouseDown={this.handleMouseDown}\n            >\n                <CallPanel callId={callId}/>\n            </div>\n        )\n    }\n}\n\nCall.propTypes = {\n    callId: PropTypes.number\n};\n\nexport default Call;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const membersFilter = this.filterRef.get('members');\n        if (selectedIndex === 0 && membersFilter) {\n            item = membersFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\n        if (selectedIndex === 6 && groupsInCommonFilter) {\n            item = groupsInCommonFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\n\n        const tabsCount =\n            (members.length > 0 ? 1 : 0) +\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0) +\n            (groupsInCommon.length > 0 ? 1 : 0);\n\n        const hasSharedMedia =\n            members.length > 0\n            || photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0\n            || groupsInCommon.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className={classNames('tabs', 'shared-media-tabs')}>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {members.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('members', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\n                            <span>{t('GroupMembers')}</span>\n                        </div>\n                    )}\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    {groupsInCommon.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\n                            <span>{t('SharedGroupsTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        const { prevPhoto } = state;\n        if (photo !== prevPhoto) {\n            return {\n                prevPhoto: photo,\n\n                contextMenu: false,\n                left: 0,\n                top: 0,\n\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo.minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { hasVideoNote } from '../../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedLinkTile.css';\n\nclass SharedLinkTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.file || thumbnail.photo;\n        if (!file) return;\n\n        if (update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\n                {hasSrc? (\n                    <img\n                        className={classNames(\n                            'shared-link-tile-photo',\n                            { 'shared-link-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                ) : (\n                    <span>{title}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedLinkTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default SharedLinkTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport SafeLink from '../../Additional/SafeLink';\nimport SharedLinkTile from './SharedLinkTile';\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\nimport { getFormattedText, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport { PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    static isValidEntity(entity) {\n        if (!entity) return false;\n\n        const { type } = entity;\n        if (!type) return false;\n\n        return (\n            type['@type'] === 'textEntityTypeUrl' ||\n            type['@type'] === 'textEntityTypeTextUrl' ||\n            type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let thumbnail = null;\n        let minithumbnail = null;\n        let content = null;\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\n            title: '',\n            description: {\n                '@type': 'formattedText',\n                text: '',\n                entities: []\n            },\n            photo: null,\n            animation: null,\n            audio: null,\n            document: null,\n            sticker: null,\n            video: null,\n            video_note: null,\n            url: ''\n        };\n\n        if (animation) {\n            minithumbnail = animation.minithumbnail;\n            thumbnail = animation.thumbnail;\n        } else if (audio) {\n            minithumbnail = audio.album_cover_minithumbnail;\n            thumbnail = audio.album_cover_thumbnail;\n        } else if (document) {\n            minithumbnail = document.minithumbnail;\n            thumbnail = document.thumbnail;\n        } else if (sticker) {\n            minithumbnail = sticker.minithumbnail;\n            thumbnail = sticker.thumbnail;\n        } else if (video) {\n            minithumbnail = video.minithumbnail;\n            thumbnail = video.thumbnail;\n        } else if (videoNote) {\n            minithumbnail = videoNote.minithumbnail;\n            thumbnail = videoNote.thumbnail;\n        }\n\n        if (!thumbnail && !minithumbnail && photo) {\n            minithumbnail = photo.minithumbnail;\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\n        }\n\n        let { text, caption } = message.content;\n        text = text || caption;\n        if (text) {\n            const { entities } = text;\n            if (entities && entities.length > 0) {\n                const longTextMaxLength = 40;\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\n\n                const nonEmptyUrlEntities = urlEntities\n                    .filter(x => {\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\n                        entityText = entityText.replace(/\\u200B/g,'');\n\n                        return entityText.length > 0;\n                    });\n\n                const links = nonEmptyUrlEntities.map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n\n                if (showLinks) {\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\n                            <div>{links}</div>\n                        </>);\n                } else {\n                    let d = description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && <div className='web-page-description'>{d}</div>}\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\n                        </>);\n                }\n\n                if (webPage) {\n                    title = title || this.getTitleFromUrl(url);\n                }\n            }\n        }\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <SharedLinkTile\n                        chatId={chatId}\n                        messageId={messageId}\n                        minithumbnail={minithumbnail}\n                        thumbnail={thumbnail}\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\n                    />\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor sender={sender} messageId={messageId} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../../Tile/User';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { openChat, openUser } from '../../../Actions/Client';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\nimport Chat from '../../Tile/Chat';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(item) {\n        if (!item) return undefined;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { content } = item;\n                switch (content['@type']) {\n                    case 'messagePhoto': {\n                        return undefined;\n                    }\n                    case 'messageVideo': {\n                        return undefined;\n                    }\n                    case 'messageDocument': {\n                        return 78;\n                    }\n                    case 'messageAudio': {\n                        return 94;\n                    }\n                    case 'messageVoiceNote': {\n                        return 74;\n                    }\n                    default: {\n                        return undefined;\n                    }\n                }\n            }\n            case 'chat': {\n                return 74;\n            }\n            case 'user': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return 74;\n            }\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n            case 6: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 0: {\n                const { user_id: id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`user_id=${id}`}\n                        className='groups-in-common-item'>\n                        <User userId={id} onSelect={onOpen}/>\n                    </ListItem>\n                );\n            }\n            case 1: {\n                const { chat_id, id, content } = item;\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={onOpen}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                const { chat_id, id } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 6: {\n                const { id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`chat_id=${id}`}\n                        className='groups-in-common-item'>\n                        <Chat chatId={id} onSelect={onOpen} />\n                    </ListItem>\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n            case 6: {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return null;\n            }\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n            case 6: {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 0: {\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\n            }\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n            case 6: {\n                return media.groupsInCommon || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        const { items, selectedIndex } = this.state;\n        if (!items.some(x => x.id === message_id)) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            switch (this.state.selectedIndex) {\n                case 0: {\n                    loadUsersContent(store, items.map(x => x.user_id));\n                    break;\n                }\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5: {\n                    loadMessageContents(store, items);\n                    break;\n                }\n                case 6: {\n                    loadChatsContent(store, items);\n                    break;\n                }\n            }\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        let source = [];\n        if (selectedIndex === 0) {\n            source = members;\n        } else if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        } else if (selectedIndex === 6) {\n            source = groupsInCommon;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (selectedIndex === 0) return;\n        if (selectedIndex === 6) return;\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    handleOpen = item => {\n        const { popup } = this.props;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { chat_id, id } = item;\n\n                openMedia(chat_id, id, false);\n                break;\n            }\n            case 'chat': {\n                const { id } = item;\n                openChat(id);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n                break;\n            }\n            case 'chatMember': {\n                const { user_id } = item;\n                openUser(user_id, true);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n            }\n        }\n    };\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        } = this.state;\n\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = members && members.length > 0\n            || photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0\n            || groupsInCommon && groupsInCommon.length > 0;\n        if (!hasItems) {\n            return (<div ref={this.listRef}/>);\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleChatIdHint = () => {\n        const { t, chatId } = this.props;\n        \n        copy(chatId);\n        \n        this.handleScheduledAction(t('LinkCopied'));\n    }\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        let openChatTitle = t('SendMessage');\n        if (isChannelChat(chatId)) {\n            openChatTitle = t('OpenChannel');\n        } else if (isGroupChat(chatId)) {\n            openChatTitle = t('OpenGroup');\n        }\n\n        let chatUrl = ''\n        if (username) {\n            if (isPrivateChat(chatId)) {\n                chatUrl = username;\n            } else {\n                const tMeUrl = OptionStore.get('t_me_url')\n                    .value\n                    .toLowerCase()\n                    .replace('https://', '')\n                    .replace('http://', '');\n\n                chatUrl = tMeUrl + username;\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\n                    onScroll={this.handleScroll}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                        {!isMe && (\n                            <List className='chat-details-items'>\n                                <ListItem className='list-item-rounded' alignItems='flex-start' onClick={this.handleChatIdHint}>\n                                    <ListItemIcon>\n                                        <ErrorOutlineIcon className='chat-details-info-icon' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {chatId}\n                                            </Typography>\n                                        }\n                                        secondary=\"ID\"\n                                    />\n                                 </ListItem>\n                                {bio && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            secondary={isPrivateChat(chatId) ? t('Bio') : t('DescriptionPlaceholder')}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                {username && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {chatUrl}\n                                                </Typography>\n                                            }\n                                            secondary={isPrivateChat(chatId) ? t('Username') : t('InviteLink')}\n                                        />\n                                    </ListItem>\n                                )}\n                                {isPrivateChat(chatId) && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {phoneNumber ? formatPhoneNumber(phoneNumber) : t('PhoneHidden')}\n                                                </Typography>\n                                            }\n                                            secondary={t('Phone')}\n                                        />\n                                    </ListItem>\n                                )}\n                                <NotificationsListItem chatId={chatId} />\n                                {popup && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {openChatTitle.toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        )}\n                    </div>\n\n                    <div ref={this.dividerRef}/>\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender } = last_message;\n        if (sender.user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\n    }\n\n    onUpdateMessageSendAcknowledged = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.setState({ sendingState: null });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(DialogMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\n    </g>,\n    'PinOff'\n);\n\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <ListItem\n                button\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}\n                >\n                    <div className='dialog-wrapper'>\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline showGroupCall/>\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                                <DialogMeta chatId={chatId} />\n                            </div>\n                            <div className='tile-second-row'>\n                                <DialogContent chatId={chatId} />\n                                <DialogBadge chatId={chatId} chatList={chatList} />\n                            </div>\n                        </div>\n                    </div>\n                    <Popover\n                        open={contextMenu}\n                        onClose={this.handleCloseContextMenu}\n                        anchorReference='anchorPosition'\n                        anchorPosition={{ top, left }}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            {canToggleArchive && (\n                                <MenuItem onClick={this.handleArchive}>\n                                    {isArchived ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnarchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Unarchive')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <ArchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Archive')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            {canTogglePin && (\n                                <MenuItem onClick={this.handlePin}>\n                                    {isPinned ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnpinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('UnpinFromTop')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <PinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('PinToTop')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleViewInfo}>\n                                <ListItemIcon>\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                            </MenuItem>\n                            { canMute && (\n                                <MenuItem onClick={this.handleMute}>\n                                    {isMuted ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnmuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsUnmute')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <MuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsMute')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleRead}>\n                                {isUnread ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <MessageIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsRead')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnreadIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsUnread')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                            {/*{clearHistory && (*/}\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                            {/*        <ListItemIcon>*/}\n                            {/*            <BroomIcon />*/}\n                            {/*        </ListItemIcon>*/}\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                            {/*    </MenuItem>*/}\n                            {/*)}*/}\n                            {deleteChat && deleteChatTitle && (\n                                <MenuItem onClick={this.handleDeleteChat}>\n                                    <ListItemIcon>\n                                        <DeleteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={deleteChatTitle} />\n                                </MenuItem>\n                            )}\n                        </MenuList>\n                    </Popover>\n            </ListItem>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n    if (element.scrollTop === 0) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 50);\n    setTimeout(() => {\n        element.scrollTo({ top: 0, behavior });\n    }, 1);\n}\n\nexport function scrollBottom(element, behavior = 'smooth') {\n    if (!element) return;\n    if (element.scrollTop === element.scrollHeight - element.offsetHeight) return;\n\n    element.scrollTop = Math.max(element.scrollTop, element.scrollHeight - element.offsetHeight - 50);\n    setTimeout(() => {\n        element.scrollTo({ top: element.scrollHeight - element.offsetHeight, behavior });\n    }, 1);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport {\n    STORAGE_CACHE_KEY,\n    STORAGE_CACHE_TEST_KEY,\n    STORAGE_CONTACTS_KEY,\n    STORAGE_CONTACTS_TEST_KEY,\n    STORAGE_FILES_KEY,\n    STORAGE_FILES_TEST_KEY,\n    STORAGE_FILTERS_KEY,\n    STORAGE_FILTERS_TEST_KEY, STORAGE_REGISTER_KEY, STORAGE_REGISTER_TEST_KEY\n} from '../Constants';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        const { useTestDC } = TdLibController.parameters;\n        this.cacheKey = useTestDC ? STORAGE_CACHE_TEST_KEY : STORAGE_CACHE_KEY;\n        this.contactsKey = useTestDC ? STORAGE_CONTACTS_TEST_KEY : STORAGE_CONTACTS_KEY;\n        this.filesKey = useTestDC ? STORAGE_FILES_TEST_KEY : STORAGE_FILES_KEY;\n        this.filtersKey = useTestDC ? STORAGE_FILTERS_TEST_KEY : STORAGE_FILTERS_KEY;\n        this.registerKey = useTestDC ? STORAGE_REGISTER_TEST_KEY : STORAGE_REGISTER_KEY;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000, {\n            leading: false,\n            trailing: true\n        });\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove(this.cacheKey);\n                        CacheManager.remove(this.filesKey);\n                        if (this.cacheContacts) {\n                            CacheManager.remove(this.contactsKey);\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        const promises = [];\n        promises.push(CacheManager.load(this.cacheKey).catch(error => null));\n        promises.push(CacheManager.load(this.filesKey).catch(error => null));\n        promises.push(CacheManager.load(this.filtersKey).catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load(this.contactsKey).catch(error => null));\n        }\n        let [cache, files, filters, contacts] = await Promise.all(promises);\n        // console.log('[f] cache.load', files);\n\n        let dropCache = false;\n        if (cache && cache.chats) {\n            for (let i = 0; i < cache.chats.length; i++) {\n                const { last_message } = cache.chats[i];\n                if (last_message && last_message.sender_user_id) {\n                    dropCache = true;\n                    break;\n                }\n            }\n        }\n        if (dropCache) {\n            cache = null;\n        }\n\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[f] cache.parse', cache.files);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const chatMap = new Map(chats.map(x => [x.id, x]));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender } = last_message;\n                switch (sender['@type']) {\n                    case 'messageSenderUser': {\n                        const user = UserStore.get(sender.user_id);\n                        if (user) {\n                            userMap.set(user.id, user);\n                        }\n                        break;\n                    }\n                    case 'messageSenderChat': {\n                        const chat = ChatStore.get(sender.chat_id);\n                        if (chat) {\n                            chatMap.set(chat.id, chat);\n                        }\n                        break;\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats: [...chatMap.values()],\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        // console.log('[cm] save');\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal');\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save(this.cacheKey, cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        const results = await Promise.all(promises);\n        await CacheManager.save(this.filesKey, results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save(this.contactsKey, contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save(this.filtersKey, this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove(this.cacheKey).catch(error => null));\n        promises.push(CacheManager.remove(this.filesKey).catch(error => null));\n        promises.push(CacheManager.remove(this.filtersKey).catch(error => null));\n        promises.push(CacheManager.remove(this.contactsKey).catch(error => null));\n        promises.push(CacheManager.remove(this.registerKey).catch(error => null));\n\n        Promise.all(promises);\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport { openSupportChat } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n\n        openSupportChat();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div className='search-input-wrapper'>\n                    {showIcon && <SearchIcon className='search-input-icon' />}\n                    <div\n                        id='search-inputbox'\n                        ref={inputRef}\n                        placeholder={hint || t('Search')}\n                        contentEditable\n                        suppressContentEditableWarning\n                        onKeyDown={this.handleKeyDown}\n                        onKeyUp={this.handleKeyUp}\n                        onPaste={this.handlePaste}\n                        onInput={this.handleInput}\n                        onFocus={onFocus}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport { openChatList } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListMain' });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListFilter', chat_filter_id: id });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div className='tabs'>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                    {filters.map(x => (\n                        <div\n                            key={x.id}\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\n                            title={isSmallWidth ? x.title : null}>\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                        </div>))}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        if (chatListEquals(this.state.chatList, chatList)) {\n            this.scrollToTop();\n        } else {\n            this.setState({\n                chatList,\n                params: {\n                    loading: false,\n                    completed: false\n                }\n            }, () => {\n                this.loadFirstSlice();\n            });\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error(`[vl] skip ${update['@type']}`, { id: chat_id, title: ChatStore.get(chat_id).title, chat: ChatStore.get(chat_id) });\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        // console.log('[vl] reorderChats', orderedChatIds);\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        if (this.stub) return;\n\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const list = current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        let offsetChat = null;\n        if (!replace && chats && chats.length > 0) {\n            offsetChat = ChatStore.get(chats[chats.length - 1]);\n            if (offsetChat) {\n                offsetOrder = getChatOrder(offsetChat.id, chatList);\n                offsetChatId = offsetChat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[vl] GETCHATS start', type, offsetOrder, offsetChatId, offsetChat);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        if (type === 'chatListMain') console.log('[vl] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source, stub = false) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        if (stub) {\n            return <DialogPlaceholder key={index} index={index} />\n        }\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        this.source = [];\n        this.stub = false;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                this.source = Array.from(Array(10));\n                this.stub = true;\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source, this.stub)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    cacheItems: PropTypes.array,\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    handleClick = () => {\n        const { innerListRef } = this.props;\n        if (!innerListRef) return;\n\n        const { current: list } = innerListRef;\n        if (!list) return;\n\n        list.scrollToTop();\n    };\n\n    render() {\n        const { t, innerListRef, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer' onClick={this.handleClick}>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline showGroupCall/>\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender.user_id && chatSearch ? (\n                <UserTile userId={sender.user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, SEARCH_GLOBAL_TEXT_MIN, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= SEARCH_GLOBAL_TEXT_MIN) {\n                trimmedText = trimmedText.length === SEARCH_GLOBAL_TEXT_MIN ? trimmedText + '.' : trimmedText;\n\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender.user_id) {\n                users.set(messages.messages[i].sender.user_id, messages.messages[i].sender.user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, message } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (message) {\n                const { sender } = message;\n                if (sender && sender.user_id) {\n                    users.set(sender.user_id, sender.user_id);\n                }\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender.user_id) {\n                users.set(result.messages[i].sender.user_id, result.messages[i].sender.user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current.cropper;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputChatPhotoStatic', photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data } }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\nimport { scrollBottom } from '../../../Utils/DOM';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        scrollBottom(wrapPanel, 'auto');\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput wrapperRef={this.searchRef} inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let { type, primary } = { type: 'light', primary: { main: '#50A2E9' } };\n        try {\n            const themeOptions = JSON.parse(localStorage.getItem('themeOptions'));\n            type = themeOptions.type;\n            primary = themeOptions.primary;\n        } catch {}\n\n        this.state = {\n            open: false,\n            type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        const type = event.target.value;\n\n        this.setState({ type });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                disableEnforceFocus={true}\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Theme')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='default' control={<Radio color='primary' />} label='System Default' />\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport { isMacOS } from '../../../Utils/Common';\nimport { SEND_BY_CTRL_ENTER_KEY } from '../../../Constants';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const sendByCtrlEnterOption = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false,\n            sendByCtrlEnter: Boolean(sendByCtrlEnterOption && sendByCtrlEnterOption.value)\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    async handleSetOption(command) {\n        let value = false;\n        switch (command) {\n            case 'sendByCtrlEnter': {\n                value = true;\n                break;\n            }\n            case 'sendByEnter': {\n                value = false;\n                break;\n            }\n        }\n\n        await TdLibController.send({\n            '@type': 'setOption',\n            name: SEND_BY_CTRL_ENTER_KEY,\n            value: { '@type': 'optionValueBoolean', value }\n        });\n\n        this.setState({\n            sendByCtrlEnter: value\n        });\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground, sendByCtrlEnter } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Theme')} />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('Keyboard')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByEnter')}>\n                            <Radio\n                                color='primary'\n                                className='settings-item-control'\n                                checked={!sendByCtrlEnter}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('SendByEnter')}\n                                secondary={t('NewLineByShiftEnter')}\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByCtrlEnter')}>\n                            <Radio\n                                color='primary'\n                                className='settings-item-control'\n                                checked={sendByCtrlEnter}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={isMacOS() ? t('SendByCommandEnter') : t('SendByControlEnter')}\n                                secondary={t('NewLineByEnter')}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions, t } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport { unblockSender } from '../../../Actions/Message';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\n    }\n\n    handleUnblockUser = async userId => {\n        unblockSender({ '@type': 'messageSenderUser', user_id: userId });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.senders.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport SectionHeader from '../SectionHeader';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacyCalls.css';\n\nclass PrivacyCalls extends React.Component {\n    state = {\n        prevAllowCalls: null,\n        prevAllowP2PCalls: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { allowCalls, allowP2PCalls } = props;\n        const { prevAllowCalls, prevAllowP2PCalls } = state;\n        if (allowCalls !== prevAllowCalls || allowP2PCalls !== prevAllowP2PCalls) {\n            const allowCallsValue = allowCalls.rules.find(x =>\n                x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n                x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n                x['@type'] === 'userPrivacySettingRuleRestrictAll');\n\n            const allowP2PCallsValue = allowP2PCalls.rules.find(x =>\n                x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n                x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n                x['@type'] === 'userPrivacySettingRuleRestrictAll');\n\n            return {\n                prevAllowCalls: allowCalls,\n                prevAllowP2PCalls: allowP2PCalls,\n                allowCallsValue: allowCallsValue ? allowCallsValue['@type'] : 'userPrivacySettingRuleRestrictAll',\n                allowP2PCallsValue: allowP2PCallsValue ? allowP2PCallsValue['@type'] : 'userPrivacySettingRuleRestrictAll'\n            }\n        }\n\n        return null;\n    }\n\n    componentWillUnmount() {\n        this.setSettings();\n    }\n\n    setSettings() {\n        const { allowCalls, allowP2PCalls } = this.props;\n        const { allowCallsValue, allowP2PCallsValue } = this.state;\n\n        const prevAllowCallsValue = allowCalls.rules.find(x =>\n            x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n            x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n            x['@type'] === 'userPrivacySettingRuleRestrictAll');\n        if (!prevAllowCallsValue || allowCallsValue !== prevAllowCallsValue['@type']) {\n            let added = false;\n            const rules = {\n                '@type': 'userPrivacySettingRules',\n                rules: allowCalls.rules.map(x => {\n                    if (x['@type'] === prevAllowCallsValue['@type']) {\n                        added = true;\n                        return { '@type': allowCallsValue }\n                    } else {\n                        return x;\n                    }\n                })\n            }\n\n            if (!added) {\n                rules.rules.push({ '@type': allowCallsValue });\n            }\n\n            TdLibController.send({\n                '@type': 'setUserPrivacySettingRules',\n                setting: { '@type': 'userPrivacySettingAllowCalls' },\n                rules\n            });\n        }\n\n        const prevAllowP2PCallsValue = allowP2PCalls.rules.find(x =>\n            x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n            x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n            x['@type'] === 'userPrivacySettingRuleRestrictAll');\n        if (!prevAllowP2PCallsValue || allowP2PCallsValue !== prevAllowP2PCallsValue['@type']) {\n            let added = false;\n            const rules = {\n                '@type': 'userPrivacySettingRules',\n                rules: allowP2PCalls.rules.map(x => {\n                    if (x['@type'] === prevAllowP2PCallsValue['@type']) {\n                        added = true;\n                        return { '@type': allowP2PCallsValue }\n                    } else {\n                        return x;\n                    }\n                })\n            }\n\n            if (!added) {\n                rules.rules.push({ '@type': allowP2PCallsValue });\n            }\n\n            TdLibController.send({\n                '@type': 'setUserPrivacySettingRules',\n                setting: { '@type': 'userPrivacySettingAllowPeerToPeerCalls' },\n                rules\n            });\n        }\n    }\n\n    handleChangeAllowCalls = event => {\n        this.setState({\n            allowCallsValue: event.currentTarget.value\n        });\n    };\n\n    handleChangeAllowP2PCalls = event => {\n        this.setState({\n            allowP2PCallsValue: event.currentTarget.value\n        });\n    };\n\n    render() {\n        const { onClose, t } = this.props;\n        const { allowCallsValue, allowP2PCallsValue } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Calls')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('WhoCanCallMe')}</SectionHeader>\n                        <RadioGroup aria-label='' name='' value={allowCallsValue} onChange={this.handleChangeAllowCalls}>\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowAll' control={<Radio color='primary'/>} label={t('P2PEverybody')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowContacts' control={<Radio color='primary'/>} label={t('P2PContacts')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleRestrictAll' control={<Radio color='primary'/>} label={t('P2PNobody')} />\n                        </RadioGroup>\n\n                        <SectionHeader>{t('PrivacyP2P')}</SectionHeader>\n                        <RadioGroup aria-label='' name='' value={allowP2PCallsValue} onChange={this.handleChangeAllowP2PCalls}>\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowAll' control={<Radio color='primary'/>} label={t('P2PEverybody')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowContacts' control={<Radio color='primary'/>} label={t('P2PContacts')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleRestrictAll' control={<Radio color='primary'/>} label={t('P2PNobody')} />\n                        </RadioGroup>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nPrivacyCalls.propTypes = {\n    allowCalls: PropTypes.object.isRequired,\n    allowP2PCalls: PropTypes.object.isRequired,\n};\n\nexport default withTranslation()(PrivacyCalls);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CallOutlinedIcon from '@material-ui/icons/CallOutlined';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\nimport PrivacyCalls from './PrivacyCalls';\nimport { CallOutlined } from '@material-ui/icons';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        openActiveSessions: false,\n\n        users: null,\n        openBlockedUsers: false,\n\n        allowCalls: null,\n        allowP2PCalls: null,\n        openCalls: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, senders } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    senders: senders.filter(x => x.user_id !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).catch(() => null));\n        promises.push(TdLibController.send({\n            '@type': 'getBlockedMessageSenders',\n            offset: 0,\n            limit: 100\n        }).catch(() => null));\n        promises.push(TdLibController.send({\n            '@type': 'getUserPrivacySettingRules',\n            setting: { '@type': 'userPrivacySettingAllowCalls' }\n        }).catch(() => null));\n        promises.push(TdLibController.send({\n            '@type': 'getUserPrivacySettingRules',\n            setting: { '@type': 'userPrivacySettingAllowPeerToPeerCalls' }\n        }).catch(() => null));\n\n        const [ sessions, users, allowCalls, allowP2PCalls ] = await Promise.all(promises);\n\n        this.setState({\n            sessions,\n            users,\n            allowCalls,\n            allowP2PCalls\n        });\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    openCalls = () => {\n        const { allowCalls, allowP2PCalls } = this.state;\n        if (!allowCalls || !allowP2PCalls) return;\n\n        this.setState({\n            openCalls: true\n        });\n    };\n\n    closeCalls = () => {\n        this.setState({\n            openCalls: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const {\n            openBlockedUsers, users,\n            openActiveSessions, sessions,\n            openCalls, allowCalls, allowP2PCalls\n        } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openCalls}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <CallOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                className='settings-list-item-text'\n                                primary={t('Calls')}\n                                secondary={''}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n                <SidebarPage open={openCalls} onClose={this.closeCalls}>\n                    <PrivacyCalls allowCalls={allowCalls} allowP2PCalls={allowP2PCalls} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile || defaultPhoto) {\n            const photo = defaultPhotoFile\n                ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\n\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputChatPhotoStatic', photo }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\nimport { scrollBottom } from '../../Utils/DOM';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        scrollBottom(wrapPanel, 'auto');\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile || defaultPhoto) {\n                const photo = defaultPhotoFile\n                     ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                     : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\n\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputChatPhotoStatic', photo }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache && cache.chats ? cache.chats : null;\n        const archiveCacheItems = cache && cache.archiveChats ? cache.archiveChats : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        {/*<UpdatePanel />*/}\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    onClientUpdateBlob = update => {\n        const { chatId, messageId, thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\n        if (!thumbnail) return null;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(file);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile' onClick={onClick}>\n                {miniSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-mini-blurred': true }\n                        )}\n                        draggable={false}\n                        src={miniSrc}\n                        alt=''\n                    />\n                )}\n                {src && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\nimport { closePinned, openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        closePinned();\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {thumbnail && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            minithumbnail={minithumbnail}\n                            thumbnail={thumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Save') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, getChatFullInfo, isMeChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { isDeletedUser, isMeUser } from '../../Utils/User';\nimport { PHOTO_SIZE, SEND_BY_CTRL_ENTER_KEY, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('clientUpdateSendText', this.onClientUpdateSendText);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('clientUpdateSendText', this.onClientUpdateSendText);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n    };\n\n    onClientUpdateSendText = update => {\n        const { text } = update;\n\n        if (!text) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = text;\n        focusInput(element);\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const { chatSelectOptions } = AppStore;\n        if (chatSelectOptions && chatSelectOptions.switchInline) {\n            this.setFormattedText({ '@type': 'formattedText', text: chatSelectOptions.switchInline, entities: [] });\n            return;\n        }\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                const sendByCtrlEnter = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\n                if (sendByCtrlEnter && sendByCtrlEnter.value) {\n                    // enter+cmd, enter+ctrl, enter+shift\n                    if (!altKey && !ctrlKey && !metaKey && !repeat) {\n                        document.execCommand('insertLineBreak');\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                    // enter+cmd, enter+ctrl\n                    else if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                        this.handleSubmit(false);\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                } else {\n                    // enter+cmd, enter+ctrl, enter+shift\n                    if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                        document.execCommand('insertLineBreak');\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                    // enter\n                    else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                        this.handleSubmit(false);\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    async editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        return TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n\n        // const { text, position } = this.getTextAndCaretPosition();\n        // this.searchUsernameOrHashtag(text, position, [], false);\n    };\n\n    getTextAndCaretPosition = () => {\n        const { current: input } = this.newMessageRef;\n        if (!input) return;\n\n        input.focus()\n        let _range = document.getSelection().getRangeAt(0);\n        let range = _range.cloneRange();\n        range.selectNodeContents(input);\n        range.setEnd(_range.endContainer, _range.endOffset);\n\n        return { text: input.innerText, position: range.toString().length };\n    };\n\n    searchUsernameOrHashtag(text, position, messages, usernameOnly) {\n        const { chatId } = this.state;\n\n        const searchResultUsernames = [];\n\n        if (this.cancelDelayRunnable) {\n            clearTimeout(this.cancelDelayRunnable);\n            this.cancelDelayRunnable = null;\n        }\n\n        const info = getChatFullInfo(chatId);\n        const needUsernames = true;\n        const needBotContext = true;\n\n        const now = Date.now();\n        this.now = now;\n\n        let searchPosition = position;\n        if (text.length > 0) {\n            searchPosition--;\n        }\n\n        this.lastText = text;\n        this.lastUsernameOnly = usernameOnly;\n\n        let foundType = -1;\n        let result = '';\n        let resultStartPosition;\n        let resultLength;\n\n        let dogPosition = -1;\n        if (usernameOnly) {\n            result += text.substring(1);\n            resultStartPosition = 0;\n            resultLength = result.length;\n            foundType = 0;\n        } else {\n            for (let i = searchPosition; i >= 0; i--) {\n                if (i >= text.length){\n                    continue;\n                }\n                let ch = text[i];\n                if (i === 0 || text[i - 1] === ' ' || text[i - 1] === '\\n' || text[i - 1] === ':') {\n                    if (ch === '@') {\n                        if (needUsernames || needBotContext && i === 0){\n                            if (!info && i !== 0) {\n                                this.lastText = text;\n                                this.lastPosition = position;\n                                this.messages = messages;\n                                this.closeHints(now);\n                                return;\n                            }\n                            dogPosition = i;\n                            foundType = 0;\n                            resultStartPosition = i;\n                            resultLength = result.length + 1;\n                        }\n                    }\n                }\n\n                result = ch + result;\n            }\n        }\n\n        if (foundType === -1) {\n            this.closeHints(now);\n            return;\n        }\n\n        if (foundType === 0) {\n            const users = [];\n            const usersMap = new Map();\n            for (let i = 0; i < Math.min(100, messages.length); i++) {\n                const { sender } = messages[i];\n                if (sender && sender.user_id && !usersMap.has(sender.user_id)) {\n                    usersMap.set(sender.user_id, sender.user_id);\n                    users.push(sender.user_id);\n                }\n            }\n\n            let usernameString = result.substr(resultStartPosition, resultLength).toLowerCase();\n            const hasSpace = usernameString.indexOf(' ') >= 0;\n            const newResult = [];\n            const newResultsMap = new Map();\n            const newMap = new Map();\n\n            const inlineBots = [];\n            if (!usernameOnly && needBotContext && dogPosition === 0 && inlineBots.length > 0) {\n\n            }\n\n            const chat = ChatStore.get(chatId);\n            if (chat && info && info.members) {\n                for (let i = -1; i < info.members.length; i++) {\n                    let username;\n                    let firstName;\n                    let lastName;\n                    let object;\n                    let id;\n                    if (i === -1) {\n                        if (!usernameString.length) {\n                            newResult.push(chat);\n                            continue;\n                        }\n                        firstName = chat.title;\n                        lastName = '';\n                        username = chat.username;\n                        object = chat;\n                        id = -chat.id;\n                    } else {\n                        const { user_id } = info.members[i];\n                        const user = UserStore.get(user_id);\n                        if (!user || !usernameOnly && isMeUser(user_id) || newResultsMap.has(user_id)) {\n                            continue;\n                        }\n                        if (!usernameString.length) {\n                            if (!isDeletedUser(user_id)) {\n                                newResult.push(user);\n                                continue;\n                            }\n                        }\n                        firstName = user.first_name;\n                        lastName = user.last_name;\n                        username = user.username;\n                        object = user;\n                        id = user.id;\n                    }\n\n                    if (username.length > 0 && username.toLowerCase().startsWith(usernameString)\n                        || firstName.length > 0 && firstName.toLowerCase().startsWith(usernameString)\n                        || lastName.length > 0 && lastName.toLowerCase().startsWith(usernameString)\n                        || hasSpace && `${firstName} ${lastName}`.toLowerCase().startsWith(usernameString)) {\n                        newResult.push(object);\n                        newMap.set(id, object);\n                    }\n                }\n            }\n\n            if (isSupergroup(chatId) && usernameString.length > 0) {\n                if (newResult.length < 5) {\n                    this.cancelDelayRunnable = setTimeout(() => {\n                        this.cancelDelayRunnable = null;\n                        this.showUsersResult(now, newResult, newMap, true);\n                    }, 0);\n                } else {\n                    this.showUsersResult(now, newResult, newMap, true);\n                }\n\n                setTimeout(async () => {\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const result = await TdLibController.send({\n                        '@type': 'searchChatMembers',\n                        chat_id: chatId,\n                        query: usernameString,\n                        limit: 20,\n                        filter: { '@type': 'chatMembersFilterMention', message_thread_id: 0 }\n                    });\n\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const { members } = result;\n                    if (members.length > 0) {\n                        for (let i = 0; i < members.length; i++) {\n                            const { user_id } = members[i];\n                            if (isMeUser(user_id)) {\n                                continue;\n                            }\n                            const user = UserStore.get(user_id);\n                            if (!user) {\n                                continue;\n                            }\n\n                            searchResultUsernames.push(user);\n                        }\n\n                        this.notifyDataSetChanged(now, searchResultUsernames);\n                    }\n\n\n                }, 200);\n            } else {\n                this.showUsersResult(now, newResult, newMap, true);\n            }\n        }\n    }\n\n    notifyDataSetChanged(id, searchResultUsernames) {\n        console.log('[search] global', searchResultUsernames);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsGlobal',\n            id,\n            global: searchResultUsernames\n        });\n    }\n\n    showUsersResult(id, newResult, newMap, notify) {\n        console.log('[search] local', newResult);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsLocal',\n            id,\n            local: newResult\n        });\n    }\n\n    closeHints(id) {\n        console.log('[search] close');\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsClose',\n            id\n        });\n    }\n\n    openHints() {\n\n    }\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = async (caption, content) => {\n        if (content) {\n            const message = await this.editMessageMedia(content);\n            if (message) {\n                const { content: editContent } = message;\n                switch (editContent['@type']) {\n                    case 'messagePhoto': {\n                        const { photo: sendPhoto } = content;\n                        if (!sendPhoto) break;\n\n                        const { data: blob } = sendPhoto;\n                        if (!blob) break;\n\n                        const { photo } = editContent;\n                        if (!photo) break;\n\n                        const iSize = photo.sizes.find(x => x.type === 'i');\n                        if (!iSize) break;\n\n                        const { photo: file } = iSize;\n                        if (file) {\n                            FileStore.setBlob(file.id, blob);\n                        }\n                        break;\n                    }\n                }\n            }\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                            {command}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId, isBotChat } from '../../Utils/Chat';\nimport { sendBotStartMessage, unblockSender } from '../../Actions/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const { is_blocked, last_message } = chat;\n\n                return {\n                    prevChatId: chatId,\n\n                    isBlocked: is_blocked,\n                    hasLastMessage: Boolean(last_message)\n                };\n            }\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId, options } = this.props;\n        const { hasLastMessage, isBlocked, clearHistory } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.options !== options) {\n            return true;\n        }\n\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.hasLastMessage !== hasLastMessage) {\n            return true;\n        }\n\n        if (nextState.isBlocked !== isBlocked) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        this.setState({\n            clearHistory: update.inProgress\n        });\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chat_id, last_message } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            hasLastMessage: Boolean(last_message)\n        });\n    };\n\n    onUpdateChatIsBlocked = update => {\n        const { chat_id, is_blocked } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            isBlocked: is_blocked\n        });\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    handleUnblock = () => {\n        const { chatId } = this.props;\n\n        unblockSender({ '@type': 'messageSenderChat', chat_id: chatId });\n    };\n\n    handleStartBot = async () => {\n        const { chatId, options } = this.props;\n\n        await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n        if (options && options.botStartMessage) {\n            const { botUserId, parameter } = options.botStartMessage;\n\n            await sendBotStartMessage(chatId, botUserId, parameter);\n        } else {\n            await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: 0,\n                input_message_content: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: '/start',\n                        entities: []\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: true\n                }\n            });\n        }\n    };\n\n    render() {\n        const { chatId, options, t } = this.props;\n        const { hasLastMessage, clearHistory } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type, is_blocked } = chat;\n        if (!type) return null;\n\n        if (is_blocked) {\n            return <FooterCommand command={t('Unblock')} onCommand={this.handleUnblock} />;\n        }\n\n        if (options && options.botStartMessage) {\n            const isBot = isBotChat(chatId);\n            if (isBot) {\n                return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n            }\n        }\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypeSecret':\n            case 'chatTypePrivate': {\n                const isBot = isBotChat(chatId);\n                if (isBot && (!hasLastMessage || clearHistory)) {\n                    return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n                }\n\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const MAX_SPEED = 8.2;\nexport const MIN_SPEED = 0.8;\nexport const AMPLITUDE_SPEED = 0.33;\n\nexport const SCALE_BIG = 0.807;\nexport const SCALE_SMALL = 0.704;\n\nexport const SCALE_BIG_MIN = 0.878;\nexport const SCALE_SMALL_MIN = 0.926;\n\nexport const FORM_BIG_MAX = 0.6;\nexport const FORM_SMALL_MAX = 0.6;\n\nexport const GLOBAL_SCALE = 1;\n\nexport const FORM_BUTTON_MAX = 0;\n\nexport const GRADIENT_SPEED_MIN = 0.5;\nexport const GRADIENT_SPEED_MAX = 0.01;\n\nexport const LIGHT_GRADIENT_SIZE = 0.5;\n\nfunction rotateZ(x, y, angle, originX, originY) {\n    x -= originX;\n    y -= originY;\n\n    let X = x * Math.cos(angle) - y * Math.sin(angle);\n    let Y = y * Math.cos(angle) + x * Math.sin(angle);\n\n    x = X + originX;\n    y = Y + originY;\n\n    return [x, y];\n}\n\nexport default class BlobDrawable {\n    constructor(n) {\n        this.maxRadius = 10;\n        this.minRadius = 0;\n\n        this.cubicBezierK = 1.0;\n        this.N = n;\n        this.L = (4.0 / 3.0) * Math.tan(Math.PI / (2 * this.N));\n        this.radius = new Array(n);\n        this.angle = new Array(n);\n\n        this.radiusNext = new Array(n);\n        this.angleNext = new Array(n);\n        this.progress = new Array(n);\n        this.speed = new Array(n);\n\n        this.pointStart = new Array(4);\n        this.pointEnd = new Array(4);\n\n        for (let i = 0; i < this.N; i++) {\n            this.generateBlob(this.radius, this.angle, i);\n            this.generateBlob(this.radiusNext, this.angleNext, i);\n            this.progress[i] = 0;\n        }\n    }\n\n    generateBlob(radius, angle, i) {\n        const { maxRadius, minRadius, speed, N } = this;\n\n        const angleDif = 2 * Math.PI / N * 0.05;\n        const radDif = maxRadius - minRadius;\n        radius[i] = minRadius + Math.random() * radDif;\n        angle[i] = 2 * Math.PI / N * i + Math.random() * angleDif;\n        speed[i] = 0.017 + 0.003 * Math.random();\n    }\n\n    update(amplitude, speedScale) {\n        const { N, progress, speed, radius, radiusNext, angle, angleNext } = this;\n        for (let i = 0; i < N; i++) {\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\n            if (progress[i] >= 1.0) {\n                progress[i] = 0.0;\n                radius[i] = radiusNext[i];\n                angle[i] = angleNext[i];\n                this.generateBlob(radiusNext, angleNext, i);\n            }\n        }\n    }\n\n    draw(cX, cY, canvas, paint) {\n        // console.log('[bd] draw', cX, cY, canvas, paint);\n        if (canvas.getContext) {\n            const ctx = canvas.getContext('2d');\n            // ctx.globalAlpha = 0.5;\n            // ctx.lineWidth = 1;\n\n            ctx.beginPath();\n\n            const { radius, radiusNext, angle, angleNext, N, L, cubicBezierK, pointStart, pointEnd } = this;\n\n            for (let i = 0; i < N; i++) {\n                const progress = this.progress[i];\n                const nextIndex = i + 1 < N ? i + 1 : 0;\n                const progressNext = this.progress[nextIndex];\n                const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\n                const r2 = radius[nextIndex] * (1.0 - progressNext) + radiusNext[nextIndex] * progressNext;\n                const angle1 = angle[i] * (1.0 - progress) + angleNext[i] * progress;\n                const angle2 = angle[nextIndex] * (1.0 - progressNext) + angleNext[nextIndex] * progressNext;\n                const l = L * (Math.min(r1, r2) + (Math.max(r1, r2) - Math.min(r1, r2)) / 2) * cubicBezierK;\n\n                pointStart[0] = cX;\n                pointStart[1] = cY - r1;\n                pointStart[2] = cX + l;\n                pointStart[3] = cY - r1;\n\n                this.mapPoints(pointStart, cX, cY, angle1);\n\n                pointEnd[0] = cX;\n                pointEnd[1] = cY - r2;\n                pointEnd[2] = cX - l;\n                pointEnd[3] = cY - r2;\n\n                this.mapPoints(pointEnd, cX, cY, angle2);\n\n                if (i === 0) {\n                    // console.log('[bd] moveTo', pointStart[0], pointStart[1]);\n                    ctx.moveTo(pointStart[0], pointStart[1]);\n                }\n                // console.log('[bd] bezierCurveTo', pointEnd[0], pointEnd[1]);\n                ctx.bezierCurveTo(\n                    pointStart[2], pointStart[3],\n                    pointEnd[2], pointEnd[3],\n                    pointEnd[0], pointEnd[1]\n                );\n            }\n\n            // ctx.scale(1.0, 1.0);\n            // this.fillStyleFunc(ctx);\n            paint(ctx);\n            ctx.fill();\n            ctx.closePath();\n        }\n    }\n\n    mapPoints(points, cX, cY, angle) {\n        const result1 = rotateZ(points[0], points[1], angle, cX, cY);\n        const result2 = rotateZ(points[2], points[3], angle, cX, cY);\n\n        points[0] = result1[0];\n        points[1] = result1[1];\n        points[2] = result2[0];\n        points[3] = result2[1];\n    }\n\n    generateInitBlob() {\n        const { radius, radiusNext, angle, angleNext, progress, N } = this;\n\n        for (let i = 0; i < N; i++) {\n            this.generateBlob(radius, angle, i);\n            this.generateBlob(radiusNext, angleNext, i);\n            progress[i] = 0;\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// const MIN_SPEED = 0.8;\n// const MAX_SPEED = 8.2;\n\nimport { MIN_SPEED, MAX_SPEED } from './BlobDrawable';\n\nexport default class LineBlobDrawable {\n    constructor(n) {\n        this.maxRadius = 10;\n        this.minRadius = 0;\n\n        this.N = n;\n        this.radius = new Array(n + 1);\n\n        this.radiusNext = new Array(n + 1);\n        this.progress = new Array(n + 1);\n        this.speed = new Array(n + 1);\n\n        for (let i = 0; i <= n; i++) {\n            this.generateBlob(this.radius, i);\n            this.generateBlob(this.radiusNext, i);\n            this.progress[i] = 0;\n        }\n    }\n\n    generateBlob(radius, i) {\n        const { maxRadius, minRadius, speed } = this;\n\n        const radDif = maxRadius - minRadius;\n        radius[i] = minRadius + Math.random() * radDif;\n        speed[i] = 0.017 + 0.003 * Math.random();\n    }\n\n    generateNextBlob() {\n        const { radius, radiusNext, progress, N } = this;\n        for (let i = 0; i < N; i++) {\n            this.generateBlob(radius, i);\n            this.generateBlob(radiusNext, i);\n            progress[i] = 0.0;\n        }\n    }\n\n    update(amplitude, speedScale) {\n        const { N, progress, speed, radius, radiusNext } = this;\n        for (let i = 0; i <= N; i++) {\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\n            if (progress[i] >= 1.0) {\n                progress[i] = 0.0;\n                radius[i] = radiusNext[i];\n                this.generateBlob(radiusNext, i);\n            }\n        }\n    }\n\n    draw(left, top, right, bottom, canvas, paint, pinnedTop, progressToPinned) {\n        if (canvas.getContext) {\n            const ctx = canvas.getContext('2d');\n            // ctx.globalAlpha = 0.5;\n            // ctx.lineWidth = 1;\n\n            ctx.beginPath();\n            ctx.moveTo(right, bottom);\n            ctx.lineTo(left, bottom);\n\n            const { radius, radiusNext, N } = this;\n            for (let i = 0; i <= N; i++) {\n                if (i === 0) {\n                    const progress = this.progress[i];\n                    const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\n                    const y = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    ctx.lineTo(left, y);\n                } else {\n                    const progress = this.progress[i - 1];\n                    const r1 = radius[i - 1] * (1.0 - progress) + radiusNext[i - 1] * progress;\n                    const progressNext = this.progress[i];\n                    const r2 = radius[i] * (1.0 - progressNext) + radiusNext[i] * progressNext;\n                    const x1 = (right - left) / N * (i - 1);\n                    const x2 = (right - left) / N * i;\n                    const cx = x1 + (x2 - x1) / 2;\n\n                    const y1 = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    const y2 = (top - r2) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    ctx.bezierCurveTo(\n                        cx, y1,\n                        cx, y2,\n                        x2, y2\n                    );\n                    if (i === N) {\n                        ctx.lineTo(right, bottom);\n                    }\n                }\n            }\n\n            // ctx.scale(1.0, 1.0);\n            paint(ctx);\n            ctx.fill();\n            ctx.closePath();\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LineBlobDrawable from './LineBlobDrawable';\n\nexport const MUTE_BUTTON_STATE_UNMUTE = 0;\nexport const MUTE_BUTTON_STATE_MUTE = 1;\nexport const MUTE_BUTTON_STATE_CONNECTING = 2;\nexport const MUTE_BUTTON_STATE_MUTED_BY_ADMIN = 3;\n\nexport class WeavingState {\n    constructor(stateId) {\n        this.stateId = stateId;\n        this.shader = (ctx, left, top, right, bottom) => { };\n        this.createGradient(stateId);\n    }\n\n    createGradient(stateId) {\n        this.shader = (ctx, left, top, right, bottom) => {\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\n        };\n    }\n\n    // Android colors\n    static getGradientFromType(ctx, type, x0, y0, x1, y1) {\n        const gradient = ctx.createLinearGradient(x0, y0, x1, y1);\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            gradient.addColorStop(0, '#57A4FE');\n            gradient.addColorStop(.6, '#766EE9');\n            gradient.addColorStop(1, '#F05459');\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\n            gradient.addColorStop(0, '#00B1C0');\n            gradient.addColorStop(1, '#52CE5D');\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\n            gradient.addColorStop(0, '#2BCEFF');\n            gradient.addColorStop(1, '#0976E3');\n        } else {\n            gradient.addColorStop(0, '#8599aa');\n            gradient.addColorStop(1, '#8599aa');\n        }\n\n        return gradient;\n    }\n\n    update(height, width, dt, amplitude) {\n        // TODO: move gradient here\n    }\n}\n\nclass TopBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.focused = true;\n        this.resizing = false;\n        this.lastUpdateTime = new Date();\n        this.amplitude = 0.0;\n        this.amplitude2 = 0.0;\n\n        this.states = [\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\n        ];\n        this.prevState = null;\n        this.currentState = this.states[MUTE_BUTTON_STATE_CONNECTING];\n        this.progressToState = 1.0;\n\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 20 * this.scale;\n        this.right = 1260 * this.scale;\n        this.bottom = 63 * this.scale;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        window.addEventListener('blur', this.handleBlur);\n        window.addEventListener('focus', this.handleFocus);\n        window.addEventListener('resize', this.handleResize);\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n\n        const topBar = document.getElementById('top-bar');\n        this.right = topBar.offsetWidth * this.scale;\n        this.forceUpdate();\n\n        this.canvas = document.getElementById('canvas');\n        this.lbd = new LineBlobDrawable(3);\n        this.lbd1 = new LineBlobDrawable(7);\n        this.lbd2 = new LineBlobDrawable(8);\n        this.setAmplitude(this.amplitude);\n\n        this.draw();\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        window.removeEventListener('blur', this.handleBlur);\n        window.removeEventListener('focus', this.handleFocus);\n        window.removeEventListener('resize', this.handleResize);\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n    }\n\n    handleDevicePixelRatioChanged = e => {\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 20 * this.scale;\n        this.bottom = 63 * this.scale;\n\n        const topBar = document.getElementById('top-bar');\n        if (!topBar) return;\n\n        this.right = topBar.offsetWidth * this.scale;\n        this.forceUpdate();\n    }\n\n    handleResize = () => {\n        if (this.resizeHandler) {\n            clearTimeout(this.resizeHandler);\n            this.resizeHandler = null;\n        }\n\n        this.resizing = true;\n        this.resizeCanvas();\n        this.resizeHandler = setTimeout(() => {\n            this.resizing = false;\n            this.invokeDraw();\n        }, 250);\n    }\n\n    resizeCanvas() {\n        const topBar = document.getElementById('top-bar');\n\n        this.scale = window.devicePixelRatio;\n        this.right = topBar.offsetWidth * this.scale;\n\n        this.forceUpdate();\n        this.invokeDraw();\n    }\n\n    handleFocus = () => {\n        this.focused = true;\n        this.invokeDraw();\n    }\n\n    handleBlur = () => {\n        this.focused = false;\n    }\n\n    invokeDraw = () => {\n        if (this.raf) return;\n\n        this.draw();\n    }\n\n    draw = (force = false) => {\n        this.raf = null;\n        if (!this.mounted) {\n            return;\n        }\n        const { lbd, lbd1, lbd2, scale, left, top, right, bottom, currentState, previousState, focused, resizing } = this;\n        if (!focused && !resizing && this.progressToState >= 1.0) {\n            return;\n        }\n\n        // console.log('[top] draw', [focused, resizing, this.mounted]);\n\n        const newTime = new Date();\n        let dt = (newTime - this.lastUpdateTime);\n        if (dt > 20) {\n            dt = 17;\n        }\n\n        // console.log('draw start', this.amplitude, this.animateToAmplitude);\n        if (this.animateToAmplitude !== this.amplitude) {\n            this.amplitude += this.animateAmplitudeDiff * dt;\n            if (this.animateAmplitudeDiff > 0) {\n                if (this.amplitude > this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude < this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            }\n        }\n\n        if (this.animateToAmplitude !== this.amplitude2) {\n            this.amplitude2 += this.animateAmplitudeDiff2 * dt;\n            if (this.animateAmplitudeDiff2 > 0) {\n                if (this.amplitude2 > this.animateToAmplitude) {\n                    this.amplitude2 = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude2 < this.animateToAmplitude) {\n                    this.amplitude2 = this.animateToAmplitude;\n                }\n            }\n        }\n\n        if (previousState) {\n            this.progressToState += dt / 250;\n            if (this.progressToState > 1) {\n                this.progressToState = 1;\n                this.previousState = null;\n            }\n        }\n\n        const top1 = 6 * this.amplitude2 * scale;\n        const top2 = 6 * this.amplitude2 * scale;\n\n        const ctx = this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n        lbd.minRadius = 0;\n        lbd.maxRadius = (2 + 2 * this.amplitude) * scale;\n        lbd1.minRadius = 0;\n        lbd1.maxRadius = (3 + 9 * this.amplitude) * scale;\n        lbd2.minRadius = 0;\n        lbd2.maxRadius = (3 + 9 * this.amplitude) * scale;\n\n        lbd.update(this.amplitude, 0.3);\n        lbd1.update(this.amplitude, 0.7);\n        lbd2.update(this.amplitude, 0.7);\n\n        for (let i = 0; i < 2; i++) {\n            if (i === 0 && !previousState) {\n                continue;\n            }\n\n            let alpha = 1;\n            let state = null;\n            if (i === 0) {\n                alpha = 1 - this.progressToState;\n                state = previousState;\n                // previousState.setToPaint(paint);\n            } else {\n                alpha = previousState ? this.progressToState : 1;\n                currentState.update(bottom - top, right - left, dt, this.amplitude);\n                state = currentState;\n                // currentState.setToPaint(paint);\n            }\n\n            const paint1 = ctx => {\n                ctx.globalAlpha = 0.3 * alpha;\n                state.shader(ctx, left, top, right, bottom);\n            };\n            const paint = ctx => {\n                ctx.globalAlpha = i === 0? 1 : alpha;\n                state.shader(ctx, left, top, right, bottom);\n            };\n\n            lbd1.draw(left, top - top1, right, bottom, this.canvas, paint1,  top, 1.0);\n            lbd2.draw(left, top - top2, right, bottom, this.canvas, paint1,  top, 1.0);\n            lbd.draw(left, top, right, bottom, this.canvas, paint, top, 1.0);\n        }\n\n        if (!force) {\n            this.raf = requestAnimationFrame(() => this.draw());\n        }\n    };\n\n    setCurrentState = (stateId, animated) => {\n        const { currentState, states } = this;\n\n        if (currentState && currentState.id === stateId) {\n            return;\n        }\n\n        this.previousState = animated ? currentState : null;\n        this.currentState = states[stateId];\n        this.progressToState = this.previousState ? 0.0 : 1.0;\n    };\n\n    setAmplitude(value) {\n        this.animateToAmplitude = value;\n        this.animateAmplitudeDiff = (value - this.amplitude) / 250;\n        this.animateAmplitudeDiff2 = (value - this.amplitude) / 120;\n    }\n\n    render() {\n        const { left, right, top, bottom, scale } = this;\n\n        return(\n            <div id='top-bar' className='top-bar'>\n                <canvas id='canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\n            </div>\n        );\n    }\n}\n\nTopBar.propTypes = {};\n\nexport default TopBar;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport TopBar, { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\nimport { getChatTitle } from '../../Utils/Chat';\nimport { getCallStatus } from '../../Calls/Utils';\nimport { openGroupCallPanel } from '../../Actions/Call';\nimport { showSnackbar } from '../../Actions/Client';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallTopPanel.css';\n\nclass GroupCallTopPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.topBarRef = React.createRef();\n\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected,\n            animated: CallStore.animated\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { call, status, connected, animated } = this.state;\n\n        if (nextState.call !== call) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.connected !== connected) {\n            return true;\n        }\n\n        if (nextState.animated !== animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.switchButtonState(false);\n\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    switchButtonState(animated = true) {\n        const { connected, status } = this.state;\n\n        let stateId = MUTE_BUTTON_STATE_MUTE;\n        if (!connected) {\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\n        } else {\n            if (status === 'forceMuted') {\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\n            } else if (status === 'unmuted') {\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\n            } else if (status === 'muted') {\n                stateId = MUTE_BUTTON_STATE_MUTE;\n            }\n        }\n\n        this.topBarRef.current && this.topBarRef.current.setCurrentState(stateId, animated);\n    }\n\n    onClientUpdateGroupCallAmplitudeChange = update => {\n        const { amplitudes, type } = update;\n        if (!amplitudes.length) return;\n\n        let max = 0;\n        for (let i = 0; i < amplitudes.length; i++) {\n            const { type, value } = amplitudes[i];\n            max = value > max ? value : max;\n        }\n\n        if (type !== 'input') {\n            this.topBarRef.current && this.topBarRef.current.setAmplitude(max);\n        }\n    };\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id } = participant;\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status\n        }, () => {\n            this.switchButtonState(true);\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.saveMessagesScrollPosition();\n        this.setState({\n            call,\n            status,\n            connected\n        }, () => {\n            this.restoreMessagesScrollPosition(Boolean(call));\n            this.switchButtonState(true);\n        });\n    };\n\n    saveMessagesScrollPosition() {\n        const elements = document.getElementsByClassName('messages-list-wrapper');\n        if (!elements.length) return;\n\n        [...elements].forEach(x => {\n            const list = x;\n            if (!list) return;\n\n            const prevOffsetHeight = list.offsetHeight;\n            const prevScrollTop = list.scrollTop;\n\n            list.prevOffsetHeight = prevOffsetHeight;\n            list.prevScrollTop = prevScrollTop;\n        });\n    }\n\n    restoreMessagesScrollPosition(openPanel = true) {\n        const elements = document.getElementsByClassName('messages-list-wrapper');\n        if (!elements.length) return;\n\n        [...elements].forEach(x => {\n            const list = x;\n            if (!list) return;\n\n            const { prevScrollTop, prevOffsetHeight } = list;\n            if (list.scrollTop === prevScrollTop) {\n                const offsetHeightDiff = Math.abs(prevOffsetHeight - list.offsetHeight);\n                list.scrollTop += openPanel ? offsetHeightDiff : - offsetHeightDiff;\n            }\n        });\n    }\n\n    handleMicrophone = async event => {\n        event.stopPropagation();\n\n        const { call, status } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId, stream } = call;\n\n        const groupCall = CallStore.get(groupCallId);\n        if (!groupCall) return;\n\n        if (!groupCall.can_unmute_self) {\n            showSnackbar(LStore.getString('VoipMutedByAdminInfo'), closeSnackbar => snackKey => {\n                return (\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => { closeSnackbar(snackKey); }}>\n                        <CloseIcon />\n                    </IconButton>\n                )\n            });\n        } else {\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\n        }\n    };\n\n    handleLeave = async event => {\n        event.stopPropagation();\n\n        const { call } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        await CallStore.leaveGroupCall(chatId, groupCallId);\n    };\n\n    handleOpenGroupCall = () => {\n        const { call } = this.state;\n        if (!call) return;\n\n        openGroupCallPanel();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { call, status, connected, animated } = this.state;\n        if (!call) return null;\n\n        const { chatId } = call;\n        const title = connected ? getChatTitle(chatId).toUpperCase() : t('Connecting');\n\n        return (\n            <div className='group-call-top-panel-wrapper'>\n                { animated ? (\n                    <TopBar ref={this.topBarRef}/>\n                    ) : (\n                    <div className={classNames('group-call-top-panel',\n                        {\n                            'group-call-top-panel-muted-by-admin ': connected && status === 'forceMuted',\n                            'group-call-top-panel-unmuted': connected && status === 'unmuted',\n                            'group-call-top-panel-connecting': !connected,\n\n                        })}\n                    />\n                )}\n                <div className='group-call-top-panel-buttons' onClick={this.handleOpenGroupCall}>\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleMicrophone}>\n                        {status === 'unmuted' ? <MicIcon fontSize='small'/> : <MicOffIcon fontSize='small' />}\n                    </IconButton>\n                    <div className='group-call-top-panel-title'>\n                        {title}\n                    </div>\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleLeave}>\n                        <CallEndIcon fontSize='small' />\n                    </IconButton>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nGroupCallTopPanel.propTypes = {};\n\nexport default withTranslation()(GroupCallTopPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\n    'PlaylistEdit'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z' />,\n    'Block'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6.62,10.79C8.06,13.62 10.38,15.94 13.21,17.38L15.41,15.18C15.69,14.9 16.08,14.82 16.43,14.93C17.55,15.3 18.75,15.5 20,15.5A1,1 0 0,1 21,16.5V20A1,1 0 0,1 20,21A17,17 0 0,1 3,4A1,1 0 0,1 4,3H7.5A1,1 0 0,1 8.5,4C8.5,5.25 8.7,6.45 9.07,7.57C9.18,7.92 9.1,8.31 8.82,8.59L6.62,10.79Z' />,\n    'Phone'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\nimport CallOutlinedIcon from '@material-ui/icons/CallOutlined';\nimport BlockIcon from '../../Assets/Icons/Block';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport PhoneIcon from '../../Assets/Icons/Phone';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport UserIcon from '../../Assets/Icons/User';\nimport {\n    canClearHistory,\n    canDeleteChat,\n    getViewInfoTitle,\n    isPrivateChat,\n    getDeleteChatTitle,\n    hasOnePinnedMessage,\n    canSwitchBlocked,\n    getChatSender,\n    canManageVoiceChats,\n    canBeReported, getChatUserId, canBeCalled\n} from '../../Utils/Chat';\nimport { clearHistory, leaveChat, openReportChat } from '../../Actions/Chat';\nimport { requestBlockSender, unblockSender } from '../../Actions/Message';\nimport { requestUnpinMessage, showAlert } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CallStore from '../../Stores/CallStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null\n        };\n    }\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return false;\n\n        const { pinned } = media;\n        if (!pinned) return false;\n        if (pinned.length !== 1) return false;\n\n        requestUnpinMessage(chatId, pinned[0].id);\n    };\n\n    handleSwitchBlocked = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const sender = getChatSender(chatId);\n        const { is_blocked } = chat;\n        if (is_blocked) {\n            unblockSender(sender);\n        } else {\n            requestBlockSender(sender);\n        }\n    };\n\n    handleStartGroupCall = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        showAlert({\n            title: LStore.getString('StartVoipChatTitle'),\n            message: LStore.getString('StartVoipChatAlertText'),\n            ok: LStore.getString('Start'),\n            cancel: LStore.getString('Cancel'),\n            onResult: async result => {\n                if (result){\n                    await CallStore.startGroupCall(chatId);\n                }\n            }\n        })\n    };\n\n    handleStartP2PCall = () => {\n        this.handleMenuClose();\n\n        const userId = getChatUserId(AppStore.getChatId());\n\n        CallStore.p2pStartCall(userId, false);\n    };\n\n    handleReport = () => {\n        this.handleMenuClose();\n\n        const { chatId } = this.props;\n\n        openReportChat(chatId, []);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_blocked, voice_chat_group_call_id } = chat;\n\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = hasOnePinnedMessage(chatId);\n        const switchBlocked = canSwitchBlocked(chatId);\n        const manageVoiceChats = canManageVoiceChats(chatId);\n        const reported = canBeReported(chatId);\n        const called = canBeCalled(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    { CallStore.p2pCallsEnabled && called && (\n                        <MenuItem onClick={this.handleStartP2PCall}>\n                            <ListItemIcon>\n                                <CallOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Call')} />\n                        </MenuItem>\n                    )}\n                    { !Boolean(voice_chat_group_call_id) && manageVoiceChats && (\n                        <MenuItem onClick={this.handleStartGroupCall}>\n                            <ListItemIcon>\n                                <PhoneIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('StartVoipChat')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                    {switchBlocked && (\n                        <MenuItem onClick={this.handleSwitchBlocked}>\n                            <ListItemIcon>\n                                <BlockIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={is_blocked ? t('Unblock') : t('BlockContact')} />\n                        </MenuItem>\n                    )}\n                    {reported && (\n                        <MenuItem onClick={this.handleReport}>\n                            <ListItemIcon>\n                                <ReportOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ReportChat')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './AnimatedItem.css';\n\nclass AnimatedItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.containerRef = React.createRef();\n        this.item1Ref = React.createRef();\n        this.item2Ref = React.createRef();\n\n        this.state = { };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return nextProps.item !== this.props.item;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { item } = props;\n        const { to, prevItem } = state;\n\n        if (item !== prevItem) {\n            return {\n                prevItem: item,\n                from: to,\n                to: item,\n                scrollDown: item > to\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { scrollDown, animateOnMount } = this.props;\n        const { to } = this.state;\n\n        this.animate('', to, scrollDown, animateOnMount);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { item, scrollDown } = this.props;\n        const { from, to } = this.state;\n\n        if (prevProps.item !== item) {\n            this.animate(from, to, scrollDown);\n        }\n    }\n\n    animate = (from, to, scrollDown, animate = true) => {\n        const { height } = this.props;\n\n        const container = this.containerRef.current;\n        const item1 = this.item1Ref.current;\n        const item2 = this.item2Ref.current;\n\n        if (!container || !item1 || !item2) return;\n\n        const duration = !animate ? '0ms' : '250ms';\n        const timingFunction = 'ease-in-out';\n\n        if (scrollDown) {\n            container.style.cssText = `transform: translateY(-${height}px)`;\n            item1.style.cssText = 'opacity: 0';\n            item2.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        } else {\n            container.style.cssText = 'transform: translateY(0px)';\n            item1.style.cssText = 'opacity: 1';\n            item2.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        }\n    };\n\n    render() {\n        const { scrollDown, height, getItemTemplate } = this.props;\n        const { from, to } = this.state;\n\n        return (\n            <div className='animated-item' style={{ height }}>\n                <div className='animated-item-placeholder'>{getItemTemplate(to)}</div>\n                <div ref={this.containerRef} className='animated-item-wrapper'>\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? getItemTemplate(to) : getItemTemplate(from) }</div>\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? getItemTemplate(from) : getItemTemplate(to) }</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAnimatedItem.propTypes = {\n    item: PropTypes.string,\n    getItemTemplate: PropTypes.func,\n    scrollDown: PropTypes.bool,\n    height: PropTypes.number,\n    animateOnMount: PropTypes.bool\n};\n\nAnimatedItem.defaultProps = {\n    item: null,\n    getItemTemplate: x => x,\n    scrollDown: true,\n    height: 21,\n    animateOnMount: true\n}\n\nexport default AnimatedItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AnimatedItem from './AnimatedItem';\nimport './AnimatedCounter.css';\n\nclass AnimatedCounter extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { counter } = props;\n        const { prevCounter } = state;\n\n        if (counter !== prevCounter) {\n            return {\n                prevCounter: counter,\n\n                scrollDown: counter > prevCounter\n            };\n        }\n\n        return null;\n    }\n\n    render() {\n        const { counter, height, reverse } = this.props;\n        const { scrollDown } = this.state;\n        if (!counter) return null;\n\n        const counterStr = counter + '';\n\n        return (\n            <div className='animated-counter' style={{ height }}>\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\n            </div>\n        );\n    }\n}\n\nAnimatedCounter.propTypes = {\n    counter: PropTypes.number,\n    height: PropTypes.number,\n    reverse: PropTypes.bool\n};\n\nAnimatedCounter.defaultProps = {\n    counter: 0,\n    height: 21,\n    reverse: false\n}\n\nexport default AnimatedCounter;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport { canBeReported } from '../../Utils/Chat';\nimport { openReportChat } from '../../Actions/Chat';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        forwardMessages(id, messageIds);\n    };\n\n    handleReport = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        openReportChat(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const items = Array.from(MessageStore.selectedItems.values());\n        const canReport = canBeReported(items.length > 0 ? items[0].chatId : 0);\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {t('Forward')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {t('Delete')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canReport && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleReport}>\n                        {t('ReportChat')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './PinnedMessageBorder.css';\n\nclass PinnedMessageBorder extends React.Component {\n\n    drawRect = (x, y, width, height, radius) => {\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\n    };\n\n    getClipPath = (id, barHeight, count) => {\n        const radius = 1;\n\n        let d = '';\n        if (count === 3) {\n            d = this.drawRect(0, 0, 2, barHeight, radius)\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\n                + this.drawRect(0, 23, 2, barHeight, radius);\n        } else {\n            for (let i = 0; i < count; i++) {\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\n            }\n        }\n\n        return (\n            <clipPath id={id}>\n                <path d={d}/>\n            </clipPath>\n        );\n    };\n\n    getBarHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = index === 1 ? 10 : 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkTranslateY = (index, barHeight, count) => {\n        if (count === 1) {\n            return 0;\n        } else if (count === 2) {\n            return index === 0 ? 0 : barHeight + 2;\n        }\n\n        if (count === 3) {\n            if (index === 0) {\n                return 0;\n            } else if (index === 1) {\n                return 11;\n            }\n\n            return 23;\n        } else {\n            return (barHeight + 2) * index;\n        }\n    };\n\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\n        if (count <= 4) {\n            return 0;\n        }\n\n        if (index <= 1) {\n            return 0;\n        } else if (index >= count - 2) {\n            return trackHeight - 32;\n        }\n\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\n    };\n\n    getTrackHeight = (count, barHeight) => {\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\n    };\n\n    render() {\n        const { count, index } = this.props;\n        if (count === 1) {\n            return (\n                <div className='pinned-message-border'>\n                    <div className='pinned-message-border-wrapper-1'/>\n                </div>);\n        }\n\n        const barHeight = this.getBarHeight(count, index);\n        const markHeight = this.getMarkHeight(count, index);\n        const trackHeight = this.getTrackHeight(count, barHeight);\n\n        const clipPathId = `clipPath_${count}`;\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\n\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\n\n        return (\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\n                    <svg height='0' width='0'>\n                        <defs>{clipPath}</defs>\n                    </svg>\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPinnedMessageBorder.propTypes = {\n    count: PropTypes.number,\n    index: PropTypes.number\n};\n\nexport default PinnedMessageBorder;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ReplyTile from '../Tile/ReplyTile';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport PinnedMessageBorder from './PinnedMessageBorder';\n\nclass PinnedMessage extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const media = MessageStore.getMedia(chatId);\n\n            const pinned = media ? media.pinned : [];\n\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\n            const thumbnail = getReplyThumbnail(chatId, messageId);\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                pinned,\n                prevMessageId: 0,\n                messageId,\n                minithumbnail,\n                thumbnail,\n                lastPhoto: {\n                    messageId,\n                    minithumbnail,\n                    thumbnail\n                }\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { clientData, pinned, messageId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.pinned !== pinned) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        const { prevMessageId, messageId } = this.state;\n\n        if (prevProps.chatId !== chatId) {\n            this.animateText(messageId, prevMessageId, 0);\n        }\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onClientUpdateCurrentPinnedMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chatId) {\n            return;\n        }\n\n        this.scrollToMessageId(update.messageId);\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n        if (!message.is_pinned) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, is_permanent, message_ids } = update;\n        const messageIds = new Map(message_ids.map(x => [x, x]));\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => messageIds.has(x.id))) {\n            return;\n        }\n        if (!is_permanent) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, message_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => x.id === message_id)) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    animateText = (messageId, prevMessageId, duration = 250) => {\n        const textElement = document.getElementById('pinned-message-animated-text');\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\n        if (!textElement || !text1Element || !text2Element) return;\n\n        const timingFunction = 'ease-in-out';\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n        if (scrollDown) {\n            textElement.style.cssText = 'transform: translateY(-19px)';\n            text1Element.style.cssText = 'opacity: 0';\n            text2Element.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        } else {\n            textElement.style.cssText = 'transform: translateY(0px)';\n            text1Element.style.cssText = 'opacity: 1';\n            text2Element.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        }\n    };\n\n    setPinnedState = () => {\n        const { chatId } = this.props;\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\n\n        const clientData = ChatStore.getClientData(chatId);\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\n        if (!messageId && pinned.length > 0) {\n            messageId = pinned[0].id;\n        }\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\n\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            clientData,\n            pinned,\n            prevMessageId,\n            messageId,\n            thumbnail,\n            minithumbnail,\n            lastPhoto: {\n                messageId,\n                thumbnail,\n                minithumbnail\n            }\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (currentMessageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    scrollToMessageId = nextMessageId => {\n        const { chatId } = this.props;\n        const { messageId, thumbnail, minithumbnail } = this.state;\n\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\n\n        const lastPhoto = nextThumbnail ? {\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail\n        } : {\n            messageId,\n            thumbnail,\n            minithumbnail\n        }\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            prevMessageId: messageId,\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail,\n            lastPhoto\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (messageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { pinned, messageId } = this.state;\n        if (!pinned.length) return;\n\n        if (!messageId) return;\n        if (event.nativeEvent.which !== 1) return;\n\n        MessageStore.clickedPinned = { chatId, id: messageId };\n\n        openChat(chatId, messageId);\n\n        const index = pinned.findIndex(x => x.id === messageId);\n        if (index === -1) return;\n\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\n\n        this.scrollToMessageId(pinned[nextIndex].id);\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handleEditClick = event => {\n        const { chatId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\n\n        if (!chatId) return null;\n\n        if (clientData) {\n            const { unpinned } = clientData;\n            if (unpinned) return null;\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\n        if (isDeletedMessage(prevMessage)) {\n            content = t('DeletedMessage');\n        }\n\n        let index = 0;\n        let caption = t('PinnedMessage');\n        if (pinned && pinned.length > 1) {\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\n            if (pinned.length === 2) {\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\n            } else {\n                caption = (\n                    <>\n                        {t('PinnedMessage')}\n                        {index > 0 && (\n                            <>\n                                {' #'}\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\n                            </>)\n                        }\n                    </>);\n            }\n        }\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n\n        return (\n            <>\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\n                    <CSSTransition\n                        in={!!thumbnail}\n                        classNames='pinned-message-tile'\n                        timeout={250}\n                        mountOnEnter={true}\n                        unmountOnExit={true}>\n                        <div>\n                            <ReplyTile\n                                chatId={chatId}\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\n                            />\n                        </div>\n                    </CSSTransition>\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{caption}</div>\n                        <div className='pinned-message-subtitle'>\n                            <div id='pinned-message-animated-text'>\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\n                            </div>\n                        </div>\n                    </div>\n                </ListItem>\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle\n} from '../../Utils/Chat';\nimport { openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        const chatId = AppStore.getChatId();\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.state = {\n            chatId,\n            pinned,\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState()\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    setPinnedState() {\n        const { chatId } = this.state;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.setState({ pinned });\n    }\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        const chatId = AppStore.getChatId();\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.setState({\n            chatId,\n            pinned\n        });\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const { chatId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const { chatId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handlePinClick = () => {\n        const { chatId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            pinned,\n            authorizationState,\n            connectionState,\n            selectionCount,\n        } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectionCount} />\n                    <div className='header-details-row'>\n                        {showProgressAnimation ? (\n                            <div\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                                onClick={this.openChatDetails}>\n                                <span className='header-status-content'>{title}</span>\n                                <HeaderProgress />\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                                    {subtitle}\n                                </span>\n                                <span className='header-status-tail' />\n                            </div>\n                        ) : (\n                            <HeaderChat\n                                className={classNames('grow', 'cursor-pointer')}\n                                chatId={chatId}\n                                onClick={this.openChatDetails}\n                            />\n                        )}\n                        <PinnedMessage chatId={chatId} />\n                        {chat && (\n                            <div className='header-right-buttons'>\n                                { pinned.length > 1 && (\n                                    <IconButton\n                                        aria-label='Pins'\n                                        onClick={this.handlePinClick}\n                                        onMouseDown={this.handleMouseDown}>\n                                        <PlaylistEditIcon />\n                                    </IconButton>\n                                )}\n                                <IconButton\n                                    aria-label='Search'\n                                    onClick={this.handleSearchChat}>\n                                    <SearchIcon />\n                                </IconButton>\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatSender, getChatUserId } from '../../Utils/Chat';\nimport { requestBlockSender } from '../../Actions/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarInviteMembers': {\n                break;\n            }\n        }\n        if (!content) {\n            return null;\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\nimport { saveBlob } from '../../Utils/File';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false,\n            for_comment: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            requestUnpinMessage(chatId, messageId);\n        } else {\n            requestPinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n        onClose(event);\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\n        const canBePinned = canPinMessages(chatId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        const hasItems =\n            canBeUnvoted || canBeClosed || canBeReplied || canBePinned || canBeForwarded || canBeDeleted || canBeEdited || canBeSelected || canCopyLink || canCopyPublicMessageLink;\n        if (!hasItems) {\n            return null;\n        }\n\n        return (\n            <>\n                <Popover\n                    open={true}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinMessage')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinMessage')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\n    'PinFilled'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport PinIcon from '../../Assets/Icons/PinFilled';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { albumHistoryEquals } from '../../Utils/Common';\nimport { getDate, getDateHint, getViews, isCallMessage } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, messageIds } = props;\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\n\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n            const id = ids[ids.length - 1];\n\n            const message = MessageStore.get(chatId, id);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                prevMessageIds: messageIds,\n\n                message,\n                date,\n                editDate,\n                interactionInfo,\n                isOutgoing,\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId, messageIds } = this.props;\n\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n\n        if (chat_id !== chatId) return;\n        if (!ids.some(x => x === message_id)) return;\n\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ editDate });\n    };\n\n    onUpdateMessageInteractionInfo = update => {\n        const { chat_id, message_id, interaction_info } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ interactionInfo: interaction_info });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\n\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        const isCall = isCallMessage(chatId, messageId);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {isPinned && (\n                    <>\n                        <PinIcon className='meta-pin-icon' />\n                        <span>&nbsp;</span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && !isCall && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    messageIds: PropTypes.arrayOf(PropTypes.number),\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Audio from '../Media/Audio';\nimport Document from '../Media/Document';\nimport MessageMenu from '../MessageMenu';\nimport Meta from '../Meta';\nimport Photo from '../Media/Photo';\nimport Video from '../Media/Video';\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\nimport { selectMessage } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './AlbumItem.css';\n\nclass AlbumItem extends React.Component {\n\n    state = {\n        contextMenu: false\n    };\n\n    getAlbumItem = (message, displaySize) => {\n        const { chat_id, id, content } = message;\n\n        switch (content['@type']) {\n            case 'messageAudio': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Audio\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            audio={content.audio}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n            case 'messagePhoto': {\n                return (\n                    <Photo\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                    );\n            }\n            case 'messageVideo': {\n                return (\n                    <Video\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        video={content.video}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                );\n            }\n            case 'messageDocument': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Document\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            document={content.document}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { message } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    openMedia = event => {\n        if (MessageStore.selectedItems.size > 0) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { message } = this.props;\n        if (!message) return;\n\n        const { chat_id, id } = message;\n\n        openMedia(chat_id, id);\n    };\n\n    handleSelection = event => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        if (MessageStore.selectedItems.size === 0) return;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { message, position, displaySize, source } = this.props;\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\n\n        const { chat_id, id } = message;\n\n        let style = {};\n        let className = 'album-document-item';\n        if (position) {\n            style = { width: position.width, height: position.height * displaySize };\n            className = 'album-item'\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\n                    onClick={this.handleSelection}\n                    onContextMenu={this.handleOpenContextMenu}\n                    style={style}>\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\n                    {(selected || highlighted) && (\n                        <div className='album-item-selection'>\n                            <div className='album-item-selection-mark'>\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chat_id}\n                    messageId={id}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </>\n        );\n    }\n}\n\nAlbumItem.propTypes = {\n    message: PropTypes.object,\n    position: PropTypes.object,\n    displaySize: PropTypes.number\n};\n\nexport default AlbumItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000).getFullYear() !== new Date().getFullYear();\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\n\nconst POSITION_FLAG_LEFT = 1;\nconst POSITION_FLAG_RIGHT = 2;\nconst POSITION_FLAG_TOP = 4;\nconst POSITION_FLAG_BOTTOM = 8;\n\nclass MessageGroupedLayoutAttempt {\n    constructor(lineCounts, heights) {\n        this.lineCounts = lineCounts;\n        this.heights = heights;\n    }\n}\n\nclass GroupedMessagePosition {\n    aspectRatio;\n    isEdge;\n    flags;\n    isLast;\n    leftSpanOffset;\n    minX;\n    maxX;\n    minY;\n    maxY;\n    height;\n    width;\n    siblingHeights;\n    spanSize;\n\n    set(minX, maxX, minY, maxY, w, h, flags) {\n        this.minX = minX;\n        this.maxX = maxX;\n        this.minY = minY;\n        this.maxY = maxY;\n        this.spanSize = w;\n        this.width = w;\n        this.height = h;\n        this.flags = flags;\n    }\n\n    getInfo() {\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\n    }\n}\n\nclass GroupedMessages {\n\n    constructor() {\n        this.posArray = [];\n        this.positions = new Map();\n        this.maxSizeWidth = 800;\n        this.hasSibling = false;\n        this.scale = 1.0;\n    }\n\n    multiHeight(array, start, end) {\n        let sum = 0.0;\n        for (let i = start; i < end; i++) {\n            sum += array[i];\n        }\n\n        return 800.0 * this.scale / sum;\n    }\n\n    calculate(messages, desiredWidth) {\n        this.posArray = [];\n        this.positions = new Map();\n        this.messages = messages;\n\n        if (!messages) return;\n        const { length } = messages;\n        if (length <= 1) {\n            return;\n        }\n\n        this.totalWidth = 0;\n        this.totalHeight = 0.0;\n\n        this.scale = desiredWidth / this.maxSizeWidth;\n        this.maxSizeWidth = desiredWidth;\n\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\n        const minHeight = Math.trunc(120 * this.scale);\n        const minWidth = Math.trunc(96 * this.scale);\n        const paddingsWidth = Math.trunc(32 * this.scale);\n        const maxSizeHeight = 814.0 * this.scale;\n        let averageAspectRatio = 1.0;\n        let proportions = '';\n        const isOut = false;\n        let maxX = 0;\n        let forceCalc = false;\n\n        for (let i = 0; i < length; i++) {\n            const message = messages[i];\n            const { w, h } = GroupedMessages.getWidthHeight(message);\n\n            const position = new GroupedMessagePosition();\n            position.isLast = i === messages.length - 1;\n            position.aspectRatio = w / h;\n            if (position.aspectRatio > 1.2) {\n                proportions += 'w';\n            } else if (position.aspectRatio < 0.8) {\n                proportions += 'n';\n            } else {\n                proportions += 'q';\n            }\n\n            averageAspectRatio += position.aspectRatio;\n            if (position.aspectRatio > 2.0) {\n                forceCalc = true;\n            }\n\n            this.positions.set(message, position);\n            this.posArray.push(position);\n        }\n\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\n        averageAspectRatio = averageAspectRatio / length;\n\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\n            switch (length) {\n                case 2: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = height * 2;\n                    } else if (proportions === 'ww' || proportions === 'qq') {\n                        const width = this.maxSizeWidth / 2;\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = width + width;\n                        this.totalHeight = height;\n                    } else {\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\n                        let firstWidth = this.maxSizeWidth - secondWidth;\n                        if (firstWidth < minWidth) {\n                            const diff = minWidth - firstWidth;\n                            firstWidth = minWidth;\n                            secondWidth -= diff;\n                        }\n\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = firstWidth + secondWidth;\n                        this.totalHeight = height;\n                    }\n\n                    break;\n                }\n                case 3: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    if (proportions[0] === 'n')\n                    {\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\n                        const secondHeight = maxSizeHeight - thirdHeight;\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\n\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position3.spanSize = this.maxSizeWidth;\n\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\n                            position3.leftSpanOffset = leftWidth;\n                        }\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = leftWidth + rightWidth;\n                        this.totalHeight = 1.0;\n                    }\n                    else\n                    {\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        const width = this.maxSizeWidth / 2;\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 1;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = firstHeight + secondHeight;\n                    }\n\n                    break;\n                }\n                case 4: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    const position4 = this.posArray[3];\n                    if (proportions[0] === 'w') {\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\n                        const w1 = this.maxSizeWidth - w0 - w2;\n                        h = Math.min(maxSizeHeight - h0, h);\n                        h /= maxSizeHeight;\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 2;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = h0 + h;\n                    } else {\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\n                        const h2 = 1.0 - h0 - h1;\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\n\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\n                        position3.spanSize = this.maxSizeWidth;\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position4.spanSize = this.maxSizeWidth;\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - w;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - w0;\n                            position3.leftSpanOffset = w0;\n                            position4.leftSpanOffset = w0;\n                        }\n                        position1.siblingHeights = [ h0, h1, h2 ];\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = w + w0;\n                        this.totalHeight = h0 + h1 + h2;\n                    }\n                    break;\n                }\n            }\n        } else {\n            const croppedRatios = new Array(this.posArray.length);\n            for (let i = 0; i < length; i++) {\n                if (averageAspectRatio > 1.1) {\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\n                } else {\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\n                }\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\n            }\n\n            let firstLine;\n            let secondLine;\n            let thirdLine;\n            let fourthLine;\n            const attempts = [];\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\n                secondLine = croppedRatios.length - firstLine;\n                if (firstLine > 3 || secondLine > 3) {\n                    continue;\n                }\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\n                        continue;\n                    }\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\n                }\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\n                            continue;\n                        }\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\n                    }\n                }\n            }\n\n            let optimal = null;\n            let optimalDiff = 0.0;\n            let maxHeight = this.maxSizeWidth / 3 * 4;\n            for (let i = 0; i < attempts.length; i++) {\n                const attempt = attempts[i];\n                let height = 0;\n                let minLineHeight = Number.MAX_VALUE;\n                for (let j = 0; j < attempt.heights.length; j++) {\n                    height += attempt.heights[j];\n                    if (attempt.heights[j] < minLineHeight) {\n                        minLineHeight = attempt.heights[j];\n                    }\n                }\n\n                let diff = Math.abs(height - maxHeight);\n                if (attempt.lineCounts.length > 1) {\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\n                        diff *= 1.5;\n                    }\n                }\n\n                if (minLineHeight < minWidth) {\n                    diff *= 1.5;\n                }\n\n                if (optimal === null || diff < optimalDiff) {\n                    optimal = attempt;\n                    optimalDiff = diff;\n                }\n            }\n\n            if (optimal === null) {\n                return;\n            }\n\n            let index = 0;\n            let y = 0.0;\n\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\n                let c = optimal.lineCounts[i];\n                let lineHeight = optimal.heights[i];\n                let spanLeft = this.maxSizeWidth;\n                let posToFix = null;\n                maxX = Math.max(maxX, c - 1);\n                for (let j = 0; j < c; j++) {\n                    let ratio = croppedRatios[index];\n                    let width = Math.trunc(ratio * lineHeight);\n                    spanLeft -= width;\n                    let pos = this.posArray[index];\n                    let flags = 0;\n                    if (i === 0) {\n                        flags |= POSITION_FLAG_TOP;\n                    }\n                    if (i === optimal.lineCounts.length - 1) {\n                        flags |= POSITION_FLAG_BOTTOM;\n                    }\n                    if (j === 0) {\n                        flags |= POSITION_FLAG_LEFT;\n                        if (isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    if (j === c - 1) {\n                        flags |= POSITION_FLAG_RIGHT;\n                        if (!isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\n                    index++;\n                }\n                posToFix.width += spanLeft;\n                posToFix.spanSize += spanLeft;\n                y += lineHeight;\n            }\n\n            this.totalWidth = this.maxSizeWidth;\n            this.totalHeight = y / maxSizeHeight;\n        }\n    }\n\n    static getWidthHeight(message) {\n        let w = 0;\n        let h = 0;\n        let sizes = [];\n        switch (message.content['@type']){\n            case 'messagePhoto': {\n                const { photo, minithumbnail } = message.content;\n                if (photo) {\n                    sizes = photo.sizes;\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                }\n\n                break;\n            }\n            case 'messageVideo': {\n                const { video, thumbnail, minithumbnail } = message.content;\n                if (video) {\n                    const { width, height } = video;\n                    sizes.push({ width, height });\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                }\n\n                break;\n            }\n            case 'messageDocument': {\n                const { thumbnail, minithumbnail } = message.content;\n                if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                } else {\n                    sizes.push({ width: 90, height: 90 });\n                }\n\n                break;\n            }\n        }\n\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\n        if (photoSize) {\n            w = photoSize.width;\n            h = photoSize.height;\n        }\n\n        return { w, h };\n    }\n\n    static getPhotoSize(sizes, side, byMinSize) {\n        if (!sizes || !sizes.length) return null;\n\n        let lastSide = 0;\n        let lastSize = null;\n        for (let i = 0; i < sizes.length; i++) {\n            const { width: w, height: h } = sizes[i];\n\n            if (byMinSize) {\n                const currentSide = h >= w ? w : h;\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n\n            } else {\n                const currentSide = w >= h ? w : h;\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n            }\n        }\n\n        return lastSize;\n    }\n}\n\nexport default GroupedMessages;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport GroupedMessages from './GroupedMessages';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Album.css';\n\nclass Album extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n            const grouped = new GroupedMessages();\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n            return {\n                grouped,\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const grouped = new GroupedMessages();\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches, grouped });\n        } else {\n            this.setState({ grouped });\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n        const { grouped } = this.state;\n        if (!grouped) {\n            return null;\n        }\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': !hasCaption\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = { width: grouped.totalWidth - 2 - 2 };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = grouped.messages.map(x => (\n            <AlbumItem\n                key={x.id}\n                message={x}\n                position={grouped.positions.get(x)}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    { 'album-caption': hasCaption },\n                                    { 'album-title': hasTitle }\n                                    )}>\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\n                                        {items}\n                                    </div>\n                                </div>\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default Album;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './DocumentAlbum.css';\n\nclass DocumentAlbum extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.lastSelected !== lastSelected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.lastHighlighted !== lastHighlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n\n            return {\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\n            });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        this.setState({ selected: false, lastSelected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            lastSelected,\n            highlighted,\n            lastHighlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': false\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = {  };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\n            <AlbumItem\n                key={m.id}\n                message={m}\n                position={null}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', 'message-document-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-album-last-selected': lastSelected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-album-last-highlighted': lastHighlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    'document-album',\n                                    { 'album-caption': false },\n                                    { 'album-title': hasTitle }\n                                )}>\n                                    <div className='album-wrapper'>\n                                        {items}\n                                    </div>\n                                </div>\n                                {/*<div*/}\n                                {/*    className={classNames('message-text', {*/}\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\n                                {/*    })}>*/}\n                                {/*    {text}*/}\n                                {/*</div>*/}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocumentAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nDocumentAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default DocumentAlbum;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport './GroupCallJoinPanelSubtitle.css';\n\nclass GroupCallJoinPanelSubtitle extends React.Component {\n    state = {\n        participantCount: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participantCount } = this.state;\n\n        if (nextState.participantCount !== participantCount) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            let participantCount = 0;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                const { participant_count } = groupCall;\n                participantCount = participant_count;\n            }\n\n            return {\n                prevGroupCallId: groupCallId,\n                participantCount\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCall = update => {\n        const { groupCallId } = this.props;\n        const { group_call } = update;\n\n        if (group_call && group_call.id !== groupCallId) return;\n\n        let participantCount = 0;\n        const groupCall = CallStore.get(groupCallId);\n        if (groupCall) {\n            const { participant_count } = groupCall;\n            participantCount = participant_count;\n        }\n\n        this.setState({ participantCount });\n    };\n\n    render() {\n        const { t, participantsOnly } = this.props;\n        const { participantCount } = this.state;\n        // console.log('[call][GroupCallPanelSubtitle] render');\n\n        return (\n            <div className='group-call-join-panel-subtitle'>\n                {participantCount === 0 && !participantsOnly? t('MembersTalkingNobody') : LStore.formatPluralString('Participants', participantCount)}\n            </div>\n        );\n    }\n\n}\n\nGroupCallJoinPanelSubtitle.propTypes = {\n    groupCallId: PropTypes.number,\n    participantsOnly: PropTypes.bool\n};\n\nGroupCallJoinPanelSubtitle.defaultProps = {\n    participantsOnly: false\n}\n\nexport default withTranslation()(GroupCallJoinPanelSubtitle);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from '../Tile/UserTile';\nimport { loadUsersContent } from '../../Utils/File';\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport FileStore from '../../Stores/FileStore';\nimport './GroupCallRecentParticipants.css';\n\nfunction speakersEquals(lhs, rhs) {\n    if (lhs.length !== rhs.length) return false;\n\n    for (let i = 0; i < lhs.length; i++) {\n        if (lhs[i].user_id !== rhs[i].user_id) return false;\n        if (lhs[i].is_speaking !== rhs[i].is_speaking) return false;\n    }\n\n    return true;\n}\n\nclass GroupCallRecentParticipants extends React.Component {\n    state = {\n        speakers: []\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { speakers } = this.state;\n\n        if (!speakersEquals(nextState.speakers, speakers)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { id } = props;\n        const { prevId } = state;\n\n        if (prevId !== id) {\n            let speakers = [];\n            const groupCall = CallStore.get(id);\n            if (groupCall) {\n                const { recent_speakers } = groupCall;\n                speakers = recent_speakers;\n            }\n\n            return {\n                prevId: id,\n                speakers\n            };\n        }\n\n        return null;\n    }\n\n    loadContent(speakers) {\n        const store = FileStore.getStore();\n        loadUsersContent(store, speakers.map(x => x.user_id));\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.speakers);\n\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCall = update => {\n        const { id } = this.props;\n        const { group_call } = update;\n\n        if (group_call && group_call.id !== id) return;\n\n        let speakers = [];\n        const groupCall = CallStore.get(id);\n        if (groupCall) {\n            const { recent_speakers } = groupCall;\n            speakers = recent_speakers;\n        }\n\n        clearTimeout(this.timeout);\n        if (!speakers.length) {\n            this.setState({ speakers: [] });\n        } else {\n            this.loadContent(speakers);\n\n            this.timeout = setTimeout(() => {\n                this.updateSpeakers();\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\n        }\n    };\n\n    updateSpeakers() {\n        const { id } = this.props;\n\n        let speakers = [];\n        const groupCall = CallStore.get(id);\n        if (groupCall) {\n            const { recent_speakers } = groupCall;\n            speakers = recent_speakers;\n        }\n\n        this.setState({ speakers });\n    }\n\n    render() {\n        const { speakers } = this.state;\n        if (!speakers) return null;\n        if (!speakers.length) return null;\n\n        return (\n            <div className='group-call-recent-participants'>\n                {[...speakers].reverse().map(x => <UserTile key={x.user_id} userId={x.user_id} small speaking={x.is_speaking}/>)}\n            </div>\n        );\n    }\n}\n\nGroupCallRecentParticipants.propTypes = {\n    id: PropTypes.number\n};\n\nexport default GroupCallRecentParticipants;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport GroupCallJoinPanelSubtitle from './GroupCallJoinPanelSubtitle';\nimport GroupCallRecentParticipants from './GroupCallRecentParticipants';\nimport CallStore from '../../Stores/CallStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './GroupCallJoinPanel.css';\n\nclass GroupCallJoinPanel extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n\n            let groupCallId = 0;\n            if (chat) {\n                const { voice_chat_group_call_id } = chat;\n                groupCallId = voice_chat_group_call_id;\n            }\n\n            const { currentGroupCall } = CallStore;\n            const isCurrent = Boolean(currentGroupCall && currentGroupCall.chatId === chatId);\n\n            return {\n                prevChatId: chatId,\n                groupCallId,\n                isCurrent\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { isCurrent, groupCallId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.groupCallId !== groupCallId) {\n            return true;\n        }\n\n        if (nextState.isCurrent !== isCurrent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\n        CallStore.on('updateGroupCall', this.handleUpdateGroupCall);\n        ChatStore.on('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\n        CallStore.off('updateGroupCall', this.handleUpdateGroupCall);\n        ChatStore.off('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\n    }\n\n    handleUpdateChatVoiceChat = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if ( chatId !== chat_id) return;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { voice_chat_group_call_id } = chat;\n\n        this.setState({\n            groupCallId: voice_chat_group_call_id\n        });\n    }\n\n    handleUpdateGroupCall = update => {\n        const { group_call } = update;\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { voice_chat_group_call_id } = chat;\n        if (group_call && group_call.id !== voice_chat_group_call_id) return;\n\n        this.setState({\n            groupCallId: group_call ? group_call.id : 0\n        });\n    };\n\n    handleClientUpdateGroupCall = update => {\n        const { chatId } = this.props;\n\n        const { currentGroupCall } = CallStore;\n        const isCurrent = currentGroupCall && currentGroupCall.chatId === chatId;\n\n        this.setState({ isCurrent });\n    };\n\n    handleJoin = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { voice_chat_group_call_id } = chat;\n        const groupCall = CallStore.get(voice_chat_group_call_id);\n        console.log('[call] handleJoin', groupCall);\n        if (groupCall && groupCall.is_joined) return;\n\n        const muted = true;\n        await CallStore.joinGroupCall(chatId, voice_chat_group_call_id, muted);\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const { groupCallId, isCurrent } = this.state;\n        if (!groupCallId) return null;\n        if (isCurrent) return null;\n\n        return (\n            <div className='group-call-join-panel' onClick={this.handleJoin}>\n                <div className='group-call-join-panel-content'>\n                    <div className='group-call-join-panel-title'>{t('VoipGroupVoiceChat')}</div>\n                    <GroupCallJoinPanelSubtitle groupCallId={groupCallId}/>\n                </div>\n                <GroupCallRecentParticipants id={groupCallId}/>\n                <Button className='group-call-join-panel-button' variant='contained' color='primary' disableElevation>\n                    {t('VoipChatJoin')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nGroupCallJoinPanel.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallJoinPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst MessageContext = React.createContext({\n    chatId: 0,\n    messageId: 0\n});\n\nexport default MessageContext;\n\nexport function withMessage(Component) {\n    class MessageComponent extends React.Component {\n        render() {\n            return <MessageContext.Consumer>{value => <Component chatId={value ? value.chatId : 0} messageId={value? value.messageId: 0} {...this.props} />}</MessageContext.Consumer>;\n        }\n    }\n    MessageComponent.displayName = `WithMessage(${getDisplayName(Component)})`;\n\n    return MessageComponent;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem } from '@material-ui/core';\nimport User from '../Tile/User';\nimport ChatStore from '../../Stores/ChatStore';\nimport './InputBoxHints.css'\n\nclass InputBoxHints extends React.Component {\n    state = {\n        local: [],\n        global: [],\n        id: null\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { local, global, id } = this.state;\n\n        if (nextState.local !== local) {\n            return true;\n        }\n\n        if (nextState.global !== global) {\n            return true;\n        }\n\n        if (nextState.id !== id) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.on('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.on('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.off('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.off('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    onClientUpdateHintsClose = update => {\n        this.setState({\n            id: null,\n            local: [],\n            global: []\n        });\n    };\n\n    onClientUpdateHintsGlobal = update => {\n        const { id, global } = update;\n        if (this.state.id !== id) return;\n\n        this.setState({\n            id,\n            global\n        });\n    };\n\n    onClientUpdateHintsLocal = update => {\n        const { id, local } = update;\n\n        this.setState({\n            id,\n            local,\n            global: []\n        });\n    };\n\n    render() {\n        const { local, global } = this.state;\n\n        const results = (local || []).concat(global || []);\n\n        // console.log('[hints] render', local, global, results);\n        if (!results.length) return null;\n\n        const controls = results.map(x => <ListItem key={x.id} button style={{ padding: 6}}><User userId={x.id} showUsername={true}/></ListItem>);\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n            </div>\n        );\n    }\n\n}\n\nInputBoxHints.propTypes = {};\n\nexport default InputBoxHints;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8.5,18.31L5.69,15.5L12.06,9.12H7.11V5.69H18.31V16.89H14.89V11.94L8.5,18.31Z' />,\n    'ArrowTopRight'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M21,12L14,5V9C7,10 4,15 3,20C5.5,16.5 9,14.9 14,14.9V19L21,12Z' />,\n    'ShareFilled'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withMessage } from '../MessageContext';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowTopRightIcon from '../../../Assets/Icons/ArrowTopRight';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PendingIcon from '../../../Assets/Icons/Pending';\nimport ShareFilledIcon from '../../../Assets/Icons/ShareFilled';\nimport { getUserFullName } from '../../../Utils/User';\nimport { getChatTitle } from '../../../Utils/Chat';\nimport { setText, showAlert, showInputPasswordAlert, showOpenGameAlert, showOpenUrlAlert, showRequestUrlAlert, showSnackbar } from '../../../Actions/Client';\nimport { openChatSelect } from '../../../Actions/Message';\nimport LStore from '../../../Stores/LocalizationStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './KeyboardButton.css';\n\nclass KeyboardButton extends React.Component {\n    state = {\n        loading: false\n    }\n\n    handleCallbackQueryAnswer = (type, result, message) => {\n        const { chatId } = this.props;\n        const { sender, content, via_bot_user_id } = message;\n        const { text, show_alert, url } = result;\n        const { game } = content;\n\n        let title = '';\n        if (message) {\n            if (via_bot_user_id) {\n                title = getUserFullName(via_bot_user_id, null);\n            } else {\n                title = getChatTitle(chatId, false);\n            }\n        }\n        title = title || LStore.getString('Bot');\n\n        if (text) {\n            if (show_alert) {\n                showAlert({\n                    title,\n                    message: text,\n                    ok: LStore.getString('OK')\n                });\n            } else {\n                showSnackbar(text, closeSnackbar => snackKey => {\n                    return (\n                        <IconButton\n                            key='close'\n                            aria-label='Close'\n                            color='inherit'\n                            className='notification-close-button'\n                            onClick={() => { closeSnackbar(snackKey); }}>\n                            <CloseIcon />\n                        </IconButton>\n                    )\n                });\n            }\n        } else if (url) {\n            if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                const userId = via_bot_user_id ? via_bot_user_id : sender.user_id;\n                const user = UserStore.get(userId);\n\n                showOpenGameAlert(game, { message, url, userId, isVerified: user && user.is_verified });\n            } else {\n                showOpenUrlAlert(url, { punycode: false, ask: false, tryTelegraph: true });\n            }\n        }\n    };\n\n    handleClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId, type } = this.props;\n\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                showAlert({\n                    title: LStore.getString('AppName'),\n                    message: LStore.getString('PaymentsNotSupported'),\n                    ok: LStore.getString('OK')\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                /// gamee, querty_bot\n\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender, content, via_bot_user_id } = message;\n                if (!content) break;\n\n                let payload = null;\n                let game = null;\n                if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                    game = content.game;\n                    if (!game) break;\n\n                    payload = { '@type': 'callbackQueryPayloadGame', game_short_name: game.short_name };\n                } else {\n                    payload = { '@type': 'callbackQueryPayloadData', data };\n                }\n\n                this.setState({ loading: true });\n                const result = await TdLibController.send({\n                    '@type': 'getCallbackQueryAnswer',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    payload\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                this.handleCallbackQueryAnswer(type, result, message);\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                /// BotFather + transfer bot\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                this.setState({ loading: true });\n                const passwordState = await TdLibController.send({\n                    '@type': 'getPasswordState'\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                const { has_password } = passwordState;\n                if (!has_password) break;\n\n                showInputPasswordAlert(passwordState, async (password, onCloseDialog, onError) => {\n                    console.log('[pwd] onPassword', password);\n                    this.setState({ loading: true });\n                    let error = null;\n                    const result = await TdLibController.send({\n                        '@type': 'getCallbackQueryAnswer',\n                        chat_id: chatId,\n                        message_id: messageId,\n                        payload: { '@type': 'callbackQueryPayloadDataWithPassword', data, password }\n                    }).catch(e => {\n                        error = e;\n                    }).finally(() => {\n                        this.setState({ loading: false });\n                    });\n\n                    if (error) {\n                        console.log('[pwd] onPassword error', error);\n                        onError && onError(error);\n                    } else if (result) {\n                        console.log('[pwd] onPassword result', result);\n                        onCloseDialog && onCloseDialog();\n                        this.handleCallbackQueryAnswer(type, result, message);\n                    }\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                const { url, id, forward_text } = type;\n\n                this.setState({ loading: true });\n                let hasError = false;\n                const result = await TdLibController.send({\n                    '@type': 'getLoginUrlInfo',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    button_id: id\n                }).catch(e => {\n                    hasError = true;\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                if (hasError) {\n                    showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                } else {\n                    switch (result['@type']) {\n                        case 'loginUrlInfoOpen': {\n                            const { url, skip_confirm } = result;\n\n                            showOpenUrlAlert(url, { punycode: false, ask: !skip_confirm, tryTelegraph: true });\n                            break;\n                        }\n                        case 'loginUrlInfoRequestConfirmation': {\n                            const { url } = result;\n\n\n                            console.log('[login] result', result);\n                            showRequestUrlAlert(url, { result, chatId, messageId, buttonId: id });\n                            break;\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                /// youtube\n                const { in_current_chat, query } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender, via_bot_user_id } = message;\n                let userId = sender.user_id;\n                if (via_bot_user_id !== 0) {\n                    userId = via_bot_user_id;\n                }\n\n                const user = UserStore.get(userId);\n                if (!user) break;\n\n                const inline = `@${user.username} ${query}`;\n\n                if (in_current_chat){\n                    setText(inline);\n                } else {\n                    openChatSelect({ switchInline: inline });\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                /// qwerty_bot\n                const { url } = type;\n\n                showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                break;\n            }\n        }\n    };\n\n    getIcon(type) {\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                const { in_current_chat } = type;\n\n                return !in_current_chat && <ShareFilledIcon className='keyboard-button-icon'/>;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n        }\n    }\n\n    render() {\n        const { text, type } = this.props;\n        const { loading } = this.state;\n\n        const icon = this.getIcon(type);\n\n        return (\n            <ListItem className='keyboard-button' button onClick={this.handleClick}>\n                {text}\n                {icon}\n                {loading && (\n                    <PendingIcon\n                        className='keyboard-button-progress'\n                        viewBox='0 0 14 14'\n                    />\n                )}\n            </ListItem>\n        );\n    }\n\n}\n\nKeyboardButton.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    text: PropTypes.string,\n    type: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default withMessage(KeyboardButton);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardButton from './KeyboardButton';\nimport './KeyboardRow.css';\n\nclass KeyboardRow extends React.Component {\n    render() {\n        const { row } = this.props;\n        if (!row) return null;\n        if (!row.length) return null;\n\n        return (\n            <div className='keyboard-row'>\n                {row.map((x, i) => (<KeyboardButton key={i} text={x.text} type={x.type}/>))}\n            </div>\n        );\n    }\n}\n\nKeyboardRow.propTypes = {\n    row: PropTypes.array\n};\n\nexport default KeyboardRow;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardRow from './KeyboardRow';\nimport MessageContext from '../MessageContext';\nimport './ReplyMarkup.css';\n\nclass ReplyMarkup extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId, prevMessageId } = state;\n        const { chatId, messageId } = props;\n\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                message: {\n                    chatId,\n                    messageId\n                }\n            }\n        }\n\n        return null;\n    }\n\n    render() {\n        const { markup } = this.props;\n        const { message } = this.state;\n\n        if (!markup) return null;\n        if (markup['@type'] !== 'replyMarkupInlineKeyboard') return null;\n\n        const { rows } = markup;\n        if (!rows.length) return null;\n\n        return (\n            <div className='reply-markup'>\n                <MessageContext.Provider value={message}>\n                    {rows.map((x, i) => (<KeyboardRow key={i} row={x}/>))}\n                </MessageContext.Provider>\n            </div>\n        );\n    }\n}\n\nReplyMarkup.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    markup: PropTypes.object\n};\n\nexport default ReplyMarkup;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_SIZE );\n            let totalLength = 0;\n            if (site_name) {\n                totalLength += site_name.length;\n            }\n            if (title) {\n                totalLength += title.length;\n            }\n            if (description) {\n                totalLength += description.text.length;\n            }\n\n            const extraSmallPhoto = smallPhoto && totalLength < 50;\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport ReplyMarkup from './Markup/ReplyMarkup';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { startMessageEditing, stopMessageEditing } from '../../Actions/Message';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle,\n    isEmptySelection\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isGroupChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageContent = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageEdited = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    handleUpdateMessageContentAndEditedOnce = () => {\n        const { updateMessageContent, updateMessageEdited } = this;\n        this.updateMessageContent = null;\n        this.updateMessageEdited = null;\n\n        if (!updateMessageContent && !updateMessageEdited) return;\n\n        const { chatId, messageId } = this.props;\n\n        let handled = false;\n        if (updateMessageContent) {\n            const { emojiMatches } = this.state;\n            const newEmojiMatches = getEmojiMatches(chatId, messageId);\n            if (newEmojiMatches !== emojiMatches) {\n                handled = true;\n                this.setState({ emojiMatches: newEmojiMatches });\n            }\n        }\n\n        if (handled) return;\n\n        startMessageEditing(chatId, messageId);\n        this.forceUpdate(() => {\n            stopMessageEditing(chatId, messageId);\n        });\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender, reply_markup } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t, { chatId, messageId });\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing) || (isGroupChat(chatId) && isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded =\n            !hasCaption  && (\n                content['@type'] === 'messageAnimation' ||\n                content['@type'] === 'messageVideo' ||\n                content['@type'] === 'messagePhoto' ||\n                content['@type'] === 'messageInvoice' && content.photo) || reply_markup && reply_markup['@type'] === 'replyMarkupInlineKeyboard';\n        const showMeta = withBubble && content['@type'] !== 'messageCall';\n\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div>\n                                <div\n                                    className={classNames('message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                    style={style}>\n                                    {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                        <div className='message-title'>\n                                            {showTitle && !showForward && (\n                                                <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser/>\n                                            )}\n                                            {showForward && <Forward forwardInfo={forward_info} />}\n                                        </div>\n                                    )}\n                                    {showReply && (\n                                        <Reply\n                                            chatId={chatId}\n                                            messageId={reply_to_message_id}\n                                            onClick={this.handleReplyClick}\n                                        />\n                                    )}\n                                    {media}\n                                    <div\n                                        className={classNames('message-text', {\n                                            'message-text-1emoji': emojiMatches === 1,\n                                            'message-text-2emoji': emojiMatches === 2,\n                                            'message-text-3emoji': emojiMatches === 3\n                                        })}>\n                                        {text}\n                                    </div>\n                                    {webPage && (\n                                        <WebPage\n                                            chatId={chatId}\n                                            messageId={messageId}\n                                            openMedia={this.openMedia}\n                                            meta={inlineMeta}\n                                        />\n                                    )}\n                                    {showMeta && meta}\n                                </div>\n                                {reply_markup && (\n                                    <ReplyMarkup\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        markup={reply_markup}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </div>\n        );\n    }\n}\n\nMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n}\n\nMessage.defaultProps = {\n    sendingState: null,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showDate: false\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\nimport MessageMenu from './MessageMenu';\n\nconst chatPhotoStyle = {\n    width: 96,\n    height: 96,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false,\n            contextMenu: false,\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, t } = this.props;\n        const { highlighted, contextMenu } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted, contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n        if (content['@type'] === 'messageChatUpgradeTo') return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={96}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={null}\n                    source={'chat'}\n                />\n            </div>\n        );\n    }\n}\n\nServiceMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showUnreadSeparator: PropTypes.bool\n}\n\nServiceMessage.defaultProps = {\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport Album from '../Message/Album/Album';\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\nimport FilesDropTarget from './FilesDropTarget';\nimport GroupCallJoinPanel from '../Calls/GroupCallJoinPanel';\nimport InputBoxHints from './InputBoxHints';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, canSendMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isGroupChat, isMeChat } from '../../Utils/Chat';\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { sendBotStartMessage } from '../../Actions/Message';\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lastRequests = new Map();\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId, messageId } = this.props;\n        this.handleSelectChat(chatId, null, messageId, null);\n\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.on('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.off('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateStartMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { history } = this.state;\n        if (!history.length) return;\n\n        const { current: list } = this.listRef;\n        if (list.offsetHeight + list.scrollTop < list.scrollHeight){\n            return;\n        }\n\n        if (!history.some(x => x.chat_id === chatId && x.id === messageId)) return;\n\n        this.scrollBottomAfterEditing = {\n            chatId,\n            messageId\n        };\n    };\n\n    onClientUpdateStopMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { scrollBottomAfterEditing } = this;\n        if (!scrollBottomAfterEditing) return;\n\n        if (chatId !== scrollBottomAfterEditing.chatId) return;\n        if (messageId !== scrollBottomAfterEditing.messageId) return;\n\n        const { current: list } = this.listRef;\n        list.scrollTop = list.scrollHeight - list.offsetHeight;\n        this.scrollBottomAfterEditing = null;\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id, is_pinned } = update;\n        const { chatId, filter } = this.props;\n        if (chatId !== chat_id) return;\n        if (!filter) return;\n\n        if (is_pinned) {\n            const message = MessageStore.get(chat_id, message_id);\n\n            const list = this.listRef.current;\n\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            }\n\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n            const history = [message];\n            this.scrollBehaviorNone = true;\n            this.insert(history, newState, () => {\n                this.scrollBehaviorNone = false;\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, history);\n            this.viewMessages(history);\n        } else {\n            this.deleteHistory([message_id]);\n\n            const media = MessageStore.getMedia(chatId);\n            if (media && !media.pinned.length) {\n                closePinned();\n            }\n        }\n    };\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        const { prevScrollTop, prevOffsetHeight } = this;\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop -= Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(history, newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId, ignoreUnread = false) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n        const { sessionId } = this;\n\n        this.prevScrollTop = null;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            if (previousChatId !== chatId && !this.props.filter) {\n                TdLibController.send({\n                    '@type': 'openChat',\n                    chat_id: chatId\n                });\n            }\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (!ignoreUnread && unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            sessionId.loading = true;\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\n            .catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                sessionId.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.cancelUpdatePinnedMessage = true;\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n                requestAnimationFrame(() => {\n                    this.cancelUpdatePinnedMessage = false;\n                });\n\n                this.loadIncompleteHistory(result, limit);\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            if (previousChatId !== chatId && !this.props.filter) {\n                // getChatFullInfo(chatId);\n                getChatMedia(chatId);\n                if (this.props.options) {\n                    const { botStartMessage } = this.props.options;\n                    if (botStartMessage && canSendMessages(chatId) && isGroupChat(chatId)) {\n                        const { botUserId, parameter } = botStartMessage;\n\n                        await sendBotStartMessage(chatId, botUserId, parameter);\n                    }\n                }\n            }\n        } else {\n            sessionId.loading = true;\n            this.replace(0, [], () => {\n                sessionId.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId && !this.props.filter) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async (result, limit) => {\n        const MAX_ITERATIONS = 5;\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\n            result = await this.onLoadNext();\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n        }\n    };\n\n    isCompleteHistory = (result, limit) => {\n        if (!result) return false;\n        if (!result.messages.length) return true;   // end of the history\n\n        return result.messages.length >= limit;\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n        if (sessionId.loading) return;\n\n        if (sessionId.loadMigratedHistory) {\n            return await this.onLoadMigratedHistory();\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        let result = null;\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\n        if (this.lastRequests.has(lastRequestKey)) {\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\n        } else {\n            sessionId.loading = true;\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\n                .finally(() => {\n                    sessionId.loading = false;\n                });\n        }\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (!result.messages.length) {\n            this.lastRequests.set(lastRequestKey, result);\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                        });\n                    }\n                }, 100);\n            }\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        let fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) {\n            fullInfo = await getChatFullInfo(chatId);\n        }\n        if (!fullInfo.upgraded_from_basic_group_id) {\n            return;\n        }\n\n        sessionId.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n        if (sessionId.loading) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\n        .finally(() => {\n            sessionId.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n\n            this.loadIncompleteHistory(result, limit);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (sessionId.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\n            .finally(() => {\n                sessionId.loading = false;\n            });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(result.messages, {}, () => {\n            this.scrollBehaviorNone = false;\n            if (result.messages.length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        let history = [...this.state.history];\n        const index = history.findIndex(x => x.id === oldMessageId);\n        if (index !== -1) {\n            history.splice(index, 1, message);\n        } else {\n            history = this.state.history;\n        }\n\n        this.setState({ history }, callback);\n    }\n\n    insert(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history).sort((a, b) => {\n                if (a.id < b.id) {\n                    return -1;\n                } else if (a.id > b.id) {\n                    return 1;\n                }\n\n                return 0;\n            })\n        }, callback);\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    updateItemsInView = () => {\n        if (!this.messages) return null;\n\n        const messages = [];\n        const messagesMap = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    const key = `${chatId}_${messageId}`;\n                    messagesMap.set(key, key);\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        const key = `${chatId}_${messageIds[j]}`;\n                        messagesMap.set(key, key);\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!mapEquals(this.inViewMap, messagesMap)) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\n\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\n            this.inViewMap = messagesMap;\n\n            return messages;\n        }\n\n        return null;\n    };\n\n    updatePinnedMessage = scrollToNext => {\n        const { chatId, filter } = this.props;\n        if (filter) return;\n\n        const { prevScrollTop } = this;\n        if (prevScrollTop === null) {\n            // console.log('[pin] handleScroll 3.1');\n            return;\n        }\n        // const { prevScrollTop } = this;\n        // if (prevScrollTop === null) return;\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return;\n        if (!media.pinned) return;\n        if (media.pinned.length <= 1) return;\n\n        const messages = [];\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!messages) return;\n        if (messages.length <= 1) return;\n\n        const minId = messages[0].messageId;\n        const maxId = messages[messages.length - 1].messageId;\n\n        let id = 0;\n        for (let i = 0; i < media.pinned.length; i++) {\n            const pinned = media.pinned[i];\n            if (pinned.id >= minId && pinned.id <= maxId) {\n                id = pinned.id;\n                break;\n            }\n        }\n\n        if (!id) {\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\n            const pinnedMaxId = media.pinned[0].id\n\n            if (pinnedMaxId < minId) {\n                id = pinnedMaxId;\n            } else if (pinnedMinId > maxId) {\n                id = pinnedMinId;\n            }\n        }\n\n        const { clickedPinned, currentPinned } = MessageStore;\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\n\n\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\n                // console.log('[pin] handleScroll 3.2');\n                return;\n            }\n\n            // console.log('[pin] handleScroll 4', { chatId, id });\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\n        } else {\n            // console.log('[pin] handleScroll 3.3');\n        }\n    };\n\n    updateScrollDownVisibility = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevHistory = history;\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\n\n        this.updateItemsInView();\n\n        if (!this.cancelUpdatePinnedMessage) {\n            this.updatePinnedMessage(scrollToNext);\n        }\n\n        this.updateScrollDownVisibility();\n\n        if (this.prevScrollTop !== null) {\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\n                this.onLoadNext();\n            }\n\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\n                this.onLoadPrevious();\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    getRequest = (chatId, fromMessageId, offset, limit) => {\n        const { filter } = this.props;\n\n        if (filter) {\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\n                const media = MessageStore.getMedia(chatId);\n                if (media && media.pinned && media.pinned.length > 0) {\n                    return Promise.resolve({\n                        '@type': 'messages',\n                        messages: [...media.pinned]\n                    });\n                }\n            }\n\n            return TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                from_message_id: fromMessageId,\n                offset,\n                limit,\n                filter,\n                sender_user_id: null,\n                query: null\n            });\n        }\n\n        return TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset,\n            limit\n        });\n    };\n\n    scrollToStart = async () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const hasLastMessage = history.some(x => x.chat_id === chatId && chat && chat.last_message && chat.last_message.id === x.id);\n        if (hasLastMessage) {\n            this.scrollToBottom();\n        } else {\n            this.handleSelectChat(chatId, chatId, 0, messageId, true);\n        }\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        if (!event.dataTransfer) return;\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            dataTransfer: event.dataTransfer\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender, content, forward_info } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isFirstUnread) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                !senderEquals(sender, prevMessage.sender) ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId, filter } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        this.itemsMap.clear();\n\n        if (clearHistory) {\n            this.messages = null;\n        } else {\n            this.messages = [];\n            for (let i = 0; i < history.length; i++) {\n                const message = history[i];\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\n                let albumAdded = false;\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <Album\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <DocumentAlbum\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                }\n\n                if (!albumAdded) {\n                    /// history[4] id=5 prev\n                    /// history[5] id=6 current\n                    /// history[6] id=7 next\n                    /// ...\n                    /// history[9] id=10\n\n                    const x = message;\n                    const prevMessage = i > 0 ? history[i - 1] : null;\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                    let m = null;\n                    if (isServiceMessage(x)) {\n                        m = (\n                            <ServiceMessage\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    } else {\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        m = (\n                            <Message\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                sendingState={x.sending_state}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    }\n\n                    this.messages.push(m);\n                }\n            }\n        }\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <div className='messages-list-top-panel'>\n                    <GroupCallJoinPanel chatId={chatId}/>\n                    <ActionBar chatId={chatId} />\n                </div>\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n                {/*<InputBoxHints />*/}\n            </div>\n        );\n    }\n}\n\nMessagesList.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    options: PropTypes.object,\n    filter: PropTypes.object\n};\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport HeaderCommand from './HeaderCommand';\nimport { clearSelection, closePinned } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessagesHeader.css'\n\nclass PinnedMessagesHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const media = MessageStore.getMedia(props.chatId);\n\n        this.state = {\n            selectedCount: MessageStore.selectedItems.size,\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { selectedCount, pinnedCount } = this.state;\n\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n\n        if (nextState.pinnedCount !== pinnedCount) {\n            return true;\n        }\n\n        return true;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({\n            selectedCount: MessageStore.selectedItems.size\n        });\n    }\n\n    handleClose = () => {\n        const { selectedCount } = this.state;\n        if (selectedCount > 0) {\n            clearSelection();\n        }\n\n        closePinned();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedCount, pinnedCount } = this.state;\n\n        let title = t('PinnedMessages');\n        if (pinnedCount === 1) {\n            title = t('PinnedMessage');\n        } else if (pinnedCount > 1) {\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\n                <IconButton\n                    className='header-left-button main-menu-button'\n                    onClick={this.handleClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectedCount}/>\n                    <div className={classNames('header-status', 'grow')}>\n                        <span className='header-status-content'>{title}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nPinnedMessagesHeader.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(PinnedMessagesHeader);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport MessagesList from './MessagesList';\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { canPinMessages } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessages.css';\n\nclass PinnedMessages extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId } = state;\n        const { chatId } = props;\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                opened: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    onClientUpdateOpenPinned = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n\n        if (currentChatId !== chatId) return;\n\n        this.setState({\n            opened: true\n        });\n    };\n\n    onClientUpdateClosePinned = update => {\n        this.setState({\n            opened: false\n        });\n    };\n\n    handleUnpinAll = async () => {\n        const { chatId } = this.props;\n\n        requestUnpinMessage(chatId, null);\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const { opened } = this.state;\n        if (!opened) return null;\n\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\n\n        return (\n            <div className='pinned-messages'>\n                <div className='pinned-messages-wrapper'>\n                    <div className='dialog-background'/>\n                    <div className='dialog-details-wrapper'>\n                        <PinnedMessagesHeader chatId={chatId} />\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\n                    </div>\n                </div>\n            </div>\n        );\n\n        // return (\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\n        //\n        //     </SidebarPage>\n        // );\n    }\n}\n\nPinnedMessages.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessages);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='sticker-set-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { closeChatSelect } from '../../Actions/Message';\nimport './SelectChatPlaceholder.css';\n\nclass SelectChatPlaceholder extends React.Component {\n\n    handleClick = () => {\n        closeChatSelect();\n    }\n\n    render() {\n        const { t } = this.props;\n\n        return (\n            <div className='switch-inline-placeholder' onClick={this.handleClick}>\n                <div className='switch-inline-text'>{t('SelectChat') + '...'}</div>\n            </div>\n        );\n    }\n\n}\n\nSelectChatPlaceholder.propTypes = {};\n\nexport default withTranslation()(SelectChatPlaceholder);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport GroupCallTopPanel from '../Calls/GroupCallTopPanel';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessages from './PinnedMessages';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport SelectChatPlaceholder from './SelectChatPlaceholder';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null,\n            chatSelectOptions: null,\n            chatOpenOptions: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper, chatSelectOptions, chatOpenOptions } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n        if (nextState.chatSelectOptions !== chatSelectOptions) {\n            return true;\n        }\n        if (nextState.chatOpenOptions !== chatOpenOptions) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.on('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.off('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateClearOpenChatOptions = update => {\n        this.setState({\n            chatOpenOptions: null\n        });\n    }\n\n    onClientUpdateChatSelect = update => {\n        const { options } = update;\n\n        this.setState({\n            chatSelectOptions: options\n        });\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatSelectOptions } = this.state;\n        const { nextChatId: chatId, nextMessageId: messageId, options: chatOpenOptions } = update;\n\n        this.setState({\n            chatId,\n            messageId,\n            chatOpenOptions,\n            chatSelectOptions: chatOpenOptions && chatOpenOptions.closeChatSelect ? null: chatSelectOptions\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, chatOpenOptions, wallpaper, chatSelectOptions } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <div className='dialog-details-wrapper'>\n                    <GroupCallTopPanel/>\n                    <HeaderPlayer />\n                    <Header chatId={chatId} />\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} options={chatOpenOptions} />\n                    <Footer chatId={chatId} options={chatOpenOptions}/>\n                </div>\n                {chatSelectOptions && <SelectChatPlaceholder/>}\n                <PinnedMessages chatId={chatId}/>\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\nimport AppStore from '../../Stores/ApplicationStore';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false,\n            for_comment: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        messageIds.sort();\n\n        this.targetChats.forEach(async targetChatId => {\n            if (inputMessageContent) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport BlobDrawable, {\n    AMPLITUDE_SPEED,\n    FORM_BIG_MAX,\n    FORM_SMALL_MAX, LIGHT_GRADIENT_SIZE,\n    SCALE_BIG,\n    SCALE_BIG_MIN,\n    SCALE_SMALL,\n    SCALE_SMALL_MIN\n} from './BlobDrawable';\nimport {\n    MUTE_BUTTON_STATE_CONNECTING,\n    MUTE_BUTTON_STATE_MUTE,\n    MUTE_BUTTON_STATE_MUTED_BY_ADMIN,\n    MUTE_BUTTON_STATE_UNMUTE\n} from './TopBar';\nimport { stopPropagation } from '../../Utils/Message';\n\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/OvershootInterpolator.java\nclass OvershootInterpolator {\n    constructor(tension) {\n        this.mTension = tension;\n    }\n\n    getInterpolation(t) {\n        // _o(t) = t * t * ((tension + 1) * t + tension)\n        // o(t) = _o(t - 1) + 1\n        t -= 1.0;\n        return t * t * ((this.mTension + 1) * t + this.mTension) + 1.0;\n    }\n}\n\n// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/DecelerateInterpolator.java\nclass DecelerateInterpolator {\n    constructor(factor) {\n        this.mFactor = factor || 1.0;\n    }\n\n    getInterpolation(input) {\n        let result;\n        if (this.mFactor === 1.0) {\n            result = 1.0 - (1.0 - input) * (1.0 - input);\n        } else {\n            result = 1.0 - Math.pow((1.0 - input), 2 * this.mFactor);\n        }\n        return result;\n    }\n}\n\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/AccelerateInterpolator.java\nclass AccelerateInterpolator {\n    constructor(factor) {\n        this.mFactor = factor || 1.0;\n        this.mDoubleFactor = 2 * this.mFactor;\n    }\n\n    getInterpolation(input) {\n        if (this.mFactor === 1.0) {\n            return input * input;\n        }\n\n        return Math.pow(input, this.mDoubleFactor);\n    }\n}\n\nclass WeavingState {\n    constructor(stateId) {\n        this.stateId = stateId;\n        this.shader = (ctx, left, top, right, bottom) => { };\n        this.createGradient(stateId);\n    }\n\n    createGradient(stateId) {\n        this.shader = (ctx, left, top, right, bottom) => {\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\n        };\n    }\n\n    update(top, left, size, dt) {\n        // TODO: move gradient here\n    }\n\n    // Android colors\n    static getGradientFromType(ctx, type, left, top, right, bottom) {\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            const gradient = ctx.createLinearGradient(0, 100, 100, 0);\n\n            gradient.addColorStop(0, '#57A4FE');\n            gradient.addColorStop(.3, '#766EE9');\n            gradient.addColorStop(1, '#F05459');\n\n            return gradient;\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\n            const gradient=ctx.createRadialGradient(0,50,0,0,50,200);\n\n            gradient.addColorStop(0, '#77E55C');\n            gradient.addColorStop(1, '#56C7FE');\n\n            return gradient;\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\n            const gradient = ctx.createRadialGradient(0,50,0,0,50,200);\n\n            gradient.addColorStop(0, '#66D4FB');\n            gradient.addColorStop(1, '#539EF8');\n\n            return gradient;\n        } else {\n            const gradient = ctx.createLinearGradient(0, 400, 400, 0);\n\n            gradient.addColorStop(0, '#2B333E');\n            gradient.addColorStop(1, '#2B333E');\n\n            return gradient;\n        }\n    }\n}\n\nclass RadialProgressView {\n    constructor() {\n        this.decelerateInterpolator = new DecelerateInterpolator();\n        this.accelerateInterpolator = new AccelerateInterpolator();\n\n        this.lineCap = 'round';\n        this.lineWidth = 3;\n        this.progressColor = '#1C93E3';\n        this.updateProgressPaint();\n\n        this.lastUpdateTime = 0;\n        this.radOffset = 0;\n        this.currentCircleLength = 0;\n        this.risingCircleLength = false;\n        this.currentProgressTime = 0;\n        this.useSelfAlpha = false;\n        this.drawingCircleLength = 0;\n\n        this.rotationTime = 2000;\n        this.risingTime = 500;\n        this.size = 0;\n\n        this.currentProgress = 0;\n        this.progressAnimationStart = 0;\n        this.progressTime = 0;\n        this.animatedProgress = 0;\n        this.circle = false;\n        this.circleProgress = 0;\n        this.noProgress = true;\n    }\n\n    setUseSelfAlpha = value => {\n        this.useSelfAlpha = value;\n    };\n\n    setAlpha = alpha => {\n        console.log('[rpv] setAlpha', alpha);\n    };\n\n    setNoProgress = value => {\n        this.noProgress = value;\n    };\n\n    setProgress = value => {\n        this.currentProgress = value;\n        if (this.animatedProgress > value) {\n            this.animatedProgress = value;\n        }\n\n        this.progressAnimationStart = this.animatedProgress;\n        this.progressTime = 0;\n    };\n\n    updateAnimation = () => {\n        const newTime = new Date();\n        let dt = newTime - this.lastUpdateTime;\n        if (dt > 17) {\n            dt = 17;\n        }\n        this.lastUpdateTime = newTime;\n\n        this.radOffset += 360 * dt / this.rotationTime;\n        let count = Math.trunc(this.radOffset / 360);\n        this.radOffset -= count * 360;\n\n        if (this.circle && this.circleProgress !== 1.0) {\n            this.circleProgress += 16 / 220;\n            if (this.circleProgress > 1.0) {\n                this.circleProgress = 1.0;\n            }\n        } else if (!this.circle && this.circleProgress !== 0.0) {\n            this.circleProgress -= 16 / 400;\n            if (this.circleProgress < 0) {\n                this.circleProgress = 0;\n            }\n        }\n\n        if (this.noProgress) {\n            if (this.circleProgress === 0) {\n                this.currentProgressTime += dt;\n                if (this.currentProgressTime >= this.risingTime) {\n                    this.currentProgressTime = this.risingTime;\n                }\n                if (this.risingCircleLength) {\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\n                } else {\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\n                }\n\n                if (this.currentProgressTime === this.risingTime) {\n                    if (this.risingCircleLength) {\n                        this.radOffset += 270;\n                        this.currentCircleLength = -266;\n                    }\n\n                    this.risingCircleLength = !this.risingCircleLength;\n                    this.currentProgressTime = 0;\n                }\n            } else {\n                if (this.risingCircleLength) {\n                    const old = this.currentCircleLength;\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\n                    this.currentCircleLength += 360 * this.circleProgress;\n                    const dx = old - this.currentCircleLength;\n                    if (dx > 0) {\n                        this.radOffset += old - this.currentCircleLength;\n                    }\n                } else {\n                    const old = this.currentCircleLength;\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\n                    this.currentCircleLength -= 364 * this.circleProgress;\n                    const dx = old - this.currentCircleLength;\n                    if (dx > 0) {\n                        this.radOffset += old - this.currentCircleLength;\n                    }\n                }\n            }\n        }\n        else {\n            let progressDiff = this.currentProgress - this.progressAnimationStart;\n            if (progressDiff > 0) {\n                progressDiff += dt;\n                if (this.progressTime >= 200) {\n                    this.animatedProgress = this.progressAnimationStart = this.currentProgress;\n                    this.progressTime = 0;\n                } else {\n                    this.animatedProgress = this.progressAnimationStart + progressDiff * this.decelerateInterpolator.getInterpolation(this.progressTime / 200);\n                }\n            }\n            this.currentCircleLength = Math.max(4, 360 * this.animatedProgress);\n        }\n    };\n\n    setSize = size => {\n        this.size = size;\n    };\n\n    setStrokeWidth = value => {\n        this.lineWidth = value;\n        this.updateProgressPaint();\n    };\n\n    setProgressColor = color => {\n        this.progressColor = color;\n        this.updateProgressPaint();\n    };\n\n    updateProgressPaint() {\n        this.progressPaint = ctx => {\n            if (this.lineCap) {\n                ctx.lineCap = this.lineCap;\n            }\n            if (this.lineWidth) {\n                ctx.lineWidth = this.lineWidth;\n            }\n            if (this.progressColor) {\n                ctx.strokeStyle = this.progressColor;\n            }\n        };\n    }\n\n    toCircle = (toCircle, animated) => {\n        this.circle = toCircle;\n        if (!animated) {\n            this.circleProgress = this.circle ? 1.0 : 0.0;\n        }\n    }\n\n    draw = (canvas, cx, cy, scale = 1) => {\n        this.circleRect = { x0: cx - this.size / 2, y0: cy - this.size / 2, x1: cx + this.size / 2, y1: cy + this.size / 2 };\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(cx, cy);\n            ctx.scale(scale, scale);\n            ctx.beginPath();\n            if (!this.risingCircleLength) {\n                if ((this.radOffset + this.currentCircleLength) > this.radOffset) {\n                    this.currentCircleLength = 0;\n                }\n            }\n\n            const radStart = this.radOffset * Math.PI / 180;\n            this.drawingCircleLength = this.currentCircleLength;\n            const radLength = this.drawingCircleLength * Math.PI / 180;\n\n\n            ctx.arc(0, 0, this.size / 2, radStart, radStart + radLength, !this.risingCircleLength);\n            this.progressPaint(ctx);\n            ctx.stroke();\n            ctx.restore();\n\n            this.updateAnimation();\n        }\n    }\n\n    isCircle = () => {\n        return Math.abs(this.drawingCircleLength) >= 360;\n    }\n}\n\nclass Button extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.focused = true;\n        this.radialPaint = ctx => { };\n        this.paint = ctx => { };\n        this.paintTmp = ctx => { };\n        this.lastUpdateTime = new Date();\n        this.amplitude = 0.0;\n\n        this.states = [\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\n        ];\n        this.switchProgress = 1.0;\n        this.muteButtonState = MUTE_BUTTON_STATE_MUTE;\n        this.prevState = null;\n        this.currentState = this.states[this.muteButtonState];\n        this.progressToState = 1.0;\n\n        this.showLightingProgress = 1.0;\n        this.showWavesProgress = 1.0;\n        this.overshootInterpolator = new OvershootInterpolator(1.5);\n        this.colorsTmp = new Array(3);\n\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 0 * this.scale;\n        this.right = 380 * this.scale;\n        this.bottom = (220 + 28) * this.scale;\n        this.cx = 190 * this.scale;\n        this.cy = (110 + 28) * this.scale;\n\n        this.buttonDefaultRadius = 57;\n        this.buttonRadius = 52;\n        this.strokeWidth = 4;\n        this.invalidateColors = true;\n        this.radialProgressView = new RadialProgressView();\n        this.radialProgressView.setSize(this.buttonRadius * 2 - this.strokeWidth);\n        this.radialProgressView.setStrokeWidth(this.strokeWidth);\n        this.radialProgressView.setProgressColor('#28BAFF');\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        window.addEventListener('blur', this.handleBlur);\n        window.addEventListener('focus', this.handleFocus);\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n\n\n        this.canvas = document.getElementById('button-canvas');\n        this.tinyWaveDrawable = new BlobDrawable(9);\n        this.bigWaveDrawable = new BlobDrawable(12);\n\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.maxRadius = Math.trunc(72 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.generateInitBlob();\n\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.maxRadius = Math.trunc(75 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.generateInitBlob();\n\n        const color = '#66D4FB';\n        this.radialGradient = ctx => {\n            const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 160);\n            gradient.addColorStop(0, color + '32');\n            gradient.addColorStop(1, color + '00');\n\n            ctx.fillStyle = gradient;\n        };\n        this.radialPaint = this.radialGradient;\n\n        this.setAmplitude(this.amplitude);\n\n        // console.log('[button] componentDidMount draw');\n        this.draw();\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        window.removeEventListener('blur', this.handleBlur);\n        window.removeEventListener('focus', this.handleFocus);\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n    }\n\n    handleFocus = () => {\n        this.focused = true;\n        this.invokeDraw();\n    }\n\n    handleBlur = () => {\n        this.focused = false;\n    }\n\n    invokeDraw = () => {\n        if (this.raf) return;\n\n        this.draw();\n    }\n\n    handleDevicePixelRatioChanged = e => {\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 0 * this.scale;\n        this.right = 380 * this.scale;\n        this.bottom = (220 + 28) * this.scale;\n        this.cx = 190 * this.scale;\n        this.cy = (110 + 28) * this.scale;\n        this.forceUpdate();\n    }\n\n    fillColors(stateId, colorsToSet) {\n        if (stateId === MUTE_BUTTON_STATE_UNMUTE) {\n            colorsToSet[0] = '#66D4FB';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else if (stateId === MUTE_BUTTON_STATE_MUTE) {\n            colorsToSet[0] = '#7DDCAA';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else if (stateId === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            colorsToSet[0] = '#766EE9';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else {\n            colorsToSet[0] = '#1C2229';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        }\n    }\n\n    strToHex(n) {\n        let s = n.toString(16);\n        if (s.length === 1) {\n            s = '0' + s;\n        }\n        return s;\n    }\n\n    blendARGB(color1, color2, ratio) {\n        if (color1.length <= 7) {\n            color1 += 'FF';\n        }\n        if (color2.length <= 7) {\n            color2 += 'FF';\n        }\n        const c1 = {\n            r: parseInt(color1.substr(1, 2), 16),\n            g: parseInt(color1.substr(3, 2), 16),\n            b: parseInt(color1.substr(5, 2), 16),\n            a: parseInt(color1.substr(7, 2), 16),\n        };\n        const c2 = {\n            r: parseInt(color2.substr(1, 2), 16),\n            g: parseInt(color2.substr(3, 2), 16),\n            b: parseInt(color2.substr(5, 2), 16),\n            a: parseInt(color2.substr(7, 2), 16),\n        };\n\n        const inverseRatio = 1 - ratio;\n        const a = Math.trunc(c1.a * inverseRatio + c2.a * ratio) % 256;\n        const r = Math.trunc(c1.r * inverseRatio + c2.r * ratio) % 256;\n        const g = Math.trunc(c1.g * inverseRatio + c2.g * ratio) % 256;\n        const b = Math.trunc(c1.b * inverseRatio + c2.b * ratio) % 256;\n\n        return `#${this.strToHex(r)}${this.strToHex(g)}${this.strToHex(b)}`;\n    }\n\n    draw = (force = false) => {\n        this.raf = null;\n        if (!this.mounted) {\n            return;\n        }\n        if (!this.focused && this.switchProgress >= 1.0) {\n            return;\n        }\n        // console.log('[button] draw', [this.focused, this.mounted]);\n        const { currentState, prevState, left, top, right, bottom } = this;\n\n        const newTime = new Date();\n        let dt = (newTime - this.lastUpdateTime);\n        if (dt > 20) {\n            dt = 17;\n        }\n\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.maxRadius = Math.trunc((62 + 20 * FORM_SMALL_MAX) / this.buttonDefaultRadius * this.buttonRadius);\n\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.maxRadius = Math.trunc((65 + 20 * FORM_BIG_MAX) / this.buttonDefaultRadius * this.buttonRadius);\n\n        if (this.animateToAmplitude !== this.amplitude) {\n            this.amplitude = this.amplitude + this.animateAmplitudeDiff * dt;\n            if (this.animateAmplitudeDiff > 0) {\n                if (this.amplitude > this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude < this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            }\n        }\n\n        let canSwitchProgress = true;\n        if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n            this.radialProgressView.toCircle(true, true);\n            if (!this.radialProgressView.isCircle()) {\n                canSwitchProgress = false;\n            }\n        } else if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n            this.radialProgressView.toCircle(true, false);\n        }\n\n        if (canSwitchProgress) {\n            if (this.switchProgress !== 1) {\n                if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                    this.switchProgress += dt / 100;\n                } else {\n                    this.switchProgress += dt / 180;\n                }\n\n                if (this.switchProgress >= 1.0) {\n                    this.switchProgress = 1.0;\n                    this.prevState = null;\n                    if (currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        this.radialProgressView.toCircle(false, true);\n                    }\n                }\n                this.invalidateColors = true;\n            }\n\n            if (this.invalidateColors && currentState) {\n                this.invalidateColors = false;\n                let lightingColor;\n                if (prevState) {\n                    this.fillColors(prevState.stateId, this.colorsTmp);\n                    const oldLight = this.colorsTmp[0];\n                    this.fillColors(currentState.stateId, this.colorsTmp);\n                    const newLight = this.colorsTmp[0];\n                    lightingColor = this.blendARGB(oldLight, newLight, this.switchProgress);\n                } else {\n                    this.fillColors(currentState.stateId, this.colorsTmp);\n                    lightingColor = this.colorsTmp[0];\n                }\n                if (this.currentLightColor !== lightingColor) {\n                    this.radialGradient = ctx => {\n                        const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 100);\n\n                        gradient.addColorStop(0, lightingColor + '3C');\n                        gradient.addColorStop(1, lightingColor + '00');\n\n                        ctx.fillStyle = gradient;\n                    };\n                    this.currentLightColor = lightingColor;\n                }\n            }\n\n            let showWaves = false;\n            let showLighting = false;\n            if (currentState) {\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\n                showLighting = currentState.stateId !== MUTE_BUTTON_STATE_CONNECTING;\n            }\n\n            if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                this.showWavesProgress -= dt / 180;\n                if (this.showWavesProgress < 0) {\n                    this.showWavesProgress = 0;\n                }\n            } else {\n                if (showWaves && this.showWavesProgress !== 1) {\n                    this.showWavesProgress += dt / 350;\n                    if (this.showWavesProgress > 1) {\n                        this.showWavesProgress = 1;\n                    }\n                } else if (!showWaves && this.showWavesProgress !== 0) {\n                    this.showWavesProgress -= dt / 350;\n                    if (this.showWavesProgress < 0) {\n                        this.showWavesProgress = 0;\n                    }\n                }\n            }\n\n            if (showLighting && this.showLightingProgress !== 1) {\n                this.showLightingProgress += dt / 350;\n                if (this.showLightingProgress > 1) {\n                    this.showLightingProgress = 1;\n                }\n            } else if (!showLighting && this.showLightingProgress !== 0) {\n                this.showLightingProgress -= dt / 350;\n                if (this.showLightingProgress < 0) {\n                    this.showLightingProgress = 0;\n                }\n            }\n        }\n\n        let showWavesProgressInterpolated = this.overshootInterpolator.getInterpolation(this.showWavesProgress);\n        showWavesProgressInterpolated = 0.4 + 0.6 * showWavesProgressInterpolated;\n\n        this.bigWaveDrawable.update(this.amplitude, 1.0);\n        this.tinyWaveDrawable.update(this.amplitude, 1.0);\n\n        const ctx = this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        ctx.resetTransform();\n\n        const cx = this.cx;\n        const cy = this.cy;\n\n        if (prevState && currentState && (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING || prevState.stateId === MUTE_BUTTON_STATE_CONNECTING)) {\n            let progress;\n            if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                progress = this.switchProgress;\n                this.paint = prevState.shader;\n            } else {\n                progress = 1.0 - this.switchProgress;\n                this.paint = currentState.shader;\n            }\n\n            this.paintTmp = ctx => {\n                ctx.fillStyle = '#2B333E';\n            }\n\n            let paint = ctx => {\n                this.paint(ctx, left, top, right, bottom);\n            };\n\n            ctx.globalAlpha = 1.0;\n            let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\n            const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\n            this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\n\n            ctx.globalAlpha = 0.3;\n            // big wave\n            ctx.save();\n            scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\n            ctx.translate(cx, cy);\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n            this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\n            ctx.restore();\n\n            // small wave\n            ctx.save();\n            scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\n            ctx.translate(cx, cy);\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n            this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\n            ctx.restore();\n\n            ctx.globalAlpha = 1.0;\n            if (canSwitchProgress) {\n                this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\n                paint = ctx => {\n                    ctx.fillStyle = '#28BAFF';\n                };\n                if (progress !== 0) {\n                    ctx.globalAlpha = progress;\n                    this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\n                }\n            }\n            ctx.globalAlpha = 1.0;\n            this.drawCircle(ctx, cx, cy, 1,Math.trunc(this.buttonRadius - 0.5 * this.strokeWidth) * progress * this.scale, this.paintTmp);\n            if  (!canSwitchProgress) {\n                this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\n            }\n            ctx.restore();\n        } else {\n            for (let i = 0; i < 2; i++) {\n                let alpha = 0;\n                let buttonRadius = this.buttonRadius;\n                let paint = null;\n                if (i === 0 && prevState) {\n                    paint = prevState.shader;\n                    alpha = 1 - this.switchProgress;\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else if (i === 1) {\n                    paint = currentState.shader;\n                    alpha = this.switchProgress;\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else {\n                    continue;\n                }\n\n                if (!paint) {\n                    paint = ctx => {\n                        ctx.fillStyle = '#2B333E';\n                    };\n                }\n\n                ctx.globalAlpha = 1.0;\n                let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\n                if (i === 1) {\n                    const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\n                    this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\n                }\n\n                ctx.globalAlpha = 0.3 * alpha;\n                // big wave\n                ctx.save();\n                scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\n                ctx.translate(cx, cy);\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n                this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\n                ctx.restore();\n\n                // small wave\n                ctx.save();\n                scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\n                ctx.translate(cx, cy);\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n                this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\n                ctx.restore();\n            }\n\n            // button\n            for (let i = 0; i < 2; i++) {\n                let alpha = 0;\n                let buttonRadius = this.buttonRadius;\n                let paint = null;\n                if (i === 0 && prevState) {\n                    paint = prevState.shader;\n                    alpha = 1 - this.switchProgress;\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else if (i === 1) {\n                    paint = currentState.shader;\n                    alpha = this.switchProgress;\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else {\n                    continue;\n                }\n\n                if (!paint) {\n                    paint = ctx => {\n                        ctx.fillStyle = '#2B333E';\n                    };\n                }\n\n                if (i === 0) {\n                    ctx.globalAlpha = 1.0;\n                } else {\n                    ctx.globalAlpha = alpha;\n                }\n                this.drawCircle(ctx, cx, cy, this.scale, buttonRadius, paint);\n\n                if (i === 1 && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                    this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\n                }\n            }\n        }\n\n        if (!force) {\n            this.raf = requestAnimationFrame(() => this.draw());\n        }\n    };\n\n    drawCircle(ctx, cx, cy, scale, radius, paint) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.translate(cx, cy);\n        ctx.scale(scale, scale);\n        ctx.arc(0, 0, radius, 0, 2 * Math.PI, false);\n        ctx.closePath();\n        paint && paint(ctx);\n        ctx.fill();\n        ctx.restore();\n    }\n\n    setCurrentState = (stateId, animated) => {\n        const { currentState, states } = this;\n\n        if (currentState && currentState.id === stateId) {\n            return;\n        }\n\n        this.previousState = animated ? currentState : null;\n        this.currentState = states[stateId];\n        this.progressToState = this.previousState ? 0.0 : 1.0;\n    };\n\n    updateMuteButton = (stateId, animated) => {\n        const { muteButtonState } = this;\n        if (muteButtonState === stateId && animated) {\n            return;\n        }\n\n        // TODO: add text animation\n\n        if (animated) {\n            this.muteButtonState = stateId;\n        } else {\n            this.muteButtonState = stateId;\n        }\n        this.updateMuteButtonState(animated);\n    }\n\n    updateMuteButtonState (animated) {\n        const { states, currentState, muteButtonState } = this;\n\n        if (states[muteButtonState] !== currentState) {\n            this.prevState = currentState;\n            this.currentState = states[muteButtonState];\n            if (!this.prevState || !animated) {\n                this.switchProgress = 1.0;\n                this.prevState = null;\n            } else {\n                this.switchProgress = 0.0;\n            }\n        }\n\n        if (!animated) {\n            let showWaves = false;\n            let showLighting = false;\n            if (currentState) {\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\n                showLighting = currentState.stateId === MUTE_BUTTON_STATE_CONNECTING;\n            }\n            this.showWavesProgress = showWaves ? 1.0 : 0.0;\n            this.showLightingProgress = showLighting ? 1.0 : 0.0;\n        }\n    }\n\n    setAmplitude(value) {\n        this.animateToAmplitude = value;\n        this.animateAmplitudeDiff = (value - this.amplitude) / (100 + 500 * AMPLITUDE_SPEED);\n        // console.log('[button] setAmplitude', [this.amplitude, this.animateToAmplitude, this.animateAmplitudeDiff]);\n    }\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    }\n\n    render() {\n        const { children, onClick } = this.props;\n        const { left, right, top, bottom, scale } = this;\n\n        return (\n            <div id='button' className='button' style={{ height: bottom / scale, borderRadius: 12, position: 'relative', transform: 'translateY(-14px)' }}>\n                <canvas id='button-canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\n                <div style={{\n                    position: 'absolute',\n                    background: 'transparent',\n                    width: 104,\n                    height: 104,\n                    borderRadius: '50%',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    left: '50%',\n                    top: '50%',\n                    marginLeft: -52,\n                    marginTop: -38,\n                    cursor: 'pointer'\n                }}\n                     onMouseDown={stopPropagation}\n                     onClick={onClick}>\n                    {children}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nButton.propTypes = {};\n\nexport default Button;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport AnimatedItem from '../ColumnMiddle/AnimatedItem';\nimport './GroupCallMicButtonHint.css';\n\nclass GroupCallMicButtonHint extends React.Component {\n\n    getItemTemplate = item => {\n        const { t } = this.props;\n\n        let title = '';\n        let subtitle = '';\n        switch (item) {\n            case 'muted': {\n                title = t('VoipGroupUnmute');\n                subtitle = t('VoipHoldAndTalk');\n                break;\n            }\n            case 'unmuted': {\n                title = t('VoipTapToMute');\n                break;\n            }\n            case 'forceMuted': {\n                title = t('VoipMutedByAdmin');\n                subtitle = t('VoipMutedByAdminInfo');\n                break;\n            }\n            case 'connecting': {\n                title = t('Connecting');\n                break;\n            }\n        }\n\n        return (\n            <div className='group-call-mic-button-hint-item'>\n                <div className='group-call-mic-button-hint-title'>{title}</div>\n                {subtitle && <div className='group-call-mic-button-hint-subtitle'>{subtitle}</div>}\n            </div>\n        );\n    }\n\n    render() {\n        const { className, status } = this.props;\n\n        return (\n            <div className={classNames('group-call-mic-button-hint', className)}>\n                <AnimatedItem item={status} height={37} getItemTemplate={this.getItemTemplate} scrollDown={true} animateOnMount={false}/>\n            </div>\n        );\n    }\n}\n\nGroupCallMicButtonHint.propTypes = {\n    status: PropTypes.string\n};\n\nexport default withTranslation()(GroupCallMicButtonHint);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from './Button';\nimport GroupCallMicButtonHint from './GroupCallMicButtonHint';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport { getCallStatus } from '../../Calls/Utils';\nimport { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallMicButton.css';\n\nclass GroupCallMicButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.buttonRef = React.createRef();\n\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected,\n            animated: CallStore.animated\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { status, connected, animated, shook } = this.state;\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        if (connected !== nextState.connected) {\n            return true;\n        }\n\n        if (shook !== nextState.shook) {\n            return true;\n        }\n\n        if (status !== nextState.status) {\n            return true;\n        }\n\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.switchButtonState(false);\n\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onClientUpdateGroupCallAmplitudeChange = update => {\n        const { amplitudes } = update;\n        if (!amplitudes.length) return;\n\n        for (let i = 0; i < amplitudes.length; i++) {\n            const { type, value } = amplitudes[i];\n            if (type === 'input') {\n                this.buttonRef.current && this.buttonRef.current.setAmplitude(value);\n                return;\n            }\n        }\n    };\n\n    switchButtonState(animated = true) {\n        const { connected, status } = this.state;\n\n        let stateId = MUTE_BUTTON_STATE_MUTE;\n        if (!connected) {\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\n        } else {\n            if (status === 'forceMuted') {\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\n            } else if (status === 'unmuted') {\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\n            } else if (status === 'muted') {\n                stateId = MUTE_BUTTON_STATE_MUTE;\n            }\n        }\n\n\n        this.buttonRef.current && this.buttonRef.current.updateMuteButton(stateId, true);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id, is_muted } = participant\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status,\n            connected\n        }, () => {\n            this.switchButtonState();\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            call,\n            status,\n            connected\n        }, () => {\n            this.switchButtonState();\n        });\n    };\n\n    handleClick = () => {\n        const { call } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId, stream } = call;\n\n        const groupCall = CallStore.get(groupCallId);\n        if (!groupCall) return;\n\n        if (!groupCall.can_unmute_self) {\n            const { shook } = this.state;\n            if (shook) {\n                this.setState({\n                    shook: false\n                }, () => {\n                    requestAnimationFrame(() => {\n                        this.setState({ shook: true });\n                    })\n                });\n            } else {\n                this.setState({\n                    shook: true\n                });\n            }\n        } else {\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\n        }\n    };\n\n    render() {\n        const { status, connected, animated, shook } = this.state;\n        // console.log('[call][GroupCallMicButton] render');\n\n        return (\n            <div className='group-call-mic-button-wrapper' >\n                {animated ? (\n                    <Button ref={this.buttonRef} onClick={this.handleClick}>\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\n                    </Button>\n                ) : (\n                    <div className={classNames('group-call-mic-button',\n                        {\n                            'group-call-muted-by-admin ': connected && status === 'forceMuted',\n                            'group-call-unmuted': connected && status === 'unmuted',\n                            'group-call-connecting': !connected,\n                        })}\n                         onClick={this.handleClick}\n                    >\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\n                    </div>\n                )}\n                <GroupCallMicButtonHint className={shook ? 'shook-horizontal' : ''} status={connected ? status : 'connecting'}/>\n            </div>\n        )\n    }\n}\n\nGroupCallMicButton.propTypes = {\n    groupCallId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(GroupCallMicButton);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getCallStatus } from '../../Calls/Utils';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallPanelButtons.css'\n\nclass GroupCallPanelButtons extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { status, connected } = this.state;\n\n        if (connected !== nextState.connected) {\n            return true;\n        }\n\n        if (status !== nextState.status) {\n            return true;\n        }\n\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id } = participant;\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            call,\n            status,\n            connected\n        });\n    };\n\n    render() {\n        const { children } = this.props;\n        const { status, connected } = this.state;\n        // console.log('[call][GroupCallPanelButtons] render');\n\n        return (\n            <div className={classNames('group-call-panel-buttons', {\n                'group-call-connecting': !connected,\n                'group-call-muted': connected && status === 'muted',\n                'group-call-muted-by-admin': connected && status === 'forceMuted',\n                'group-call-unmuted': connected && status === 'unmuted',\n            })}>\n                {children}\n            </div>\n        );\n    }\n}\n\nGroupCallPanelButtons.propTypes = {};\n\nexport default GroupCallPanelButtons;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M18.8833789,7.00672773 L19,7 C19.5128358,7 19.9355072,7.38604019 19.9932723,7.88337887 L20,8 L20,10 L22,10 C22.5128358,10 22.9355072,10.3860402 22.9932723,10.8833789 L23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L20,12 L20,14 C20,14.5128358 19.6139598,14.9355072 19.1166211,14.9932723 L19,15 C18.4871642,15 18.0644928,14.6139598 18.0067277,14.1166211 L18,14 L18,12 L16,12 C15.4871642,12 15.0644928,11.6139598 15.0067277,11.1166211 L15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L18,10 L18,8 C18,7.48716416 18.3860402,7.06449284 18.8833789,7.00672773 L19,7 L18.8833789,7.00672773 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />,\n    'AddMember'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm-1-9c0-.55.45-1 1-1s1 .45 1 1v6c0 .55-.45 1-1 1s-1-.45-1-1V5zm6 6c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.08c3.39-.49 6-3.39 6-6.92h-2z\" />,\n    'MicOutlined'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M10.8 4.9c0-.66.54-1.2 1.2-1.2s1.2.54 1.2 1.2l-.01 3.91L15 10.6V5c0-1.66-1.34-3-3-3-1.54 0-2.79 1.16-2.96 2.65l1.76 1.76V4.9zM19 11h-1.7c0 .58-.1 1.13-.27 1.64l1.27 1.27c.44-.88.7-1.87.7-2.91zM4.41 2.86L3 4.27l6 6V11c0 1.66 1.34 3 3 3 .23 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.55-.9l4.2 4.2 1.41-1.41L4.41 2.86z\" />,\n    'MicOffOutlined'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport MicIcon from '../../Assets/Icons/MicOutlined';\nimport MicOffIcon from '../../Assets/Icons/MicOffOutlined';\nimport UserTile from '../Tile/UserTile';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { getUserFullName } from '../../Utils/User';\nimport { openUser } from '../../Actions/Client';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallParticipant.css';\n\nclass GroupCallParticipant extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        participant: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { userId, groupCallId } = props;\n        const { prevUserId, prevGroupCallId } = state;\n\n        if (prevUserId !== userId || prevGroupCallId !== groupCallId) {\n            const participants = CallStore.participants.get(groupCallId) || new Map();\n            const participant = participants.get(userId);\n\n            return {\n                prevUserId: userId,\n                prevGroupCallId: groupCallId,\n                participant\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participant, left, top, contextMenu } = this.state;\n\n        if (participant !== nextState.participant) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { groupCallId, userId } = this.props;\n        const { group_call_id, participant } = update;\n        if (groupCallId !== group_call_id) return;\n        if (!participant) return;\n\n        const { user_id } = participant;\n        if (userId !== user_id) return;\n\n        this.setState({\n            participant\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { userId } = this.props;\n        if (userId === UserStore.getMyId()) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleOpenProfile = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n\n        openUser(userId, true);\n        closeGroupCallPanel();\n    };\n\n    handleSendMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n\n        openUser(userId, false);\n        closeGroupCallPanel();\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n        CallStore.changeUserMuted(userId, true);\n    };\n\n    handleUnmute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n        CallStore.changeUserMuted(userId, false);\n    };\n\n    render() {\n        const { userId, t } = this.props;\n        const { contextMenu, left, top, participant } = this.state;\n        // console.log('[call][GroupCallParticipant] render', participant);\n        if (!participant) return null;\n\n        const { is_speaking, is_muted_for_all_users, is_muted_for_current_user, can_unmute_self, can_be_muted_for_all_users, can_be_unmuted_for_all_users } = participant;\n        const isMuted = is_muted_for_all_users || is_muted_for_current_user;\n\n        return (\n            <div className='group-call-participant' onClick={this.handleOpenContextMenu} onContextMenu={this.handleOpenContextMenu}>\n                <UserTile userId={userId}/>\n                <div className='group-call-participant-content'>\n                    <div className='group-call-participant-content-title'>\n                        {/*{userId}*/}\n                        {getUserFullName(userId)}\n                    </div>\n                    <div className={classNames('group-call-participant-content-subtitle', 'participant-listening', { 'participant-speaking': is_speaking })}>\n                        {/*{order}*/}\n                        {is_speaking ? t('Speaking') : t('Listening')}\n                    </div>\n                </div>\n                <div className={classNames('group-call-participant-mic', { 'participant-muted-by-admin': isMuted && !can_unmute_self, 'participant-speaking': is_speaking })}>\n                    {!isMuted || is_speaking ? <MicIcon /> : <MicOffIcon />}\n                </div>\n\n                <Popover\n                    classes={{\n                        paper: 'group-call-participant-menu-root'\n                    }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        { can_be_unmuted_for_all_users && (\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleUnmute}>\n                                <ListItemText primary={t('VoipGroupUnmute')} />\n                            </MenuItem>\n                        )}\n                        { can_be_muted_for_all_users && (\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleMute}>\n                                <ListItemText primary={t('VoipGroupMute')} />\n                            </MenuItem>\n                        )}\n                        <MenuItem\n                            classes={{ root: 'group-call-participant-menu-item' }}\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                            TouchRippleProps={{\n                                classes : {\n                                    child : 'group-call-participant-menu-item-ripple-child',\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                }\n                            }}\n                            onClick={this.handleOpenProfile}>\n                            <ListItemText primary={t('VoipGroupOpenProfile')} />\n                        </MenuItem>\n                        <MenuItem\n                            classes={{ root: 'group-call-participant-menu-item' }}\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                            TouchRippleProps={{\n                                classes : {\n                                    child : 'group-call-participant-menu-item-ripple-child',\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                }\n                            }}\n                            onClick={this.handleSendMessage}>\n                            <ListItemText primary={t('SendMessage')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n\n}\n\nGroupCallParticipant.propTypes = {\n    userId: PropTypes.number,\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallParticipant);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddMemberIcon from '../../Assets/Icons/AddMember';\nimport GroupCallParticipant from './GroupCallParticipant';\nimport { albumHistoryEquals, orderCompare } from '../../Utils/Common';\nimport { canManageVoiceChats } from '../../Utils/Chat';\nimport { loadUsersContent } from '../../Utils/File';\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport FileStore from '../../Stores/FileStore';\nimport './GroupCallParticipants.css';\n\nclass GroupCallParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            participants: []\n        };\n\n        this.participantsMap = new Map();\n        // this.updateParticipants = throttle(this.updateParticipants, 1000);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            const participantsMap = CallStore.participants.get(groupCallId) || new Map();\n            const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\n\n            return {\n                prevGroupCallId: groupCallId,\n                participants: participants.map(x => x.user_id)\n            }\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participants } = this.state;\n        if (!albumHistoryEquals(participants, nextState.participants)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.preloadContent();\n\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { groupCallId } = this.props;\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        if (group_call_id !== groupCallId) return;\n\n        const { order, user_id } = participant;\n        if (order !== '0') {\n            this.participantsMap.set(user_id, user_id);\n            this.loadContent();\n\n            // wait for profile photo\n            setTimeout(() => {\n                this.updateParticipants();\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\n        } else {\n            this.updateParticipants();\n        }\n    };\n\n    updateParticipants() {\n        const { groupCallId } = this.props;\n\n        const participantsMap = CallStore.participants.get(groupCallId) || new Map();\n        const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\n\n        this.setState({\n            participants: participants.map(x => x.user_id)\n        });\n    }\n\n    preloadContent = () => {\n        const { participants } = this.state;\n        if (!participants) return;\n        if (!participants.length) return;\n\n        participants.forEach(x => {\n            this.participantsMap.set(x, x);\n        });\n        this.loadContent();\n    };\n\n    loadContent = () => {\n        const { participantsMap } = this;\n        if (!participantsMap) return;\n        if (!participantsMap.size) return;\n\n        this.participantsMap = new Map();\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, Array.from(participantsMap.keys()));\n    }\n\n    render() {\n        const { t, groupCallId } = this.props;\n        const { participants } = this.state;\n        // console.log('[call][GroupCallParticipants] render');\n\n        const { currentGroupCall } = CallStore;\n        if (!currentGroupCall) return null;\n\n        const { chatId } = currentGroupCall;\n\n        const manageGroupCalls = canManageVoiceChats(chatId);\n\n        return (\n            <div className='group-call-participants'>\n                { manageGroupCalls && (\n                    <div className='group-call-participants-invite'>\n                        <AddMemberIcon/>\n                        <div className='group-call-participants-invite-text'>\n                            {t('VoipGroupInviteMember')}\n                        </div>\n                    </div>\n                )}\n                {participants.map(x => <GroupCallParticipant key={x} userId={x} groupCallId={groupCallId}/>)}\n            </div>\n        );\n    }\n}\n\nGroupCallParticipants.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallParticipants);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M3,17V19H9V17H3M3,5V7H13V5H3M13,21V19H21V17H13V15H11V21H13M7,9V11H3V13H7V15H9V9H7M21,13V11H11V13H21M15,9H17V7H21V5H17V3H15V9Z' />,\n    'Tune'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TuneIcon from '../../Assets/Icons/Tune';\nimport { stopPropagation } from '../../Utils/Message';\nimport './GroupCallSettingsButton.css';\n\nclass GroupCallSettingsButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={onClick}>\n                <TuneIcon />\n            </div>\n        );\n    }\n}\n\nGroupCallSettingsButton.propTypes = {\n    groupCallId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default GroupCallSettingsButton;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport GroupCallMicButton from './GroupCallMicButton';\nimport GroupCallPanelButtons from './GroupCallPanelButtons';\nimport GroupCallParticipants from './GroupCallParticipants';\nimport GroupCallSettings from './GroupCallSettings';\nimport GroupCallSettingsButton from './GroupCallSettingsButton';\nimport GroupCallSubtitle from './GroupCallJoinPanelSubtitle';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { getChatTitle } from '../../Utils/Chat';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCallPanel.css';\n\nclass GroupCallPanel extends React.Component {\n    state = {\n        openSettings: false\n    };\n\n    handleClick = () => {\n        this.handleClose();\n    }\n\n    handleLeave = async event => {\n        event.stopPropagation();\n\n        const { currentGroupCall: call } = CallStore;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        await CallStore.leaveGroupCall(chatId, groupCallId);\n    };\n\n    handleOpenSettings = async event => {\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\n\n        this.setState({\n            openSettings: true\n        });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({\n            openSettings: false\n        });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    render() {\n        const { groupCallId, t } = this.props;\n        const { openSettings } = this.state;\n        const { currentGroupCall } = CallStore;\n        if (!currentGroupCall) return null;\n\n        const { chatId } = currentGroupCall;\n\n        return (\n            <div className='group-call-panel'>\n                <div className='group-call-panel-header'>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </div>\n                    <div className='group-call-panel-caption'>\n                        <div className='group-call-title'>{getChatTitle(chatId)}</div>\n                        <GroupCallSubtitle groupCallId={groupCallId} participantsOnly={true}/>\n                    </div>\n                    <div style={{ width: 48 }}/>\n                </div>\n                <div className='group-call-panel-participants scrollbars-hidden'>\n                    <GroupCallParticipants groupCallId={groupCallId}/>\n                </div>\n                <GroupCallPanelButtons>\n                    <GroupCallMicButton/>\n                    <div className='group-call-panel-button'>\n                        <GroupCallSettingsButton onClick={this.handleOpenSettings}/>\n                        <div className='group-call-panel-button-text'>\n                            {t('Settings')}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleLeave}>\n                            <CallEndIcon />\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {t('Leave')}\n                        </div>\n                    </div>\n                </GroupCallPanelButtons>\n                {openSettings && <GroupCallSettings groupCallId={groupCallId} onClose={this.handleCloseSettings}/>}\n            </div>\n        );\n    }\n}\n\nGroupCallPanel.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport GroupCallPanel from './GroupCallPanel';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { clamp } from '../../Utils/Common';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { modalManager } from '../../Utils/Modal';\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCall.css';\n\nclass GroupCall extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = {\n            fullScreen: false\n        };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.setPosition();\n\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.add(this.keyboardHandler);\n        window.addEventListener('resize', this.onWindowResize);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.remove(this.keyboardHandler);\n        window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    onClientUpdateGroupCallFullScreen = update => {\n        const { fullscreen } = update;\n\n        this.setState({ fullscreen });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    handleMouseDown = event => {\n        if (event.nativeEvent.which !== 1) return;\n\n        const element = document.getElementById('group-call');\n        if (element) element.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        this.left = parseInt(element.style.left, 10);\n        this.top = parseInt(element.style.top, 10);\n        this.pageX = event.nativeEvent.pageX;\n        this.pageY = event.nativeEvent.pageY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.windowDragging = true;\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('group-call');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\n\n        const element = document.getElementById('group-call');\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.windowDragging = false;\n    };\n\n    setPosition() {\n        const element = document.getElementById('group-call');\n        let { pipParams } = CallStore;\n        if (!pipParams) {\n            pipParams = {\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\n            }\n        }\n\n        const { left: prevLeft, top: prevTop } = pipParams;\n\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\n\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    }\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('group-call');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        CallStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    render() {\n        const { groupCallId } = this.props;\n        const { fullscreen } = this.state;\n\n        return (\n            <div\n                id='group-call'\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\n                onMouseDown={this.handleMouseDown}\n            >\n                <GroupCallPanel groupCallId={groupCallId}/>\n            </div>\n        )\n    }\n}\n\nGroupCall.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default GroupCall;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, maxCount) : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date, sender } = message;\n\n        const dateHint = getDateHint(date);\n\n        const tileControl = sender.user_id ? <UserTile userId={sender.user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={sender} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <>\n                <div className='media-viewer-content'>\n                    {content}\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                </div>\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', maxCount - index, maxCount) : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'/>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    render() {\n        const { chatId, date, style } = this.props;\n\n        return (\n            <div className='media-info' style={style}>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)}/>\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, totalCount) : null}\n                    />\n                    <div style={{ width: 64 }}/>\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport Actions from './Actions';\nimport Call from './Calls/Call';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport GroupCall from './Calls/GroupCall';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport PipPlayer from './Player/PipPlayer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport CallStore from '../Stores/CallStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null,\n            groupCallId: 0,\n            callId: 0\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        CallStore.on('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\n        CallStore.on('clientUpdateCallPanel', this.onClientUpdateCallPanel);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        CallStore.off('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\n        CallStore.off('clientUpdateCallPanel', this.onClientUpdateCallPanel);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdateCallPanel = update => {\n        const { opened, callId } = update;\n\n        this.setState({\n            callId: opened ? callId : 0\n        });\n    };\n\n    onClientUpdateGroupCallPanel = update => {\n        const { opened } = update;\n        const { currentGroupCall } = CallStore;\n\n        this.setState({\n            groupCallId: currentGroupCall && opened ? currentGroupCall.groupCallId : 0\n        });\n    };\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup, options } = update;\n\n        this.handleSelectChat(chatId, messageId, popup, options || AppStore.chatSelectOptions);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false, options = null) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId && !options) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId && !options) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId, options);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            callId,\n            groupCallId,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Actions/>\n                {Boolean(instantViewContent) && <InstantViewer {...instantViewContent} />}\n                {Boolean(mediaViewerContent) && <MediaViewer {...mediaViewerContent} />}\n                {Boolean(profileMediaViewerContent) && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {Boolean(forwardInfo) && <ForwardDialog {...forwardInfo} />}\n                {Boolean(videoInfo) && <PipPlayer {...videoInfo}/>}\n                {Boolean(groupCallId) && <GroupCall groupCallId={groupCallId}/>}\n                {Boolean(callId) && <Call callId={callId}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}